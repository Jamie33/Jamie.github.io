<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jamie&#39;s Blog</title>
  
  <subtitle>Talk is cheap, show me the code.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-08-01T08:28:47.819Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Jamie</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>用 Python3 写微信币价查询机器人</title>
    <link href="http://yoursite.com/2018/08/01/wxbot/"/>
    <id>http://yoursite.com/2018/08/01/wxbot/</id>
    <published>2018-07-31T16:00:00.000Z</published>
    <updated>2018-08-01T08:28:47.819Z</updated>
    
    <content type="html"><![CDATA[<p>本文环境： Windows 10 和 python 3.5</p><p>需要安装 itchat 以及 pyquery 库，直接命令 <code>pip3 install itchat</code> 以及 <code>pip3 install pyquery</code> 进行安装</p><p>币价数据来源：非小号 <a href="https://www.feixiaohao.com/" target="_blank" rel="noopener">https://www.feixiaohao.com/</a></p><p>在群聊和私聊中可实现查询当前币价的功能，如下 </p><p><img src="https://s1.ax2x.com/2018/08/01/53waGE.png" alt="53waGE.png"></p><p>全部代码如下</p><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入需要的库</span></span><br><span class="line"><span class="keyword">import</span> itchat</span><br><span class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="comment"># 币种的缩写和其对应的全称，从 https://www.feixiaohao.com/ 首页中爬取下来并装在字典中</span></span><br><span class="line">coindict = &#123;<span class="string">'BTC'</span>: <span class="string">'bitcoin'</span>, <span class="string">'ETH'</span>: <span class="string">'ethereum'</span>, <span class="string">'XRP'</span>: <span class="string">'ripple'</span>, <span class="string">'BCH'</span>: <span class="string">'bitcoin-cash'</span>, <span class="string">'EOS'</span>: <span class="string">'eos'</span>, <span class="string">'XLM'</span>: <span class="string">'stellar'</span>, <span class="string">'LTC'</span>: <span class="string">'litecoin'</span>, <span class="string">'ADA'</span>: <span class="string">'cardano'</span>, <span class="string">'MIOTA'</span>: <span class="string">'iota'</span>, <span class="string">'USDT'</span>: <span class="string">'tether'</span>, <span class="string">'TRX'</span>: <span class="string">'tron'</span>, <span class="string">'XMR'</span>: <span class="string">'monero'</span>, <span class="string">'NEO'</span>: <span class="string">'neo'</span>, <span class="string">'DASH'</span>: <span class="string">'dash'</span>, <span class="string">'VEN'</span>: <span class="string">'vechain'</span>, <span class="string">'ETC'</span>: <span class="string">'ethereum-classic'</span>, <span class="string">'XEM'</span>: <span class="string">'nem'</span>, <span class="string">'BNB'</span>: <span class="string">'binance-coin'</span>, <span class="string">'OKB'</span>: <span class="string">'okb'</span>, <span class="string">'HT'</span>: <span class="string">'ht'</span>, <span class="string">'ZEC'</span>: <span class="string">'zcash'</span>, <span class="string">'OMG'</span>: <span class="string">'omisego'</span>, <span class="string">'QTUM'</span>: <span class="string">'qtum'</span>, <span class="string">'ZRX'</span>: <span class="string">'0x'</span>, <span class="string">'LSK'</span>: <span class="string">'lisk'</span>, <span class="string">'BCN'</span>: <span class="string">'bytecoin-bcn'</span>, <span class="string">'DCR'</span>: <span class="string">'decred'</span>, <span class="string">'BTG'</span>: <span class="string">'bitgem'</span>, <span class="string">'ICX'</span>: <span class="string">'icon'</span>, <span class="string">'BTS'</span>: <span class="string">'bitshares'</span>, <span class="string">'AE'</span>: <span class="string">'aeternity'</span>, <span class="string">'DGB'</span>: <span class="string">'digibyte'</span>, <span class="string">'MKR'</span>: <span class="string">'maker'</span>, <span class="string">'STEEM'</span>: <span class="string">'steem'</span>, <span class="string">'XVG'</span>: <span class="string">'verge'</span>, <span class="string">'DOGE'</span>: <span class="string">'dogecoin'</span>, <span class="string">'SC'</span>: <span class="string">'siacoin'</span>, <span class="string">'REP'</span>: <span class="string">'augur'</span>, <span class="string">'BTM'</span>: <span class="string">'bitmark'</span>, <span class="string">'BAT'</span>: <span class="string">'basic-attention-token'</span>, <span class="string">'XUC'</span>: <span class="string">'exchange-union'</span>, <span class="string">'GNT'</span>: <span class="string">'golem-network-tokens'</span>, <span class="string">'STRAT'</span>: <span class="string">'stratis'</span>, <span class="string">'NANO'</span>: <span class="string">'raiblocks'</span>, <span class="string">'WAVES'</span>: <span class="string">'waves'</span>, <span class="string">'SNT'</span>: <span class="string">'status'</span>, <span class="string">'HSR'</span>: <span class="string">'hshare'</span>, <span class="string">'WTC'</span>: <span class="string">'walton'</span>, <span class="string">'MAID'</span>: <span class="string">'maidsafecoin'</span>, <span class="string">'IOST'</span>: <span class="string">'iost'</span>, <span class="string">'PPT'</span>: <span class="string">'populous'</span>, <span class="string">'DGD'</span>: <span class="string">'digixdao'</span>, <span class="string">'KMD'</span>: <span class="string">'komodo'</span>, <span class="string">'ARDR'</span>: <span class="string">'ardor'</span>, <span class="string">'GXS'</span>: <span class="string">'gxshares'</span>, <span class="string">'KIN'</span>: <span class="string">'kin'</span>, <span class="string">'ELF'</span>: <span class="string">'aelf'</span>, <span class="string">'AION'</span>: <span class="string">'aion'</span>, <span class="string">'POLY'</span>: <span class="string">'polymath-network'</span>, <span class="string">'LRC'</span>: <span class="string">'loopring'</span>, <span class="string">'CNX'</span>: <span class="string">'cryptonex'</span>, <span class="string">'ZEN'</span>: <span class="string">'zencash'</span>, <span class="string">'EMC'</span>: <span class="string">'emercoin'</span>, <span class="string">'MONA'</span>: <span class="string">'monacoin'</span>, <span class="string">'MANA'</span>: <span class="string">'decentraland'</span>, <span class="string">'FUN'</span>: <span class="string">'funfair'</span>, <span class="string">'ARK'</span>: <span class="string">'ark'</span>, <span class="string">'MCO'</span>: <span class="string">'monaco'</span>, <span class="string">'RDD'</span>: <span class="string">'reddcoin'</span>, <span class="string">'BNT'</span>: <span class="string">'bancor'</span>, <span class="string">'DCN'</span>: <span class="string">'dentacoin'</span>, <span class="string">'PIVX'</span>: <span class="string">'pivx'</span>, <span class="string">'KNC'</span>: <span class="string">'kingn-coin'</span>, <span class="string">'POWR'</span>: <span class="string">'power-ledger'</span>, <span class="string">'DROP'</span>: <span class="string">'dropil'</span>, <span class="string">'LINK'</span>: <span class="string">'chainlink'</span>, <span class="string">'LOOM'</span>: <span class="string">'loom-network'</span>, <span class="string">'ETP'</span>: <span class="string">'metaverse'</span>, <span class="string">'PAYX'</span>: <span class="string">'paypex'</span>, <span class="string">'PAY'</span>: <span class="string">'tenx'</span>, <span class="string">'GAS'</span>: <span class="string">'gas'</span>, <span class="string">'NULS'</span>: <span class="string">'nuls'</span>, <span class="string">'NXT'</span>: <span class="string">'nxt'</span>, <span class="string">'CMT'</span>: <span class="string">'comet'</span>, <span class="string">'BIX'</span>: <span class="string">'bixtoken'</span>, <span class="string">'GBYTE'</span>: <span class="string">'byteball'</span>, <span class="string">'SYS'</span>: <span class="string">'syscoin'</span>, <span class="string">'VERI'</span>: <span class="string">'veritaseum'</span>, <span class="string">'ENG'</span>: <span class="string">'enigma-project'</span>, <span class="string">'ETN'</span>: <span class="string">'electroneum'</span>, <span class="string">'NAS'</span>: <span class="string">'nebulas'</span>, <span class="string">'XZC'</span>: <span class="string">'zcoin'</span>, <span class="string">'ODE'</span>: <span class="string">'odem'</span>, <span class="string">'QASH'</span>: <span class="string">'qash'</span>, <span class="string">'FCT'</span>: <span class="string">'factom'</span>, <span class="string">'ELA'</span>: <span class="string">'elastos'</span>, <span class="string">'CENNZ'</span>: <span class="string">'centrality'</span>, <span class="string">'GTO'</span>: <span class="string">'gifto'</span>, <span class="string">'CTXC'</span>: <span class="string">'cortex'</span>, <span class="string">'SUB'</span>: <span class="string">'substratum'</span>, <span class="string">'STORM'</span>: <span class="string">'storm'</span>, <span class="string">'FSN'</span>: <span class="string">'fusion'</span>, <span class="string">'BQX'</span>: <span class="string">'bitquence'</span>, <span class="string">'CVT'</span>: <span class="string">'cybervein'</span>, <span class="string">'SALT'</span>: <span class="string">'salt'</span>, <span class="string">'DRGN'</span>: <span class="string">'dragonchain'</span>, <span class="string">'ZCL'</span>: <span class="string">'zclassic'</span>, <span class="string">'HPB'</span>: <span class="string">'hpb'</span>, <span class="string">'KICK'</span>: <span class="string">'kickico'</span>, <span class="string">'CVC'</span>: <span class="string">'civic'</span>, <span class="string">'SAN'</span>: <span class="string">'santiment'</span>, <span class="string">'STORJ'</span>: <span class="string">'storj'</span>, <span class="string">'BITB'</span>: <span class="string">'bitbean'</span>, <span class="string">'BLOCK'</span>: <span class="string">'blocknet'</span>, <span class="string">'PART'</span>: <span class="string">'particl'</span>, <span class="string">'GNO'</span>: <span class="string">'gnosis-gno'</span>, <span class="string">'ICN'</span>: <span class="string">'icoin'</span>, <span class="string">'VTC'</span>: <span class="string">'vertcoin'</span>, <span class="string">'SKY'</span>: <span class="string">'skycoin'</span>, <span class="string">'WICC'</span>: <span class="string">'waykichain'</span>, <span class="string">'RLC'</span>: <span class="string">'rlc'</span>, <span class="string">'CRPT'</span>: <span class="string">'crypterium'</span>, <span class="string">'NEBL'</span>: <span class="string">'neblio'</span>, <span class="string">'UBQ'</span>: <span class="string">'ubiq'</span>, <span class="string">'BLZ'</span>: <span class="string">'blazecoin'</span>, <span class="string">'ANT'</span>: <span class="string">'aragon'</span>, <span class="string">'TPAY'</span>: <span class="string">'tokenpay'</span>, <span class="string">'ENJ'</span>: <span class="string">'enjin-coin'</span>, <span class="string">'BTCD'</span>: <span class="string">'bitcoindark'</span>, <span class="string">'PPC'</span>: <span class="string">'peercoin'</span>, <span class="string">'SMT'</span>: <span class="string">'smartmesh'</span>, <span class="string">'AGI'</span>: <span class="string">'singularitynet'</span>, <span class="string">'REQ'</span>: <span class="string">'request-network'</span>, <span class="string">'GRS'</span>: <span class="string">'groestlcoin'</span>, <span class="string">'XDN'</span>: <span class="string">'digitalnote'</span>, <span class="string">'MDS'</span>: <span class="string">'medishares'</span>, <span class="string">'TNB'</span>: <span class="string">'timenewbank'</span>, <span class="string">'CND'</span>: <span class="string">'cindicator'</span>, <span class="string">'C20'</span>: <span class="string">'c20'</span>, <span class="string">'SNM'</span>: <span class="string">'sonm'</span>, <span class="string">'NOAH'</span>: <span class="string">'noah-coin'</span>, <span class="string">'DTR'</span>: <span class="string">'dynamic-trading-rights'</span>, <span class="string">'BFT'</span>: <span class="string">'bnktothefuture'</span>, <span class="string">'RUFF'</span>: <span class="string">'ruff'</span>, <span class="string">'RDN'</span>: <span class="string">'raiden-network-token'</span>, <span class="string">'TKY'</span>: <span class="string">'thekey'</span>, <span class="string">'POE'</span>: <span class="string">'poet'</span>, <span class="string">'R'</span>: <span class="string">'revain'</span>, <span class="string">'QSP'</span>: <span class="string">'quantstamp'</span>, <span class="string">'BTO'</span>: <span class="string">'bottos'</span>, <span class="string">'DBC'</span>: <span class="string">'deepbrain-chain'</span>, <span class="string">'VEE'</span>: <span class="string">'blockv'</span>, <span class="string">'BAY'</span>: <span class="string">'bitbay'</span>, <span class="string">'CS'</span>: <span class="string">'credits'</span>, <span class="string">'AMB'</span>: <span class="string">'amber'</span>, <span class="string">'ABT'</span>: <span class="string">'arcblock'</span>, <span class="string">'BCI'</span>: <span class="string">'bitcoin-interest'</span>, <span class="string">'BITCNY'</span>: <span class="string">'bitcny'</span>, <span class="string">'SPHTX'</span>: <span class="string">'sophiatx'</span>, <span class="string">'XWC'</span>: <span class="string">'whitecoin'</span>, <span class="string">'XAS'</span>: <span class="string">'asch'</span>, <span class="string">'PLR'</span>: <span class="string">'pillar'</span>, <span class="string">'NANJ'</span>: <span class="string">'nanjcoin'</span>, <span class="string">'MNX'</span>: <span class="string">'minexcoin'</span>, <span class="string">'OCN'</span>: <span class="string">'odyssey'</span>, <span class="string">'NMC'</span>: <span class="string">'namecoin'</span>, <span class="string">'TRUE'</span>: <span class="string">'truechain'</span>, <span class="string">'QRL'</span>: <span class="string">'quantum-resistant-ledger'</span>, <span class="string">'EDG'</span>: <span class="string">'edgeless'</span>, <span class="string">'TEN'</span>: <span class="string">'tokenomy'</span>, <span class="string">'XPM'</span>: <span class="string">'primecoin'</span>, <span class="string">'BOS'</span>: <span class="string">'boscoin'</span>, <span class="string">'RKT'</span>: <span class="string">'rock'</span>, <span class="string">'RVN'</span>: <span class="string">'ravencoin'</span>, <span class="string">'SRN'</span>: <span class="string">'sirin-labs-token'</span>, <span class="string">'UNO'</span>: <span class="string">'unobtanium'</span>, <span class="string">'VIA'</span>: <span class="string">'viacoin'</span>, <span class="string">'MTC'</span>: <span class="string">'mtcmeshnetwork'</span>, <span class="string">'MTL'</span>: <span class="string">'metal'</span>, <span class="string">'ACT'</span>: <span class="string">'achain'</span>, <span class="string">'BTX'</span>: <span class="string">'bitcore'</span>, <span class="string">'DENT'</span>: <span class="string">'dent'</span>, <span class="string">'BMC'</span>: <span class="string">'blackmoon-crypto'</span>, <span class="string">'KCS'</span>: <span class="string">'kcs'</span>, <span class="string">'LEND'</span>: <span class="string">'ethlend'</span>, <span class="string">'BCO'</span>: <span class="string">'bridgecoin'</span>, <span class="string">'IHT'</span>: <span class="string">'iht-real-estate-protocol'</span>, <span class="string">'BIG'</span>: <span class="string">'big'</span>, <span class="string">'GNX'</span>: <span class="string">'genaro'</span>, <span class="string">'GVT'</span>: <span class="string">'genesis-vision'</span>, <span class="string">'EMC2'</span>: <span class="string">'einsteinium'</span>, <span class="string">'TIO'</span>: <span class="string">'tradeio'</span>, <span class="string">'TEL'</span>: <span class="string">'telcoin'</span>, <span class="string">'RVR'</span>: <span class="string">'voxels'</span>, <span class="string">'ADX'</span>: <span class="string">'adx-net'</span>, <span class="string">'NAV'</span>: <span class="string">'nav-coin'</span>, <span class="string">'CEO'</span>: <span class="string">'ceo'</span>, <span class="string">'LYM'</span>: <span class="string">'lympo'</span>, <span class="string">'SLS'</span>: <span class="string">'salus'</span>, <span class="string">'DPY'</span>: <span class="string">'delphy'</span>, <span class="string">'LEO'</span>: <span class="string">'leocoin'</span>, <span class="string">'NGC'</span>: <span class="string">'naga'</span>, <span class="string">'AEON'</span>: <span class="string">'aeon'</span>, <span class="string">'STQ'</span>: <span class="string">'storiqa'</span>, <span class="string">'BURST'</span>: <span class="string">'burst'</span>, <span class="string">'HYDRO'</span>: <span class="string">'hydrogen'</span>, <span class="string">'EDO'</span>: <span class="string">'eidoo'</span>, <span class="string">'UTT'</span>: <span class="string">'uttoken'</span>, <span class="string">'TRAC'</span>: <span class="string">'origintrail'</span>, <span class="string">'ZPT'</span>: <span class="string">'zeepin'</span>, <span class="string">'INK'</span>: <span class="string">'ink'</span>, <span class="string">'BRD'</span>: <span class="string">'bread'</span>, <span class="string">'NEU'</span>: <span class="string">'neumark'</span>, <span class="string">'WGR'</span>: <span class="string">'wagerr'</span>, <span class="string">'DNT'</span>: <span class="string">'district0x'</span>, <span class="string">'XSN'</span>: <span class="string">'stakenet'</span>, <span class="string">'NLG'</span>: <span class="string">'gulden'</span>, <span class="string">'LBC'</span>: <span class="string">'library-credit'</span>, <span class="string">'MOBI'</span>: <span class="string">'mobius'</span>, <span class="string">'ION'</span>: <span class="string">'ion'</span>, <span class="string">'REN'</span>: <span class="string">'republic-protocol'</span>, <span class="string">'IPC'</span>: <span class="string">'ipcchain'</span>, <span class="string">'INT'</span>: <span class="string">'intchain'</span>, <span class="string">'SNGLS'</span>: <span class="string">'singulardtv'</span>, <span class="string">'AST'</span>: <span class="string">'airswap'</span>, <span class="string">'SOAR'</span>: <span class="string">'soarcoin'</span>, <span class="string">'GAME'</span>: <span class="string">'gamecredits'</span>, <span class="string">'CPC'</span>: <span class="string">'capricoin'</span>, <span class="string">'PURA'</span>: <span class="string">'pura'</span>, <span class="string">'SPANK'</span>: <span class="string">'spankchain'</span>, <span class="string">'WINGS'</span>: <span class="string">'wings'</span>, <span class="string">'ECA'</span>: <span class="string">'electra'</span>, <span class="string">'TOMO'</span>: <span class="string">'tomochain'</span>, <span class="string">'ITC'</span>: <span class="string">'iotchain'</span>, <span class="string">'FTC'</span>: <span class="string">'feathercoin'</span>, <span class="string">'UTNP'</span>: <span class="string">'universa'</span>, <span class="string">'RNTB'</span>: <span class="string">'bitrent'</span>, <span class="string">'MSP'</span>: <span class="string">'mothership'</span>, <span class="string">'OST'</span>: <span class="string">'simpletoken'</span>, <span class="string">'DMT'</span>: <span class="string">'dmarket'</span>, <span class="string">'TV'</span>: <span class="string">'tvcoin'</span>, <span class="string">'COV'</span>: <span class="string">'covesting'</span>, <span class="string">'CPX'</span>: <span class="string">'apex'</span>, <span class="string">'HVN'</span>: <span class="string">'hive'</span>, <span class="string">'XCP'</span>: <span class="string">'counterparty'</span>, <span class="string">'UTK'</span>: <span class="string">'utoken'</span>, <span class="string">'XBY'</span>: <span class="string">'xtrabytes'</span>, <span class="string">'CLOAK'</span>: <span class="string">'cloakcoin'</span>, <span class="string">'SBD'</span>: <span class="string">'steem-dollars'</span>, <span class="string">'BAX'</span>: <span class="string">'babb'</span>, <span class="string">'PPP'</span>: <span class="string">'paypie'</span>, <span class="string">'TKN'</span>: <span class="string">'tokencard'</span>, <span class="string">'THC'</span>: <span class="string">'hempcoin'</span>, <span class="string">'CHAT'</span>: <span class="string">'chatcoin'</span>, <span class="string">'DCT'</span>: <span class="string">'decent'</span>, <span class="string">'AURA'</span>: <span class="string">'aurora-dao'</span>, <span class="string">'DBET'</span>: <span class="string">'decent-bet'</span>, <span class="string">'HPY'</span>: <span class="string">'hyperpay'</span>, <span class="string">'APPC'</span>: <span class="string">'appcoins'</span>, <span class="string">'COB'</span>: <span class="string">'cobinhood'</span>, <span class="string">'PRE'</span>: <span class="string">'presearch'</span>, <span class="string">'RPX'</span>: <span class="string">'redpulse'</span>, <span class="string">'WPR'</span>: <span class="string">'wepowernetwork'</span>, <span class="string">'HAV'</span>: <span class="string">'havven'</span>, <span class="string">'MOD'</span>: <span class="string">'modum'</span>, <span class="string">'PST'</span>: <span class="string">'primas'</span>, <span class="string">'EVN'</span>: <span class="string">'envion'</span>, <span class="string">'GRID'</span>: <span class="string">'grid'</span>, <span class="string">'TNT'</span>: <span class="string">'tierion'</span>, <span class="string">'PHR'</span>: <span class="string">'phore'</span>, <span class="string">'CREDO'</span>: <span class="string">'credo'</span>, <span class="string">'ADT'</span>: <span class="string">'adtoken'</span>, <span class="string">'UCT'</span>: <span class="string">'ucot'</span>, <span class="string">'LUN'</span>: <span class="string">'lunyr'</span>, <span class="string">'LCC'</span>: <span class="string">'lcc'</span>, <span class="string">'TAAS'</span>: <span class="string">'taas'</span>, <span class="string">'PPY'</span>: <span class="string">'peerplays-ppy'</span>, <span class="string">'UGC'</span>: <span class="string">'ugchain'</span>, <span class="string">'XEL'</span>: <span class="string">'elastic'</span>, <span class="string">'SHIFT'</span>: <span class="string">'shift'</span>, <span class="string">'CMCT'</span>: <span class="string">'crowd-machine'</span>, <span class="string">'CDT'</span>: <span class="string">'coindash'</span>, <span class="string">'YLB'</span>: <span class="string">'abcoin'</span>, <span class="string">'NMR'</span>: <span class="string">'numeraire'</span>, <span class="string">'SWTH'</span>: <span class="string">'switcheo'</span>, <span class="string">'HMQ'</span>: <span class="string">'humaniq'</span>, <span class="string">'CFI'</span>: <span class="string">'cofound-it'</span>, <span class="string">'FUEL'</span>: <span class="string">'etherparty'</span>, <span class="string">'PRO'</span>: <span class="string">'propy'</span>, <span class="string">'LINDA'</span>: <span class="string">'linda'</span>, <span class="string">'BIS'</span>: <span class="string">'bismuth'</span>, <span class="string">'TFD'</span>: <span class="string">'te-food'</span>, <span class="string">'COLX'</span>: <span class="string">'colossuscoinxt'</span>, <span class="string">'MED'</span>: <span class="string">'mediterraneancoin'</span>, <span class="string">'IFC'</span>: <span class="string">'infinitecoin'</span>, <span class="string">'BANCA'</span>: <span class="string">'banca'</span>, <span class="string">'ZCO'</span>: <span class="string">'zebi'</span>, <span class="string">'SWM'</span>: <span class="string">'swarm-fund'</span>, <span class="string">'INCNT'</span>: <span class="string">'incent'</span>, <span class="string">'OCT'</span>: <span class="string">'oraclechain'</span>, <span class="string">'PASC'</span>: <span class="string">'pascal-coin'</span>, <span class="string">'1ST'</span>: <span class="string">'firstblood'</span>, <span class="string">'BLT'</span>: <span class="string">'bloomtoken'</span>, <span class="string">'WABI'</span>: <span class="string">'wabi'</span>, <span class="string">'AMP'</span>: <span class="string">'synereo'</span>, <span class="string">'QLC'</span>: <span class="string">'qlink'</span>, <span class="string">'MER'</span>: <span class="string">'mercury'</span>, <span class="string">'FLASH'</span>: <span class="string">'flash'</span>, <span class="string">'GRC'</span>: <span class="string">'gridcoin'</span>, <span class="string">'YOYOW'</span>: <span class="string">'yoyow'</span>, <span class="string">'TUSD'</span>: <span class="string">'true-usd'</span>, <span class="string">'MDA'</span>: <span class="string">'moeda-loyalty-points'</span>, <span class="string">'CAS'</span>: <span class="string">'cashaa'</span>, <span class="string">'VIBE'</span>: <span class="string">'vibe'</span>, <span class="string">'AU'</span>: <span class="string">'aurumcoin'</span>, <span class="string">'UP'</span>: <span class="string">'uptoken'</span>, <span class="string">'SENT'</span>: <span class="string">'sentinel'</span>, <span class="string">'BCPT'</span>: <span class="string">'blockmason'</span>, <span class="string">'QAU'</span>: <span class="string">'quantum'</span>, <span class="string">'NVC'</span>: <span class="string">'novacoin'</span>, <span class="string">'XST'</span>: <span class="string">'stealthcoin'</span>, <span class="string">'PRA'</span>: <span class="string">'prochain'</span>, <span class="string">'GUP'</span>: <span class="string">'guppy'</span>, <span class="string">'STX'</span>: <span class="string">'stox'</span>, <span class="string">'VIB'</span>: <span class="string">'viberate'</span>, <span class="string">'HTML'</span>: <span class="string">'html-coin'</span>, <span class="string">'XDCE'</span>: <span class="string">'xinfin-network'</span>, <span class="string">'MGO'</span>: <span class="string">'mobilego'</span>, <span class="string">'ART'</span>: <span class="string">'maecenas'</span>, <span class="string">'ZSC'</span>: <span class="string">'zeusshield'</span>, <span class="string">'MLN'</span>: <span class="string">'melon'</span>, <span class="string">'DIME'</span>: <span class="string">'dimecoin'</span>, <span class="string">'PLBT'</span>: <span class="string">'polybius'</span>, <span class="string">'ENU'</span>: <span class="string">'enumivo'</span>, <span class="string">'TRIG'</span>: <span class="string">'triggers'</span>, <span class="string">'EDR'</span>: <span class="string">'e-dinar-coin'</span>, <span class="string">'EVX'</span>: <span class="string">'everex'</span>, <span class="string">'BWK'</span>: <span class="string">'bulwark'</span>, <span class="string">'XP'</span>: <span class="string">'experience-points'</span>, <span class="string">'HST'</span>: <span class="string">'decision-token'</span>, <span class="string">'POT'</span>: <span class="string">'potcoin'</span>, <span class="string">'BQT'</span>: <span class="string">'bqt'</span>, <span class="string">'MLM'</span>: <span class="string">'mktcoin'</span>, <span class="string">'XRL'</span>: <span class="string">'rialto'</span>, <span class="string">'DXT'</span>: <span class="string">'datawallet'</span>, <span class="string">'TIX'</span>: <span class="string">'tickets'</span>, <span class="string">'EXP'</span>: <span class="string">'expanse'</span>, <span class="string">'UQC'</span>: <span class="string">'uquid-coin'</span>, <span class="string">'BLK'</span>: <span class="string">'blackcoin'</span>, <span class="string">'CRW'</span>: <span class="string">'crown'</span>, <span class="string">'VRC'</span>: <span class="string">'vericoin'</span>, <span class="string">'DTB'</span>: <span class="string">'databits'</span>, <span class="string">'MUE'</span>: <span class="string">'monetaryunit'</span>, <span class="string">'BBN'</span>: <span class="string">'banyan-network'</span>, <span class="string">'ELEC'</span>: <span class="string">'electrifyasia'</span>, <span class="string">'MGC'</span>: <span class="string">'mergecoin'</span>, <span class="string">'XES'</span>: <span class="string">'proxeus'</span>, <span class="string">'PRG'</span>: <span class="string">'paragon'</span>, <span class="string">'XSH'</span>: <span class="string">'shield'</span>, <span class="string">'ECOB'</span>: <span class="string">'ecobit'</span>, <span class="string">'HXX'</span>: <span class="string">'hexx'</span>, <span class="string">'CLAM'</span>: <span class="string">'clams'</span>, <span class="string">'UIP'</span>: <span class="string">'unlimitedip'</span>, <span class="string">'SHIP'</span>: <span class="string">'shipchain'</span>, <span class="string">'RBY'</span>: <span class="string">'rubycoin'</span>, <span class="string">'COSS'</span>: <span class="string">'coss'</span>, <span class="string">'DMD'</span>: <span class="string">'diamond'</span>, <span class="string">'ONION'</span>: <span class="string">'deeponion'</span>, <span class="string">'BITG'</span>: <span class="string">'bitcoin-green'</span>, <span class="string">'OXY'</span>: <span class="string">'oxycoin'</span>, <span class="string">'NTK'</span>: <span class="string">'neurotoken'</span>, <span class="string">'REM'</span>: <span class="string">'remme'</span>, <span class="string">'SNC'</span>: <span class="string">'suncontract'</span>, <span class="string">'CV'</span>: <span class="string">'carvertical'</span>, <span class="string">'SIB'</span>: <span class="string">'sibcoin'</span>, <span class="string">'LA'</span>: <span class="string">'latoken'</span>, <span class="string">'XSPEC'</span>: <span class="string">'spectrecoin'</span>, <span class="string">'NYC'</span>: <span class="string">'newyorkcoin'</span>, <span class="string">'GREV2'</span>: <span class="string">'greencoin'</span>, <span class="string">'LOC'</span>: <span class="string">'lockchain'</span>, <span class="string">'PRL'</span>: <span class="string">'oyster'</span>, <span class="string">'MTH'</span>: <span class="string">'monetha'</span>, <span class="string">'DYN'</span>: <span class="string">'dynamic'</span>, <span class="string">'YT'</span>: <span class="string">'yoexstoken'</span>, <span class="string">'SLT'</span>: <span class="string">'smartlands'</span>, <span class="string">'TIME'</span>: <span class="string">'chronobank'</span>, <span class="string">'MOON'</span>: <span class="string">'mooncoin'</span>, <span class="string">'ORME'</span>: <span class="string">'ormeus-coin'</span>, <span class="string">'BCA'</span>: <span class="string">'bitcoin-atom'</span>, <span class="string">'OAX'</span>: <span class="string">'oax'</span>, <span class="string">'RADS'</span>: <span class="string">'radium'</span>, <span class="string">'DIM'</span>: <span class="string">'dimcoin'</span>, <span class="string">'TAU'</span>: <span class="string">'lamden'</span>, <span class="string">'BPT'</span>: <span class="string">'blockport'</span>, <span class="string">'IOC'</span>: <span class="string">'iocoin'</span>, <span class="string">'DEV'</span>: <span class="string">'deviantcoin'</span>, <span class="string">'IXT'</span>: <span class="string">'ixledger'</span>, <span class="string">'GCR'</span>: <span class="string">'global-currency-reserve'</span>, <span class="string">'CHSB'</span>: <span class="string">'swissborg'</span>, <span class="string">'TSL'</span>: <span class="string">'tesla'</span>, <span class="string">'MTN'</span>: <span class="string">'motion'</span>, <span class="string">'ARN'</span>: <span class="string">'aeron'</span>, <span class="string">'CHP'</span>: <span class="string">'coinpoker'</span>, <span class="string">'CAPP'</span>: <span class="string">'cappasity'</span>, <span class="string">'ADH'</span>: <span class="string">'adhive'</span>, <span class="string">'NLC2'</span>: <span class="string">'nolimitcoin'</span>, <span class="string">'NPX'</span>: <span class="string">'napoleonx'</span>, <span class="string">'BOT'</span>: <span class="string">'bodhi'</span>, <span class="string">'DICE'</span>: <span class="string">'etheroll'</span>, <span class="string">'GOLOS'</span>: <span class="string">'golos'</span>, <span class="string">'DLT'</span>: <span class="string">'agrello-delta'</span>, <span class="string">'DBIX'</span>: <span class="string">'dubaicoin-dbix'</span>, <span class="string">'DADI'</span>: <span class="string">'dadi'</span>, <span class="string">'LUX'</span>: <span class="string">'luxcoin'</span>, <span class="string">'ELIX'</span>: <span class="string">'elixir'</span>, <span class="string">'SEQ'</span>: <span class="string">'sequence'</span>, <span class="string">'ZRC'</span>: <span class="string">'zrcoin'</span>, <span class="string">'GCN'</span>: <span class="string">'gcoin'</span>, <span class="string">'KRM'</span>: <span class="string">'karma'</span>, <span class="string">'GAM'</span>: <span class="string">'gambit'</span>, <span class="string">'XMY'</span>: <span class="string">'myriad'</span>, <span class="string">'ERO'</span>: <span class="string">'eroscoin'</span>, <span class="string">'OK'</span>: <span class="string">'okcash'</span>, <span class="string">'CEX'</span>: <span class="string">'cexcoin'</span>, <span class="string">'OMNI'</span>: <span class="string">'omni'</span>, <span class="string">'APX'</span>: <span class="string">'apx'</span>, <span class="string">'IDH'</span>: <span class="string">'indahash'</span>, <span class="string">'FDZ'</span>: <span class="string">'friends'</span>, <span class="string">'CVCOIN'</span>: <span class="string">'cvcoin'</span>, <span class="string">'GRFT'</span>: <span class="string">'graft'</span>, <span class="string">'MUSIC'</span>: <span class="string">'musicoin'</span>, <span class="string">'NBAI'</span>: <span class="string">'nebula-ai'</span>, <span class="string">'REBL'</span>: <span class="string">'rebellious'</span>, <span class="string">'ALQO'</span>: <span class="string">'alqo'</span>, <span class="string">'SHND'</span>: <span class="string">'stronghands'</span>, <span class="string">'AID'</span>: <span class="string">'aidcoin'</span>, <span class="string">'DIVX'</span>: <span class="string">'divi'</span>, <span class="string">'PND'</span>: <span class="string">'pandacoin-pnd'</span>, <span class="string">'AXP'</span>: <span class="string">'axpire'</span>, <span class="string">'CXO'</span>: <span class="string">'cargox'</span>, <span class="string">'EKO'</span>: <span class="string">'echolink'</span>, <span class="string">'HKN'</span>: <span class="string">'hacken'</span>, <span class="string">'CSNO'</span>: <span class="string">'bitdice'</span>, <span class="string">'LATX'</span>: <span class="string">'latiumx'</span>, <span class="string">'LOCI'</span>: <span class="string">'locipro'</span>, <span class="string">'MEDIC'</span>: <span class="string">'mediccoin'</span>, <span class="string">'PTOY'</span>: <span class="string">'patientory'</span>, <span class="string">'FLUZ'</span>: <span class="string">'fluz-fluz'</span>, <span class="string">'AIR'</span>: <span class="string">'airtoken'</span>, <span class="string">'CAG'</span>: <span class="string">'change'</span>, <span class="string">'BSD'</span>: <span class="string">'bitsend'</span>, <span class="string">'SLR'</span>: <span class="string">'solarcoin'</span>, <span class="string">'DOT'</span>: <span class="string">'dotcoin'</span>, <span class="string">'RISE'</span>: <span class="string">'rise'</span>, <span class="string">'EXRN'</span>: <span class="string">'exrnchain'</span>, <span class="string">'SWT'</span>: <span class="string">'swarm-city'</span>, <span class="string">'FLO'</span>: <span class="string">'florincoin'</span>, <span class="string">'J8T'</span>: <span class="string">'jet8'</span>, <span class="string">'LEV'</span>: <span class="string">'leverj'</span>, <span class="string">'ESP'</span>: <span class="string">'espers'</span>, <span class="string">'AVT'</span>: <span class="string">'aventus'</span>, <span class="string">'POLL'</span>: <span class="string">'clearpoll'</span>, <span class="string">'IPL'</span>: <span class="string">'insurepal'</span>, <span class="string">'APH'</span>: <span class="string">'aphelion'</span>, <span class="string">'EXY'</span>: <span class="string">'experty'</span>, <span class="string">'B2B'</span>: <span class="string">'b2bx'</span>, <span class="string">'IFT'</span>: <span class="string">'investfeed'</span>, <span class="string">'LMC'</span>: <span class="string">'lomocoin'</span>, <span class="string">'ABY'</span>: <span class="string">'applebyte'</span>, <span class="string">'GET'</span>: <span class="string">'guts-tickets'</span>, <span class="string">'EAC'</span>: <span class="string">'earthcoin'</span>, <span class="string">'COFI'</span>: <span class="string">'coinfi'</span>, <span class="string">'DRT'</span>: <span class="string">'domraider'</span>, <span class="string">'CURE'</span>: <span class="string">'curecoin'</span>, <span class="string">'FLIXX'</span>: <span class="string">'flixxo'</span>, <span class="string">'XLR'</span>: <span class="string">'solaris'</span>, <span class="string">'GBX'</span>: <span class="string">'gobyte'</span>, <span class="string">'BERRY'</span>: <span class="string">'rentberry'</span>, <span class="string">'DEB'</span>: <span class="string">'debitum-network'</span>, <span class="string">'INF'</span>: <span class="string">'infchain'</span>, <span class="string">'PIRL'</span>: <span class="string">'pirl'</span>, <span class="string">'XAUR'</span>: <span class="string">'xaurum'</span>, <span class="string">'PKT'</span>: <span class="string">'playkey'</span>, <span class="string">'IDXM'</span>: <span class="string">'idex-membership'</span>, <span class="string">'NEOS'</span>: <span class="string">'neoscoin'</span>, <span class="string">'TOPC'</span>: <span class="string">'topc'</span>, <span class="string">'TFL'</span>: <span class="string">'trueflip'</span>, <span class="string">'BTCZ'</span>: <span class="string">'bitcoinz'</span>, <span class="string">'TRF'</span>: <span class="string">'travelflex'</span>, <span class="string">'BNTY'</span>: <span class="string">'bounty0x'</span>, <span class="string">'AC'</span>: <span class="string">'asiacoin'</span>, <span class="string">'RVT'</span>: <span class="string">'rivetz'</span>, <span class="string">'MINT'</span>: <span class="string">'mintcoin'</span>, <span class="string">'ATM'</span>: <span class="string">'attention-token-of-media'</span>, <span class="string">'MYST'</span>: <span class="string">'mysterium'</span>, <span class="string">'BDG'</span>: <span class="string">'bitdegree'</span>, <span class="string">'ZAP'</span>: <span class="string">'zap'</span>, <span class="string">'PLU'</span>: <span class="string">'pluton'</span>, <span class="string">'ATB'</span>: <span class="string">'atbcoin'</span>, <span class="string">'MITX'</span>: <span class="string">'morpheus-labs'</span>, <span class="string">'COVAL'</span>: <span class="string">'circuits-of-value'</span>, <span class="string">'ENRG'</span>: <span class="string">'energycoin'</span>, <span class="string">'OBITS'</span>: <span class="string">'obits'</span>, <span class="string">'HWC'</span>: <span class="string">'hollywoodcoin'</span>, <span class="string">'TGT'</span>: <span class="string">'target-coin'</span>, <span class="string">'HBT'</span>: <span class="string">'hubii-network'</span>, <span class="string">'MAX'</span>: <span class="string">'maxcoin'</span>, <span class="string">'DNA'</span>: <span class="string">'encrypgen'</span>, <span class="string">'TRST'</span>: <span class="string">'trust'</span>, <span class="string">'LIFE'</span>: <span class="string">'life'</span>, <span class="string">'TOA'</span>: <span class="string">'toacoin'</span>, <span class="string">'MTX'</span>: <span class="string">'matryx'</span>, <span class="string">'HBZ'</span>: <span class="string">'helbiz'</span>, <span class="string">'EVR'</span>: <span class="string">'everus'</span>, <span class="string">'SENC'</span>: <span class="string">'sentinel-chain'</span>, <span class="string">'1337'</span>: <span class="string">'1337coin'</span>, <span class="string">'ICOS'</span>: <span class="string">'icos'</span>, <span class="string">'1WO'</span>: <span class="string">'1world'</span>, <span class="string">'BCY'</span>: <span class="string">'bitcrystals'</span>, <span class="string">'PRIX'</span>: <span class="string">'privatix'</span>, <span class="string">'BEE'</span>: <span class="string">'bee-token'</span>, <span class="string">'SNOV'</span>: <span class="string">'snovio'</span>, <span class="string">'BEZ'</span>: <span class="string">'bezop'</span>, <span class="string">'POLIS'</span>: <span class="string">'polis'</span>, <span class="string">'TX'</span>: <span class="string">'transfercoin'</span>, <span class="string">'PTC'</span>: <span class="string">'pesetacoin'</span>, <span class="string">'IOP'</span>: <span class="string">'internet-of-people'</span>, <span class="string">'ZLA'</span>: <span class="string">'zla'</span>, <span class="string">'EVE'</span>: <span class="string">'devery'</span>, <span class="string">'VME'</span>: <span class="string">'verime'</span>, <span class="string">'GCC'</span>: <span class="string">'guccionecoin'</span>, <span class="string">'XBC'</span>: <span class="string">'bitcoin-plus'</span>, <span class="string">'TKS'</span>: <span class="string">'tokes'</span>, <span class="string">'FLDC'</span>: <span class="string">'foldingcoin'</span>, <span class="string">'XNK'</span>: <span class="string">'ink-protocol'</span>, <span class="string">'PCL'</span>: <span class="string">'peculium'</span>, <span class="string">'ADB'</span>: <span class="string">'adbank'</span>, <span class="string">'NCT'</span>: <span class="string">'polyswarm'</span>, <span class="string">'DOVU'</span>: <span class="string">'dovu'</span>, <span class="string">'SCL'</span>: <span class="string">'sociall'</span>, <span class="string">'UNIT'</span>: <span class="string">'universal-currency'</span>, <span class="string">'PARETO'</span>: <span class="string">'pareto-network'</span>, <span class="string">'ALIS'</span>: <span class="string">'alis'</span>, <span class="string">'SETH'</span>: <span class="string">'sether'</span>, <span class="string">'PFR'</span>: <span class="string">'payfair'</span>, <span class="string">'BASH'</span>: <span class="string">'luckchain'</span>, <span class="string">'FID'</span>: <span class="string">'bitfid'</span>, <span class="string">'PBL'</span>: <span class="string">'publica'</span>, <span class="string">'SYNX'</span>: <span class="string">'syndicate'</span>, <span class="string">'HEAT'</span>: <span class="string">'heat-ledger'</span>, <span class="string">'UFR'</span>: <span class="string">'upfiring'</span>, <span class="string">'ENT'</span>: <span class="string">'eternity'</span>, <span class="string">'KORE'</span>: <span class="string">'korecoin'</span>, <span class="string">'PUT'</span>: <span class="string">'putincoin'</span>, <span class="string">'LND'</span>: <span class="string">'lendingblock'</span>, <span class="string">'WRC'</span>: <span class="string">'worldcore'</span>, <span class="string">'OTN'</span>: <span class="string">'open-trading-network'</span>, <span class="string">'ALT'</span>: <span class="string">'altcoin-alt'</span>, <span class="string">'EVC'</span>: <span class="string">'eventchain'</span>, <span class="string">'PINK'</span>: <span class="string">'pinkcoin'</span>, <span class="string">'AUR'</span>: <span class="string">'auroracoin'</span>, <span class="string">'BET'</span>: <span class="string">'betacoin'</span>, <span class="string">'ERC'</span>: <span class="string">'europecoin'</span>, <span class="string">'GLD'</span>: <span class="string">'goldcoin'</span>, <span class="string">'DTH'</span>: <span class="string">'dether'</span>, <span class="string">'BETR'</span>: <span class="string">'betterbetting'</span>, <span class="string">'GLA'</span>: <span class="string">'gladius-token'</span>, <span class="string">'YOC'</span>: <span class="string">'yocoin'</span>, <span class="string">'BUN'</span>: <span class="string">'bunnycoin'</span>, <span class="string">'SIG'</span>: <span class="string">'signal-token'</span>, <span class="string">'IND'</span>: <span class="string">'indorse-token'</span>, <span class="string">'MEME'</span>: <span class="string">'memetic'</span>, <span class="string">'DOPE'</span>: <span class="string">'dopecoin'</span>, <span class="string">'INSTAR'</span>: <span class="string">'insights-network'</span>, <span class="string">'LDC'</span>: <span class="string">'laidecoin'</span>, <span class="string">'CBX'</span>: <span class="string">'cryptogenic-bullion'</span>, <span class="string">'DGPT'</span>: <span class="string">'digipulse'</span>, <span class="string">'VSL'</span>: <span class="string">'vslice'</span>, <span class="string">'GETX'</span>: <span class="string">'guaranteed-ethurance-token-extra'</span>, <span class="string">'CCRB'</span>: <span class="string">'cryptocarbon'</span>, <span class="string">'LALA'</span>: <span class="string">'lala-world'</span>, <span class="string">'SPHR'</span>: <span class="string">'sphere'</span>, <span class="string">'ARY'</span>: <span class="string">'block-array'</span>, <span class="string">'SPR'</span>: <span class="string">'spreadcoin'</span>, <span class="string">'GEO'</span>: <span class="string">'geocoin'</span>, <span class="string">'HUC'</span>: <span class="string">'huntercoin'</span>, <span class="string">'GAT'</span>: <span class="string">'aextoken'</span>, <span class="string">'HGT'</span>: <span class="string">'hellogold'</span>, <span class="string">'USNBT'</span>: <span class="string">'nubits'</span>, <span class="string">'HQX'</span>: <span class="string">'hoqu'</span>, <span class="string">'QWARK'</span>: <span class="string">'qwark'</span>, <span class="string">'OPT'</span>: <span class="string">'opus'</span>, <span class="string">'SSS'</span>: <span class="string">'sharechain'</span>, <span class="string">'QRK'</span>: <span class="string">'quark'</span>, <span class="string">'2GIVE'</span>: <span class="string">'2give'</span>, <span class="string">'EXCL'</span>: <span class="string">'exclusivecoin'</span>, <span class="string">'SXUT'</span>: <span class="string">'spectre-utility'</span>, <span class="string">'VASH'</span>: <span class="string">'vpncoin'</span>, <span class="string">'TRC'</span>: <span class="string">'terracoin'</span>, <span class="string">'EBST'</span>: <span class="string">'eboostcoin'</span>, <span class="string">'BSTN'</span>: <span class="string">'bitstation'</span>, <span class="string">'NXC'</span>: <span class="string">'nexium'</span>, <span class="string">'FDX'</span>: <span class="string">'fidentiax'</span>, <span class="string">'ATL'</span>: <span class="string">'atlant'</span>, <span class="string">'TIPS'</span>: <span class="string">'fedoracoin'</span>, <span class="string">'VZT'</span>: <span class="string">'vezt'</span>, <span class="string">'ADST'</span>: <span class="string">'adshares'</span>, <span class="string">'CMC'</span>: <span class="string">'mvscmc'</span>, <span class="string">'IPT'</span>: <span class="string">'etchain'</span>, <span class="string">'SUMO'</span>: <span class="string">'sumokoin'</span>, <span class="string">'STAR'</span>: <span class="string">'starbase'</span>, <span class="string">'LEAF'</span>: <span class="string">'leafcoin'</span>, <span class="string">'RUPX'</span>: <span class="string">'rupaya'</span>, <span class="string">'ZTC'</span>: <span class="string">'zeitcoin'</span>, <span class="string">'VRM'</span>: <span class="string">'veriumreserve'</span>, <span class="string">'SXC'</span>: <span class="string">'sexcoin'</span>, <span class="string">'PLAY'</span>: <span class="string">'herocoin'</span>, <span class="string">'CANN'</span>: <span class="string">'cannabiscoin'</span>, <span class="string">'IPSX'</span>: <span class="string">'ip-exchange'</span>, <span class="string">'CPY'</span>: <span class="string">'copytrack'</span>, <span class="string">'ADC'</span>: <span class="string">'audiocoin'</span>, <span class="string">'HYP'</span>: <span class="string">'hyperstake'</span>, <span class="string">'CPAY'</span>: <span class="string">'cryptopay'</span>, <span class="string">'VIT'</span>: <span class="string">'vice-industry-token'</span>, <span class="string">'XHI'</span>: <span class="string">'hicoin'</span>, <span class="string">'RAIN'</span>: <span class="string">'condensate'</span>, <span class="string">'BRK'</span>: <span class="string">'breakout'</span>, <span class="string">'AMLT'</span>: <span class="string">'amlt'</span>, <span class="string">'SPF'</span>: <span class="string">'sportyco'</span>, <span class="string">'MVC'</span>: <span class="string">'mvchain'</span>, <span class="string">'SEND'</span>: <span class="string">'social-send'</span>, <span class="string">'BLU'</span>: <span class="string">'bluecoin'</span>, <span class="string">'CRAVE'</span>: <span class="string">'crave'</span>, <span class="string">'IXC'</span>: <span class="string">'ixcoin'</span>, <span class="string">'CL'</span>: <span class="string">'coinlancer'</span>, <span class="string">'NTRN'</span>: <span class="string">'neutron'</span>, <span class="string">'PIX'</span>: <span class="string">'lampix'</span>, <span class="string">'BIO'</span>: <span class="string">'biocoin'</span>, <span class="string">'ODN'</span>: <span class="string">'obsidian'</span>, <span class="string">'ANC'</span>: <span class="string">'anoncoin'</span>, <span class="string">'SGR'</span>: <span class="string">'sugar-exchange'</span>, <span class="string">'DNR'</span>: <span class="string">'denarius-dnr'</span>, <span class="string">'HUSH'</span>: <span class="string">'hush'</span>, <span class="string">'FCN'</span>: <span class="string">'fantomcoin'</span>, <span class="string">'KRB'</span>: <span class="string">'karbowanec'</span>, <span class="string">'WSX'</span>: <span class="string">'wearesatoshi'</span>, <span class="string">'I0C'</span>: <span class="string">'i0coin'</span>, <span class="string">'FYP'</span>: <span class="string">'flypme'</span>, <span class="string">'VOISE'</span>: <span class="string">'voisecom'</span>, <span class="string">'PING'</span>: <span class="string">'cryptoping'</span>, <span class="string">'BON'</span>: <span class="string">'bonpay'</span>, <span class="string">'ETBS'</span>: <span class="string">'ethbits'</span>, <span class="string">'CMPCO'</span>: <span class="string">'campuscoin'</span>, <span class="string">'EGC'</span>: <span class="string">'evergreencoin'</span>, <span class="string">'ING'</span>: <span class="string">'iungo'</span>, <span class="string">'RC'</span>: <span class="string">'racecoin'</span>, <span class="string">'SKIN'</span>: <span class="string">'skincoin'</span>, <span class="string">'POSW'</span>: <span class="string">'posw-coin'</span>, <span class="string">'DABT'</span>: <span class="string">'dabt'</span>, <span class="string">'YBCT'</span>: <span class="string">'ybcoin'</span>, <span class="string">'WISH'</span>: <span class="string">'mywish'</span>, <span class="string">'EFL'</span>: <span class="string">'e-gulden'</span>, <span class="string">'EZT'</span>: <span class="string">'eztoken'</span>, <span class="string">'LDOGE'</span>: <span class="string">'litedoge'</span>, <span class="string">'CARBON'</span>: <span class="string">'carboncoin'</span>, <span class="string">'HAC'</span>: <span class="string">'hackspace-capital'</span>, <span class="string">'XBP'</span>: <span class="string">'blitzpredict'</span>, <span class="string">'VULC'</span>: <span class="string">'vulcano'</span>, <span class="string">'ZOI'</span>: <span class="string">'zoin'</span>, <span class="string">'FUNK'</span>: <span class="string">'the-cypherfunks'</span>, <span class="string">'VIU'</span>: <span class="string">'viuly'</span>, <span class="string">'AIX'</span>: <span class="string">'aigang'</span>, <span class="string">'TRUST'</span>: <span class="string">'trustplus'</span>, <span class="string">'ONG'</span>: <span class="string">'ongsocial'</span>, <span class="string">'NOBL'</span>: <span class="string">'noblecoin'</span>, <span class="string">'CAT`'</span>: <span class="string">'blockcat'</span>, <span class="string">'CREA'</span>: <span class="string">'creativecoin'</span>, <span class="string">'PYLNT'</span>: <span class="string">'pylon-network'</span>, <span class="string">'DGC'</span>: <span class="string">'digitalcoin'</span>, <span class="string">'NIO'</span>: <span class="string">'autonio'</span>, <span class="string">'BPL'</span>: <span class="string">'blockpool'</span>, <span class="string">'V'</span>: <span class="string">'version'</span>, <span class="string">'CHC'</span>: <span class="string">'chaincoin'</span>, <span class="string">'808'</span>: <span class="string">'808coin'</span>, <span class="string">'MNTP'</span>: <span class="string">'goldmint'</span>, <span class="string">'UNI'</span>: <span class="string">'universe'</span>, <span class="string">'ORE'</span>: <span class="string">'galactrum'</span>, <span class="string">'AMN'</span>: <span class="string">'amon'</span>, <span class="string">'EBTC'</span>: <span class="string">'ebtcnew'</span>, <span class="string">'MOTO'</span>: <span class="string">'motocoin'</span>, <span class="string">'XTL'</span>: <span class="string">'stellite'</span>, <span class="string">'XPTX'</span>: <span class="string">'platinumbar'</span>, <span class="string">'TES'</span>: <span class="string">'teslacoin'</span>, <span class="string">'XMG'</span>: <span class="string">'magi'</span>, <span class="string">'TZC'</span>: <span class="string">'trezarcoin'</span>, <span class="string">'BHC'</span>: <span class="string">'blackholecoin'</span>, <span class="string">'XLC'</span>: <span class="string">'leviarcoin'</span>, <span class="string">'ITNS'</span>: <span class="string">'intensecoin'</span>, <span class="string">'SIC'</span>: <span class="string">'swisscoin'</span>, <span class="string">'DFT'</span>: <span class="string">'draftcoin'</span>, <span class="string">'KOBO'</span>: <span class="string">'kobocoin'</span>, <span class="string">'CRB'</span>: <span class="string">'creditbit'</span>, <span class="string">'42'</span>: <span class="string">'42-coin'</span>, <span class="string">'WDC'</span>: <span class="string">'worldcoin'</span>, <span class="string">'WAND'</span>: <span class="string">'wandx'</span>, <span class="string">'BTW'</span>: <span class="string">'bitcoinworld'</span>, <span class="string">'PHO'</span>: <span class="string">'photon'</span>, <span class="string">'VIVO'</span>: <span class="string">'vivo'</span>, <span class="string">'UNB'</span>: <span class="string">'unbreakablecoin'</span>, <span class="string">'RIYA'</span>: <span class="string">'etheriya'</span>, <span class="string">'NCS'</span>: <span class="string">'ncshares'</span>, <span class="string">'MXT'</span>: <span class="string">'martexcoin'</span>, <span class="string">'DP'</span>: <span class="string">'digitalprice'</span>, <span class="string">'CDN'</span>: <span class="string">'canada-ecoin'</span>, <span class="string">'OPC'</span>: <span class="string">'op-coin'</span>, <span class="string">'EPY'</span>: <span class="string">'emphy'</span>, <span class="string">'FJC'</span>: <span class="string">'fujicoin'</span>, <span class="string">'EQT'</span>: <span class="string">'equitrader'</span>, <span class="string">'DIX'</span>: <span class="string">'dix-asset'</span>, <span class="string">'HIRE'</span>: <span class="string">'hirematch'</span>, <span class="string">'SUPER'</span>: <span class="string">'supercoin'</span>, <span class="string">'MAGE'</span>: <span class="string">'magiccoin'</span>, <span class="string">'ZER'</span>: <span class="string">'zero'</span>, <span class="string">'SMLY'</span>: <span class="string">'smileycoin'</span>, <span class="string">'NOX'</span>: <span class="string">'nitro'</span>, <span class="string">'METAL'</span>: <span class="string">'metalcoin'</span>, <span class="string">'NDC'</span>: <span class="string">'neverdie'</span>, <span class="string">'DEUS'</span>: <span class="string">'deuscoin'</span>, <span class="string">'FANS'</span>: <span class="string">'fantasy-cash'</span>, <span class="string">'BYC'</span>: <span class="string">'bycion'</span>, <span class="string">'MTNC'</span>: <span class="string">'masternodecoin'</span>, <span class="string">'DCY'</span>: <span class="string">'dinastycoin'</span>, <span class="string">'STAC'</span>: <span class="string">'startercoin'</span>, <span class="string">'ZNY'</span>: <span class="string">'bitzeny'</span>, <span class="string">'SMS'</span>: <span class="string">'speed-mining-service'</span>, <span class="string">'ELLA'</span>: <span class="string">'ellaism'</span>, <span class="string">'DEM'</span>: <span class="string">'deutsche-emark'</span>, <span class="string">'LNC'</span>: <span class="string">'blocklancer'</span>, <span class="string">'HOLD'</span>: <span class="string">'interstellar-holdings'</span>, <span class="string">'EQL'</span>: <span class="string">'equal'</span>, <span class="string">'MAC'</span>: <span class="string">'machinecoin'</span>, <span class="string">'XMCC'</span>: <span class="string">'monacocoin'</span>, <span class="string">'ORB'</span>: <span class="string">'orbitcoin'</span>, <span class="string">'NLX'</span>: <span class="string">'nullex'</span>, <span class="string">'KEK'</span>: <span class="string">'kekcoin'</span>, <span class="string">'ZCC'</span>: <span class="string">'zccoin'</span>, <span class="string">'JIYO'</span>: <span class="string">'jiyo'</span>, <span class="string">'TIG'</span>: <span class="string">'tigereum'</span>, <span class="string">'ADZ'</span>: <span class="string">'adzcoin'</span>, <span class="string">'XPD'</span>: <span class="string">'petrodollar'</span>, <span class="string">'IC'</span>: <span class="string">'ignition'</span>, <span class="string">'BTDX'</span>: <span class="string">'bitcloud'</span>, <span class="string">'ARG'</span>: <span class="string">'argentum'</span>, <span class="string">'PCN'</span>: <span class="string">'peepcoin'</span>, <span class="string">'MOIN'</span>: <span class="string">'moin'</span>, <span class="string">'NET'</span>: <span class="string">'nimiq'</span>, <span class="string">'GRIM'</span>: <span class="string">'grimcoin'</span>, <span class="string">'ARC'</span>: <span class="string">'arroncoin'</span>, <span class="string">'RNS'</span>: <span class="string">'renos'</span>, <span class="string">'INN'</span>: <span class="string">'innova'</span>, <span class="string">'ESZ'</span>: <span class="string">'ethersportz'</span>, <span class="string">'EL'</span>: <span class="string">'elcoin-el'</span>, <span class="string">'FLT'</span>: <span class="string">'fluttercoin'</span>, <span class="string">'FRST'</span>: <span class="string">'firstcoin'</span>, <span class="string">'MCI'</span>: <span class="string">'musiconomi'</span>, <span class="string">'JC'</span>: <span class="string">'jesus-coin'</span>, <span class="string">'SUR'</span>: <span class="string">'suretly'</span>, <span class="string">'ZET'</span>: <span class="string">'zetacoin'</span>, <span class="string">'STAK'</span>: <span class="string">'straks'</span>, <span class="string">'BTRN'</span>: <span class="string">'biotron'</span>, <span class="string">'MZC'</span>: <span class="string">'mazacoin'</span>, <span class="string">'NKA'</span>: <span class="string">'incakoin'</span>, <span class="string">'ORI'</span>: <span class="string">'origami'</span>, <span class="string">'LINX'</span>: <span class="string">'linx'</span>, <span class="string">'HBN'</span>: <span class="string">'hobonickels'</span>, <span class="string">'ZENI'</span>: <span class="string">'zennies'</span>, <span class="string">'TDS'</span>: <span class="string">'tokendesk'</span>, <span class="string">'BDL'</span>: <span class="string">'bitdeal'</span>, <span class="string">'PIGGY'</span>: <span class="string">'piggycoin'</span>, <span class="string">'ATS'</span>: <span class="string">'authorship'</span>, <span class="string">'DSH'</span>: <span class="string">'dashcoin'</span>, <span class="string">'TRK'</span>: <span class="string">'truckcoin'</span>, <span class="string">'ZZC'</span>: <span class="string">'zozocoin'</span>, <span class="string">'TALK'</span>: <span class="string">'btctalkcoin'</span>, <span class="string">'MANNA'</span>: <span class="string">'manna'</span>, <span class="string">'RLT'</span>: <span class="string">'roulettetoken'</span>, <span class="string">'UIS'</span>: <span class="string">'unitus'</span>, <span class="string">'GUN'</span>: <span class="string">'guncoin'</span>, <span class="string">'CDX'</span>: <span class="string">'commodity-ad-network'</span>, <span class="string">'MAO'</span>: <span class="string">'mao-zedong'</span>, <span class="string">'DRPU'</span>: <span class="string">'drp-utility'</span>, <span class="string">'BRIA'</span>: <span class="string">'briacoin'</span>, <span class="string">'FYN'</span>: <span class="string">'fundyourselfnow'</span>, <span class="string">'ONX'</span>: <span class="string">'onix'</span>, <span class="string">'TROLL'</span>: <span class="string">'trollcoin'</span>, <span class="string">'SCT'</span>: <span class="string">'soma'</span>, <span class="string">'INPAY'</span>: <span class="string">'inpay'</span>, <span class="string">'DMB'</span>: <span class="string">'digital-money-bits'</span>, <span class="string">'INSN'</span>: <span class="string">'insanecoin-insn'</span>, <span class="string">'CASH'</span>: <span class="string">'cashcoin'</span>, <span class="string">'BUCKS'</span>: <span class="string">'swagbucks'</span>, <span class="string">'START'</span>: <span class="string">'startcoin'</span>, <span class="string">'UNIFY'</span>: <span class="string">'unify'</span>, <span class="string">'HPC'</span>: <span class="string">'hashpower'</span>, <span class="string">'TTC'</span>: <span class="string">'tittiecoin'</span>, <span class="string">'SKC'</span>: <span class="string">'skeincoin'</span>, <span class="string">'LANA'</span>: <span class="string">'lanacoin'</span>, <span class="string">'OIOC'</span>: <span class="string">'oiocoin'</span>, <span class="string">'NYAN'</span>: <span class="string">'nyancoin'</span>, <span class="string">'PXC'</span>: <span class="string">'pixiecoin'</span>, <span class="string">'Q2C'</span>: <span class="string">'qubitcoin'</span>, <span class="string">'EDRC'</span>: <span class="string">'edrcoin'</span>, <span class="string">'FST'</span>: <span class="string">'fastcoin'</span>, <span class="string">'TRUMP'</span>: <span class="string">'trumpcoin'</span>, <span class="string">'STU'</span>: <span class="string">'student-coin'</span>, <span class="string">'MNE'</span>: <span class="string">'minereum'</span>, <span class="string">'GRWI'</span>: <span class="string">'growers-international'</span>, <span class="string">'ELE'</span>: <span class="string">'elementrem'</span>, <span class="string">'IETH'</span>: <span class="string">'iethereum'</span>, <span class="string">'XJO'</span>: <span class="string">'joulecoin'</span>, <span class="string">'QVT'</span>: <span class="string">'qvolta'</span>, <span class="string">'ITI'</span>: <span class="string">'iticoin'</span>, <span class="string">'EBCH'</span>: <span class="string">'ebitcoin-cash'</span>, <span class="string">'OPAL'</span>: <span class="string">'opal'</span>, <span class="string">'TRI'</span>: <span class="string">'triangles'</span>, <span class="string">'BTA'</span>: <span class="string">'bata'</span>, <span class="string">'ECASH'</span>: <span class="string">'ethereumcash'</span>, <span class="string">'BTCS'</span>: <span class="string">'bitcoin-scrypt'</span>, <span class="string">'TAG'</span>: <span class="string">'tagcoin'</span>, <span class="string">'CNT'</span>: <span class="string">'centurion'</span>, <span class="string">'SAGA'</span>: <span class="string">'sagacoin'</span>, <span class="string">'BVT'</span>: <span class="string">'vtchain'</span>, <span class="string">'FTB'</span>: <span class="string">'feitebi'</span>, <span class="string">'BITS'</span>: <span class="string">'bitstar'</span>, <span class="string">'BTB'</span>: <span class="string">'bitbar'</span>, <span class="string">'JEW'</span>: <span class="string">'shekel'</span>, <span class="string">'VRS'</span>: <span class="string">'veros'</span>, <span class="string">'PLAN'</span>: <span class="string">'plancoin'</span>, <span class="string">'WILD'</span>: <span class="string">'wild-crypto'</span>, <span class="string">'TGC'</span>: <span class="string">'tigercoin'</span>, <span class="string">'XPY'</span>: <span class="string">'paycoin2'</span>, <span class="string">'MBRS'</span>: <span class="string">'embers'</span>, <span class="string">'BLC'</span>: <span class="string">'blakecoin'</span>, <span class="string">'KBR'</span>: <span class="string">'kubera-coin'</span>, <span class="string">'EVIL'</span>: <span class="string">'evil-coin'</span>, <span class="string">'UTC'</span>: <span class="string">'ultracoin'</span>, <span class="string">'BTCR'</span>: <span class="string">'bitcurrency'</span>, <span class="string">'HAL'</span>: <span class="string">'halcyon'</span>, <span class="string">'MCAP'</span>: <span class="string">'mcap'</span>, <span class="string">'ARCT'</span>: <span class="string">'arbitragect'</span>, <span class="string">'ARCO'</span>: <span class="string">'aquariuscoin'</span>, <span class="string">'BRO'</span>: <span class="string">'bitradio'</span>, <span class="string">'PR'</span>: <span class="string">'prototanium'</span>, <span class="string">'TNS'</span>: <span class="string">'transcodium'</span>, <span class="string">'NMS'</span>: <span class="string">'numus'</span>, <span class="string">'RBT'</span>: <span class="string">'rimbit'</span>, <span class="string">'RBIES'</span>: <span class="string">'rubies'</span>, <span class="string">'MRS'</span>: <span class="string">'marscoin'</span>, <span class="string">'REC'</span>: <span class="string">'regalcoin'</span>, <span class="string">'IRL'</span>: <span class="string">'irishcoin'</span>, <span class="string">'ARI'</span>: <span class="string">'aricoin'</span>, <span class="string">'POST'</span>: <span class="string">'postcoin'</span>, <span class="string">'BSTY'</span>: <span class="string">'globalboost-y'</span>, <span class="string">'ATOM'</span>: <span class="string">'atomic-coin'</span>, <span class="string">'BSM'</span>: <span class="string">'bitsum'</span>, <span class="string">'RIC'</span>: <span class="string">'riecoin'</span>, <span class="string">'KUSH'</span>: <span class="string">'kushcoin'</span>, <span class="string">'PHS'</span>: <span class="string">'philosopher-stones'</span>, <span class="string">'PROC'</span>: <span class="string">'procurrency'</span>, <span class="string">'CHESS'</span>: <span class="string">'chesscoin'</span>, <span class="string">'MOJO'</span>: <span class="string">'mojocoin'</span>, <span class="string">'CRM'</span>: <span class="string">'cream'</span>, <span class="string">'ETG'</span>: <span class="string">'ethereum-gold'</span>, <span class="string">'VOT'</span>: <span class="string">'votecoin'</span>, <span class="string">'SMC'</span>: <span class="string">'smartcoin'</span>, <span class="string">'ACC'</span>: <span class="string">'accelerator-network'</span>, <span class="string">'TIT'</span>: <span class="string">'titcoin'</span>, <span class="string">'GAP'</span>: <span class="string">'gapcoin'</span>, <span class="string">'SRC'</span>: <span class="string">'securecoin'</span>, <span class="string">'SLG'</span>: <span class="string">'sterlingcoin'</span>, <span class="string">'FRC'</span>: <span class="string">'freicoin'</span>, <span class="string">'NETKO'</span>: <span class="string">'netko'</span>, <span class="string">'GB'</span>: <span class="string">'goldblocks'</span>, <span class="string">'BTCRED'</span>: <span class="string">'bitcoin-red'</span>, <span class="string">'XVC'</span>: <span class="string">'vcash'</span>, <span class="string">'EMD'</span>: <span class="string">'emerald'</span>, <span class="string">'TOKC'</span>: <span class="string">'tokyo'</span>, <span class="string">'CFC'</span>: <span class="string">'cfcion66'</span>, <span class="string">'DAXX'</span>: <span class="string">'daxxcoin'</span>, <span class="string">'XRA'</span>: <span class="string">'ratecoin'</span>, <span class="string">'CJ'</span>: <span class="string">'cryptojacks'</span>, <span class="string">'DUO'</span>: <span class="string">'parallelcoin'</span>, <span class="string">'XBL'</span>: <span class="string">'billionaire-token'</span>, <span class="string">'GLC'</span>: <span class="string">'globalcoin'</span>, <span class="string">'WIN'</span>: <span class="string">'wintoken'</span>, <span class="string">'CRC'</span>: <span class="string">'crowdcoin'</span>, <span class="string">'SWING'</span>: <span class="string">'swing'</span>, <span class="string">'300'</span>: <span class="string">'300-token'</span>, <span class="string">'CCN'</span>: <span class="string">'cannacoin'</span>, <span class="string">'OCC'</span>: <span class="string">'octoin-coin'</span>, <span class="string">'PAK'</span>: <span class="string">'pakcoin'</span>, <span class="string">'EAGLE'</span>: <span class="string">'eaglecoin'</span>, <span class="string">'SDRN'</span>: <span class="string">'senderon'</span>, <span class="string">'CCT'</span>: <span class="string">'crystal-clear'</span>, <span class="string">'EVO'</span>: <span class="string">'evotion'</span>, <span class="string">'LTB'</span>: <span class="string">'litebar'</span>, <span class="string">'DDF'</span>: <span class="string">'digital-developers-fund'</span>, <span class="string">'NEVA'</span>: <span class="string">'nevacoin'</span>, <span class="string">'C2'</span>: <span class="string">'coin2-1'</span>, <span class="string">'VIDZ'</span>: <span class="string">'purevidz'</span>, <span class="string">'LEA'</span>: <span class="string">'leacoin'</span>, <span class="string">'XCT'</span>: <span class="string">'c-bit'</span>, <span class="string">'ASAFE'</span>: <span class="string">'allsafe'</span>, <span class="string">'$$$'</span>: <span class="string">'money'</span>, <span class="string">'BCF'</span>: <span class="string">'bitcoinfast'</span>, <span class="string">'LCP'</span>: <span class="string">'litecoin-plus'</span>, <span class="string">'PIPL'</span>: <span class="string">'piplcoin'</span>, <span class="string">'HC'</span>: <span class="string">'harvest-masternode-coin'</span>, <span class="string">'PKB'</span>: <span class="string">'parkbyte'</span>, <span class="string">'ECO'</span>: <span class="string">'ecoin'</span>, <span class="string">'PASL'</span>: <span class="string">'pascal-lite'</span>, <span class="string">'INFX'</span>: <span class="string">'influxcoin'</span>, <span class="string">'OTX'</span>: <span class="string">'octanox'</span>, <span class="string">'DRXNE'</span>: <span class="string">'droxne'</span>, <span class="string">'BERN'</span>: <span class="string">'berncash'</span>, <span class="string">'KED'</span>: <span class="string">'darsek'</span>, <span class="string">'XRE'</span>: <span class="string">'revolvercoin'</span>, <span class="string">'MST'</span>: <span class="string">'mustangcoin'</span>, <span class="string">'QTL'</span>: <span class="string">'quatloo'</span>, <span class="string">'CTX'</span>: <span class="string">'cartaxi-token'</span>, <span class="string">'HVCO'</span>: <span class="string">'high-voltage'</span>, <span class="string">'HNC'</span>: <span class="string">'huncoin'</span>, <span class="string">'BOLI'</span>: <span class="string">'bolivarcoin'</span>, <span class="string">'STN'</span>: <span class="string">'steneum-coin'</span>, <span class="string">'MNM'</span>: <span class="string">'mineum'</span>, <span class="string">'SHDW'</span>: <span class="string">'shadow-token'</span>, <span class="string">'888'</span>: <span class="string">'octocoin'</span>, <span class="string">'SPACE'</span>: <span class="string">'spacecoin'</span>, <span class="string">'TEK'</span>: <span class="string">'tekcoin'</span>, <span class="string">'TKR'</span>: <span class="string">'trackr'</span>, <span class="string">'ACOIN'</span>: <span class="string">'acoin'</span>, <span class="string">'RPC'</span>: <span class="string">'ronpaulcoin'</span>, <span class="string">'XBTC21'</span>: <span class="string">'bitcoin-21'</span>, <span class="string">'BUMBA'</span>: <span class="string">'bumbacoin'</span>, <span class="string">'DTC'</span>: <span class="string">'datacoin'</span>, <span class="string">'AMS'</span>: <span class="string">'amsterdamcoin'</span>, <span class="string">'FRN'</span>: <span class="string">'francs'</span>, <span class="string">'DRM'</span>: <span class="string">'dreamcoin'</span>, <span class="string">'XCXT'</span>: <span class="string">'coinonatx'</span>, <span class="string">'PXI'</span>: <span class="string">'prime-xi'</span>, <span class="string">'XCO'</span>: <span class="string">'x-coin'</span>, <span class="string">'GRN'</span>: <span class="string">'granitecoin'</span>, <span class="string">'8BIT'</span>: <span class="string">'8bit'</span>, <span class="string">'TAJ'</span>: <span class="string">'tajcoin'</span>, <span class="string">'STV'</span>: <span class="string">'sativacoin'</span>, <span class="string">'MCRN'</span>: <span class="string">'macron'</span>, <span class="string">'MNC'</span>: <span class="string">'mincoin'</span>, <span class="string">'MSCN'</span>: <span class="string">'master-swiscoin'</span>, <span class="string">'JS'</span>: <span class="string">'javascript-token'</span>, <span class="string">'DALC'</span>: <span class="string">'dalecoin'</span>, <span class="string">'EUC'</span>: <span class="string">'eurocoin'</span>, <span class="string">'ETHD'</span>: <span class="string">'ethereum-dark'</span>, <span class="string">'NTO'</span>: <span class="string">'fujinto'</span>, <span class="string">'QBC'</span>: <span class="string">'quebecoin'</span>, <span class="string">'GUESS'</span>: <span class="string">'guess'</span>, <span class="string">'611'</span>: <span class="string">'sixeleven'</span>, <span class="string">'SPT'</span>: <span class="string">'spots'</span>, <span class="string">'ZUR'</span>: <span class="string">'zurcoin'</span>, <span class="string">'EBET'</span>: <span class="string">'ethbet'</span>, <span class="string">'VISIO'</span>: <span class="string">'visio'</span>, <span class="string">'GP'</span>: <span class="string">'goldpieces'</span>, <span class="string">'CAT'</span>: <span class="string">'bitclave'</span>, <span class="string">'ERY'</span>: <span class="string">'eryllium'</span>, <span class="string">'NTWK'</span>: <span class="string">'network-token'</span>, <span class="string">'SFC'</span>: <span class="string">'solarflarecoin'</span>, <span class="string">'VLT'</span>: <span class="string">'veltor'</span>, <span class="string">'MAY'</span>: <span class="string">'theresa-may-coin'</span>, <span class="string">'PLC'</span>: <span class="string">'pluscoin'</span>, <span class="string">'VPRC'</span>: <span class="string">'vaperscoin'</span>, <span class="string">'DSR'</span>: <span class="string">'desire'</span>, <span class="string">'SOON'</span>: <span class="string">'sooncoin'</span>, <span class="string">'ESC'</span>: <span class="string">'escoro'</span>, <span class="string">'ALL'</span>: <span class="string">'allion'</span>, <span class="string">'FUZZ'</span>: <span class="string">'fuzzballs'</span>, <span class="string">'RED'</span>: <span class="string">'redcommunitytoken'</span>, <span class="string">'DBTC'</span>: <span class="string">'debitcoin'</span>, <span class="string">'UET'</span>: <span class="string">'useless-ethereum-token'</span>, <span class="string">'SOIL'</span>: <span class="string">'soilcoin'</span>, <span class="string">'NUKO'</span>: <span class="string">'nekonium'</span>, <span class="string">'CNNC'</span>: <span class="string">'cannation'</span>, <span class="string">'HONEY'</span>: <span class="string">'honey'</span>, <span class="string">'CACH'</span>: <span class="string">'cachecoin'</span>, <span class="string">'SCS'</span>: <span class="string">'speedcash'</span>, <span class="string">'ZYD'</span>: <span class="string">'zayedcoin'</span>, <span class="string">'BENJI'</span>: <span class="string">'benjirolls'</span>, <span class="string">'ICOB'</span>: <span class="string">'icobid'</span>, <span class="string">'FLAX'</span>: <span class="string">'flaxscript'</span>, <span class="string">'CPN'</span>: <span class="string">'compucoin'</span>, <span class="string">'EXN'</span>: <span class="string">'exchangen'</span>, <span class="string">'CF'</span>: <span class="string">'californium'</span>, <span class="string">'VEC2'</span>: <span class="string">'vector'</span>, <span class="string">'PIE'</span>: <span class="string">'piecoin'</span>, <span class="string">'XCRE'</span>: <span class="string">'creatio'</span>, <span class="string">'GPL'</span>: <span class="string">'gold-pressed-latinum'</span>, <span class="string">'TOK'</span>: <span class="string">'tokugawa'</span>, <span class="string">'MAR'</span>: <span class="string">'marijuanacoin'</span>, <span class="string">'SONG'</span>: <span class="string">'songcoin'</span>, <span class="string">'FUNC'</span>: <span class="string">'funcoin'</span>, <span class="string">'KRONE'</span>: <span class="string">'kronecoin'</span>, <span class="string">'COAL'</span>: <span class="string">'bitcoal'</span>, <span class="string">'MILO'</span>: <span class="string">'milocoin'</span>, <span class="string">'QBIC'</span>: <span class="string">'qbic'</span>, <span class="string">'LIR'</span>: <span class="string">'letitride'</span>, <span class="string">'BNX'</span>: <span class="string">'bnrtxcoin'</span>, <span class="string">'CAB'</span>: <span class="string">'cabbage'</span>, <span class="string">'BIP'</span>: <span class="string">'bipcoin'</span>, <span class="string">'LTCR'</span>: <span class="string">'litecred'</span>, <span class="string">'ICON'</span>: <span class="string">'iconic'</span>, <span class="string">'LUNA'</span>: <span class="string">'luna-coin'</span>, <span class="string">'WBB'</span>: <span class="string">'wild-beast-block'</span>, <span class="string">'LBTC'</span>: <span class="string">'lightningbitcoin'</span>, <span class="string">'PEX'</span>: <span class="string">'posex'</span>, <span class="string">'PONZI'</span>: <span class="string">'ponzicoin'</span>, <span class="string">'PNX'</span>: <span class="string">'phantomx'</span>, <span class="string">'CXT'</span>: <span class="string">'coinonat'</span>, <span class="string">'ARB'</span>: <span class="string">'arbit'</span>, <span class="string">'SANDG'</span>: <span class="string">'save-and-gain'</span>, <span class="string">'GEERT'</span>: <span class="string">'geertcoin'</span>, <span class="string">'SOCC'</span>: <span class="string">'socialcoin-socc'</span>, <span class="string">'PCOIN'</span>: <span class="string">'pioneer-coin'</span>, <span class="string">'VOLT'</span>: <span class="string">'bitvolt'</span>, <span class="string">'RKC'</span>: <span class="string">'royal-kingdom-coin'</span>, <span class="string">'DAS'</span>: <span class="string">'das'</span>, <span class="string">'ARGUS'</span>: <span class="string">'argus'</span>, <span class="string">'LTCU'</span>: <span class="string">'litecoin-ultra'</span>, <span class="string">'IBANK'</span>: <span class="string">'ibank'</span>, <span class="string">'DOLLAR'</span>: <span class="string">'dollar-online'</span>, <span class="string">'GSR'</span>: <span class="string">'geysercoin'</span>, <span class="string">'CONX'</span>: <span class="string">'concoin'</span>, <span class="string">'BAS'</span>: <span class="string">'bitasean'</span>, <span class="string">'CTIC2'</span>: <span class="string">'coimatic-2'</span>, <span class="string">'XRC'</span>: <span class="string">'rawcoin2'</span>, <span class="string">'NANOX'</span>: <span class="string">'project-x'</span>, <span class="string">'ATX'</span>: <span class="string">'artex-coin'</span>, <span class="string">'CREVA'</span>: <span class="string">'crevacoin'</span>, <span class="string">'CTIC3'</span>: <span class="string">'coimatic-3'</span>, <span class="string">'WOMEN'</span>: <span class="string">'women'</span>, <span class="string">'GBC'</span>: <span class="string">'gbcgoldcoin'</span>, <span class="string">'HMC'</span>: <span class="string">'hms'</span>, <span class="string">'VLTC'</span>: <span class="string">'vault-coin'</span>, <span class="string">'BZ'</span>: <span class="string">'bizutoken'</span>, <span class="string">'CP'</span>: <span class="string">'cp'</span>, <span class="string">'ZB'</span>: <span class="string">'zb'</span>, <span class="string">'18T'</span>: <span class="string">'18t'</span>, <span class="string">'3DB'</span>: <span class="string">'3db'</span>, <span class="string">'AC3'</span>: <span class="string">'ac3'</span>, <span class="string">'ACG'</span>: <span class="string">'acg'</span>, <span class="string">'ARP'</span>: <span class="string">'arp'</span>, <span class="string">'ATN'</span>: <span class="string">'atn'</span>, <span class="string">'BKK'</span>: <span class="string">'bkk'</span>, <span class="string">'BOX'</span>: <span class="string">'contentbox'</span>, <span class="string">'BPP'</span>: <span class="string">'bpp'</span>, <span class="string">'CAI'</span>: <span class="string">'cai'</span>, <span class="string">'CAN'</span>: <span class="string">'canyacoin'</span>, <span class="string">'CPU'</span>: <span class="string">'cpu'</span>, <span class="string">'CSI'</span>: <span class="string">'csi'</span>, <span class="string">'CTE'</span>: <span class="string">'cte'</span>, <span class="string">'CWV'</span>: <span class="string">'cwv'</span>, <span class="string">'CXE'</span>: <span class="string">'cxe'</span>, <span class="string">'DCC'</span>: <span class="string">'dcc'</span>, <span class="string">'DEW'</span>: <span class="string">'dew'</span>, <span class="string">'DWS'</span>: <span class="string">'dws'</span>, <span class="string">'EAI'</span>: <span class="string">'eai'</span>, <span class="string">'EDS'</span>: <span class="string">'eds'</span>, <span class="string">'EON'</span>: <span class="string">'eon'</span>, <span class="string">'FEX'</span>: <span class="string">'fex'</span>, <span class="string">'GSC'</span>: <span class="string">'gsc'</span>, <span class="string">'GSE'</span>: <span class="string">'gse'</span>, <span class="string">'HHT'</span>: <span class="string">'hht'</span>, <span class="string">'ICC'</span>: <span class="string">'icc'</span>, <span class="string">'IVY'</span>: <span class="string">'ivy'</span>, <span class="string">'JEX'</span>: <span class="string">'jex'</span>, <span class="string">'JLL'</span>: <span class="string">'jll'</span>, <span class="string">'KAN'</span>: <span class="string">'kan'</span>, <span class="string">'LMM'</span>: <span class="string">'lmm'</span>, <span class="string">'MDT'</span>: <span class="string">'mdt'</span>, <span class="string">'MSC'</span>: <span class="string">'msc'</span>, <span class="string">'NCC'</span>: <span class="string">'ncc'</span>, <span class="string">'NIX'</span>: <span class="string">'nix'</span>, <span class="string">'NKN'</span>: <span class="string">'nkn'</span>, <span class="string">'NPW'</span>: <span class="string">'npw'</span>, <span class="string">'ONT'</span>: <span class="string">'ont'</span>, <span class="string">'OTB'</span>: <span class="string">'otb'</span>, <span class="string">'PDX'</span>: <span class="string">'pdx'</span>, <span class="string">'RBF'</span>: <span class="string">'rbf'</span>, <span class="string">'RCO'</span>: <span class="string">'rco'</span>, <span class="string">'TST'</span>: <span class="string">'tst'</span>, <span class="string">'TTF'</span>: <span class="string">'ttf'</span>, <span class="string">'VPP'</span>: <span class="string">'vpp'</span>, <span class="string">'XMX'</span>: <span class="string">'xmx'</span>, <span class="string">'YEE'</span>: <span class="string">'yee'</span>, <span class="string">'ZAG'</span>: <span class="string">'zag'</span>, <span class="string">'ZZM'</span>: <span class="string">'zzm'</span>, <span class="string">'ALX'</span>: <span class="string">'alax'</span>, <span class="string">'APIS'</span>: <span class="string">'apis'</span>, <span class="string">'ATMI'</span>: <span class="string">'atmi'</span>, <span class="string">'BAIC'</span>: <span class="string">'baic'</span>, <span class="string">'BIGE'</span>: <span class="string">'bige'</span>, <span class="string">'KEY'</span>: <span class="string">'selfkey'</span>, <span class="string">'BPTN'</span>: <span class="string">'bptn'</span>, <span class="string">'BCD'</span>: <span class="string">'btcd'</span>, <span class="string">'BTMC'</span>: <span class="string">'btmc'</span>, <span class="string">'CFUN'</span>: <span class="string">'cfun'</span>, <span class="string">'CHEX'</span>: <span class="string">'chex'</span>, <span class="string">'CNET'</span>: <span class="string">'cnet'</span>, <span class="string">'CNMC'</span>: <span class="string">'cnmc'</span>, <span class="string">'CONI'</span>: <span class="string">'coni'</span>, <span class="string">'CRBC'</span>: <span class="string">'crbc'</span>, <span class="string">'DACC'</span>: <span class="string">'dacc'</span>, <span class="string">'DAX'</span>: <span class="string">'daex'</span>, <span class="string">'DAGT'</span>: <span class="string">'dagt'</span>, <span class="string">'DAG'</span>: <span class="string">'dagx'</span>, <span class="string">'DTA'</span>: <span class="string">'data'</span>, <span class="string">'DATX'</span>: <span class="string">'datx'</span>, <span class="string">'DB'</span>: <span class="string">'debi'</span>, <span class="string">'DERO'</span>: <span class="string">'dero'</span>, <span class="string">'DOCK'</span>: <span class="string">'dock'</span>, <span class="string">'EJOY'</span>: <span class="string">'ejoy'</span>, <span class="string">'EKT'</span>: <span class="string">'ekt8'</span>, <span class="string">'FACC'</span>: <span class="string">'facc'</span>, <span class="string">'FOTA'</span>: <span class="string">'fota'</span>, <span class="string">'GEM'</span>: <span class="string">'gems'</span>, <span class="string">'GGPC'</span>: <span class="string">'ggpc'</span>, <span class="string">'DAC'</span>: <span class="string">'hdac'</span>, <span class="string">'HERO'</span>: <span class="string">'sovereign-hero'</span>, <span class="string">'HOT'</span>: <span class="string">'hydro'</span>, <span class="string">'ICST'</span>: <span class="string">'icst'</span>, <span class="string">'IFTC'</span>: <span class="string">'iftc'</span>, <span class="string">'IMOS'</span>: <span class="string">'imos'</span>, <span class="string">'MRQ'</span>: <span class="string">'mirq'</span>, <span class="string">'MITH'</span>: <span class="string">'mith'</span>, <span class="string">'MOAC'</span>: <span class="string">'moac'</span>, <span class="string">'MLD'</span>: <span class="string">'mold'</span>, <span class="string">'NEAL'</span>: <span class="string">'neal'</span>, <span class="string">'NEXO'</span>: <span class="string">'nexo'</span>, <span class="string">'NFSC'</span>: <span class="string">'nfsc'</span>, <span class="string">'NPC'</span>: <span class="string">'npcc'</span>, <span class="string">'NPER'</span>: <span class="string">'nper'</span>, <span class="string">'NUSD'</span>: <span class="string">'nusd'</span>, <span class="string">'NXCT'</span>: <span class="string">'nxct'</span>, <span class="string">'PCCM'</span>: <span class="string">'pccm'</span>, <span class="string">'QBT'</span>: <span class="string">'cubits'</span>, <span class="string">'REPO'</span>: <span class="string">'repo'</span>, <span class="string">'RISK'</span>: <span class="string">'risk'</span>, <span class="string">'SEER'</span>: <span class="string">'seer'</span>, <span class="string">'SWTC'</span>: <span class="string">'swtc'</span>, <span class="string">'THPC'</span>: <span class="string">'thpc'</span>, <span class="string">'TRIO'</span>: <span class="string">'trip'</span>, <span class="string">'UCOM'</span>: <span class="string">'ucom'</span>, <span class="string">'VHKD'</span>: <span class="string">'vhkd'</span>, <span class="string">'VIEW'</span>: <span class="string">'view'</span>, <span class="string">'VITE'</span>: <span class="string">'vite'</span>, <span class="string">'WECC'</span>: <span class="string">'wecc'</span>, <span class="string">'XMCT'</span>: <span class="string">'xmct'</span>, <span class="string">'ZAIF'</span>: <span class="string">'zaif'</span>, <span class="string">'ZBTC'</span>: <span class="string">'zbtc'</span>, <span class="string">'ZINC'</span>: <span class="string">'zinc'</span>, <span class="string">'0XBTC'</span>: <span class="string">'0xbtc'</span>, <span class="string">'AIDOC'</span>: <span class="string">'aidoc'</span>, <span class="string">'AT'</span>: <span class="string">'abcctoken'</span>, <span class="string">'BCV'</span>: <span class="string">'bitcv'</span>, <span class="string">'BUC'</span>: <span class="string">'bitun'</span>, <span class="string">'BUT'</span>: <span class="string">'bitup'</span>, <span class="string">'BDB'</span>: <span class="string">'btcdo'</span>, <span class="string">'BTRCM'</span>: <span class="string">'btrcm'</span>, <span class="string">'BUBO'</span>: <span class="string">'budbo'</span>, <span class="string">'DAT'</span>: <span class="string">'datum'</span>, <span class="string">'FXT'</span>: <span class="string">'fuzex'</span>, <span class="string">'GU'</span>: <span class="string">'guten'</span>, <span class="string">'HOR'</span>: <span class="string">'hours'</span>, <span class="string">'HYC'</span>: <span class="string">'hycon'</span>, <span class="string">'ADCN'</span>: <span class="string">'asiadigicoin'</span>, <span class="string">'SLEVIN'</span>: <span class="string">'slevin'</span>, <span class="string">'ELS'</span>: <span class="string">'elysium'</span>, <span class="string">'XBTS'</span>: <span class="string">'beatcoin'</span>, <span class="string">'WORM'</span>: <span class="string">'healthywormcoin'</span>, <span class="string">'JOBS'</span>: <span class="string">'jobscoin'</span>, <span class="string">'PLNC'</span>: <span class="string">'plncoin'</span>, <span class="string">'CON'</span>: <span class="string">'paycon'</span>, <span class="string">'PLACO'</span>: <span class="string">'playercoin'</span>, <span class="string">'VUC'</span>: <span class="string">'virta-unique-coin'</span>, <span class="string">'BLN'</span>: <span class="string">'bolenum'</span>, <span class="string">'BSC'</span>: <span class="string">'bowscoin'</span>, <span class="string">'GLS'</span>: <span class="string">'glasscoin'</span>, <span class="string">'ACP'</span>: <span class="string">'anarchistsprime'</span>, <span class="string">'COUPE'</span>: <span class="string">'coupecoin'</span>, <span class="string">'MGM'</span>: <span class="string">'magnum'</span>, <span class="string">'ITZ'</span>: <span class="string">'interzone'</span>, <span class="string">'LVPS'</span>: <span class="string">'levoplus'</span>, <span class="string">'ULA'</span>: <span class="string">'ulatech'</span>, <span class="string">'CRDNC'</span>: <span class="string">'credence-coin'</span>, <span class="string">'TSTR'</span>: <span class="string">'tristar-coin'</span>, <span class="string">'IONC'</span>: <span class="string">'ionchain'</span>, <span class="string">'KMC'</span>: <span class="string">'kmwisdom'</span>, <span class="string">'LUC'</span>: <span class="string">'level-up'</span>, <span class="string">'LIKE'</span>: <span class="string">'likecoin'</span>, <span class="string">'MGD'</span>: <span class="string">'massgrid'</span>, <span class="string">'MXM'</span>: <span class="string">'maximine'</span>, <span class="string">'MVP'</span>: <span class="string">'merculet'</span>, <span class="string">'MOC'</span>: <span class="string">'mossland'</span>, <span class="string">'MOM'</span>: <span class="string">'momtoken'</span>, <span class="string">'NASH'</span>: <span class="string">'neoworld'</span>, <span class="string">'NGOT'</span>: <span class="string">'ngotoken'</span>, <span class="string">'PALT'</span>: <span class="string">'palchain'</span>, <span class="string">'GENE'</span>: <span class="string">'genetoken'</span>, <span class="string">'PLY'</span>: <span class="string">'playcoin'</span>, <span class="string">'XPX'</span>: <span class="string">'proximax'</span>, <span class="string">'RFR'</span>: <span class="string">'refereum'</span>, <span class="string">'REF'</span>: <span class="string">'reftoken'</span>, <span class="string">'SSC'</span>: <span class="string">'selfsell'</span>, <span class="string">'HAND'</span>: <span class="string">'showhand'</span>, <span class="string">'KST'</span>: <span class="string">'starcoin'</span>, <span class="string">'STB'</span>: <span class="string">'stbchain'</span>, <span class="string">'STK'</span>: <span class="string">'stktoken'</span>, <span class="string">'SWFTC'</span>: <span class="string">'swftcoin'</span>, <span class="string">'TAC'</span>: <span class="string">'tacchian'</span>, <span class="string">'TOS'</span>: <span class="string">'toschain'</span>, <span class="string">'UUU'</span>: <span class="string">'unetwork'</span>, <span class="string">'UPP'</span>: <span class="string">'upptoken'</span>, <span class="string">'WAN'</span>: <span class="string">'wanchain'</span>, <span class="string">'PWV'</span>: <span class="string">'wavebase'</span>, <span class="string">'WFC'</span>: <span class="string">'wificoin'</span>, <span class="string">'WC'</span>: <span class="string">'win-coin'</span>, <span class="string">'WIT'</span>: <span class="string">'witchain'</span>, <span class="string">'WHC'</span>: <span class="string">'wormhole'</span>, <span class="string">'XYT'</span>: <span class="string">'xcoinpay'</span>, <span class="string">'YCCC'</span>: <span class="string">'yccchain'</span>, <span class="string">'YOU'</span>: <span class="string">'youchain'</span>, <span class="string">'BATT'</span>: <span class="string">'battlewin'</span>, <span class="string">'BOC'</span>: <span class="string">'bingocoin'</span>, <span class="string">'BMH'</span>: <span class="string">'blockmesh'</span>, <span class="string">'CARD'</span>: <span class="string">'cardstack'</span>, <span class="string">'CGC'</span>: <span class="string">'cgc-token'</span>, <span class="string">'CTC'</span>: <span class="string">'credittag'</span>, <span class="string">'CRE'</span>: <span class="string">'cybereits'</span>, <span class="string">'ECOM'</span>: <span class="string">'ecomchain'</span>, <span class="string">'EBKC'</span>: <span class="string">'ekkoblock'</span>, <span class="string">'ETZ'</span>: <span class="string">'etherzero'</span>, <span class="string">'EXC'</span>: <span class="string">'eximchain'</span>, <span class="string">'FGC'</span>: <span class="string">'foundgame'</span>, <span class="string">'FUNDZ'</span>: <span class="string">'fundtoken'</span>, <span class="string">'GDP'</span>: <span class="string">'gdexpoint'</span>, <span class="string">'GEEK'</span>: <span class="string">'geekchain'</span>, <span class="string">'GOT'</span>: <span class="string">'gonetwork'</span>, <span class="string">'GUS'</span>: <span class="string">'guesscoin'</span>, <span class="string">'HPS'</span>: <span class="string">'hyperplay'</span>, <span class="string">'SEE'</span>: <span class="string">'inseecoin'</span>, <span class="string">'LEMO'</span>: <span class="string">'lemochain'</span>, <span class="string">'LFT'</span>: <span class="string">'linfinity'</span>, <span class="string">'LYL'</span>: <span class="string">'loyalcoin'</span>, <span class="string">'MFT'</span>: <span class="string">'mainframe'</span>, <span class="string">'MEDX'</span>: <span class="string">'mediblocx'</span>, <span class="string">'MET'</span>: <span class="string">'metronome'</span>, <span class="string">'MOF'</span>: <span class="string">'molecular'</span>, <span class="string">'MORE'</span>: <span class="string">'more-coin'</span>, <span class="string">'OLT'</span>: <span class="string">'oneledger'</span>, <span class="string">'ORS'</span>: <span class="string">'ors-group'</span>, <span class="string">'PAI'</span>: <span class="string">'pchainorg'</span>, <span class="string">'SOUL'</span>: <span class="string">'soulcoin'</span>, <span class="string">'PHI'</span>: <span class="string">'phi-token'</span>, <span class="string">'POK'</span>: <span class="string">'pokercoin'</span>, <span class="string">'SMART'</span>: <span class="string">'smartbillions'</span>, <span class="string">'STC'</span>: <span class="string">'starchain'</span>, <span class="string">'ECT'</span>: <span class="string">'superedge'</span>, <span class="string">'ABYSS'</span>: <span class="string">'the-abyss'</span>, <span class="string">'TCH'</span>: <span class="string">'tigercash'</span>, <span class="string">'TCT'</span>: <span class="string">'tokenclub'</span>, <span class="string">'TTT'</span>: <span class="string">'trustnote'</span>, <span class="string">'UBT'</span>: <span class="string">'unibright'</span>, <span class="string">'WYS'</span>: <span class="string">'wys-token'</span>, <span class="string">'AAC'</span>: <span class="string">'acuteangle'</span>, <span class="string">'XXX'</span>: <span class="string">'adultchain'</span>, <span class="string">'BANK'</span>: <span class="string">'bankcoinio'</span>, <span class="string">'BTN'</span>: <span class="string">'bitcoinnew'</span>, <span class="string">'BIT'</span>: <span class="string">'first-bitcoin'</span>, <span class="string">'BBK'</span>: <span class="string">'brickblock'</span>, <span class="string">'BTP'</span>: <span class="string">'btceasypay'</span>, <span class="string">'BC'</span>: <span class="string">'babycoin'</span>, <span class="string">'CZR'</span>: <span class="string">'canonchain'</span>, <span class="string">'CJT'</span>: <span class="string">'connectjob'</span>, <span class="string">'CSM'</span>: <span class="string">'consentium'</span>, <span class="string">'COSM'</span>: <span class="string">'cosmo-coin'</span>, <span class="string">'DRINK'</span>: <span class="string">'drinkchain'</span>, <span class="string">'EET'</span>: <span class="string">'eechain'</span>, <span class="string">'EGT'</span>: <span class="string">'egretia'</span>, <span class="string">'XET'</span>: <span class="string">'eternal'</span>, <span class="string">'EXT'</span>: <span class="string">'exchain'</span>, <span class="string">'FFF'</span>: <span class="string">'fffnews'</span>, <span class="string">'FUC'</span>: <span class="string">'fuccoin'</span>, <span class="string">'GTC'</span>: <span class="string">'global-tour-coin'</span>, <span class="string">'XGOX'</span>: <span class="string">'go-coin'</span>, <span class="string">'GOOC'</span>: <span class="string">'goocoin'</span>, <span class="string">'KCC'</span>: <span class="string">'kcchain'</span>, <span class="string">'LET'</span>: <span class="string">'linkeye'</span>, <span class="string">'LEDU'</span>: <span class="string">'liveedu'</span>, <span class="string">'LOVC'</span>: <span class="string">'lovcoin'</span>, <span class="string">'MEETONE'</span>: <span class="string">'meetone'</span>, <span class="string">'MESH'</span>: <span class="string">'meshbox'</span>, <span class="string">'MX'</span>: <span class="string">'mxtoken'</span>, <span class="string">'MT'</span>: <span class="string">'mytoken'</span>, <span class="string">'NC'</span>: <span class="string">'newchat'</span>, <span class="string">'NCASH'</span>: <span class="string">'nucleus'</span>, <span class="string">'OSCH'</span>: <span class="string">'oschain'</span>, <span class="string">'PAC'</span>: <span class="string">'paccoin'</span>, <span class="string">'NPXS'</span>: <span class="string">'pundi-x'</span>, <span class="string">'PMD'</span>: <span class="string">'pyramid'</span>, <span class="string">'RCCC'</span>: <span class="string">'rcchain'</span>, <span class="string">'SAC'</span>: <span class="string">'sacoin'</span>, <span class="string">'SDA'</span>: <span class="string">'sdchain'</span>, <span class="string">'SER'</span>: <span class="string">'seratio'</span>, <span class="string">'SPD'</span>: <span class="string">'stipend'</span>, <span class="string">'TAT'</span>: <span class="string">'tonarts'</span>, <span class="string">'UNC'</span>: <span class="string">'uncoin'</span>, <span class="string">'WT'</span>: <span class="string">'wetoken'</span>, <span class="string">'UC'</span>: <span class="string">'youlive'</span>, <span class="string">'ZIL'</span>: <span class="string">'zilliqa'</span>, <span class="string">'AAA'</span>: <span class="string">'aaachain'</span>, <span class="string">'ACAT'</span>: <span class="string">'alphacat'</span>, <span class="string">'BCG'</span>: <span class="string">'bcgchain'</span>, <span class="string">'BWT'</span>: <span class="string">'bittwatt'</span>, <span class="string">'BPX'</span>: <span class="string">'bptchain'</span>, <span class="string">'BRM'</span>: <span class="string">'brahmaos'</span>, <span class="string">'CAM'</span>: <span class="string">'camatrix'</span>, <span class="string">'CAR'</span>: <span class="string">'carblock'</span>, <span class="string">'CNN'</span>: <span class="string">'cnntoken'</span>, <span class="string">'MEET'</span>: <span class="string">'coinmeet'</span>, <span class="string">'CPS'</span>: <span class="string">'coinpaws'</span>, <span class="string">'COU'</span>: <span class="string">'couchain'</span>, <span class="string">'CROP'</span>: <span class="string">'cropcoin'</span>, <span class="string">'DEL'</span>: <span class="string">'delchain'</span>, <span class="string">'DIY'</span>: <span class="string">'diychain'</span>, <span class="string">'DKKT'</span>: <span class="string">'dkktoken'</span>, <span class="string">'RATING'</span>: <span class="string">'dprating'</span>, <span class="string">'DRCT'</span>: <span class="string">'drctoken'</span>, <span class="string">'ESS'</span>: <span class="string">'essentia'</span>, <span class="string">'FAIR'</span>: <span class="string">'faircoin'</span>, <span class="string">'FTI'</span>: <span class="string">'fanstime'</span>, <span class="string">'JRC'</span>: <span class="string">'finchain'</span>, <span class="string">'HSC'</span>: <span class="string">'hashcoin'</span>, <span class="string">'GARD'</span>: <span class="string">'hashgard'</span>, <span class="string">'HEY'</span>: <span class="string">'heychain'</span>, <span class="string">'HORUS'</span>: <span class="string">'horuspay'</span>, <span class="string">'HOTC'</span>: <span class="string">'hotchain'</span>, <span class="string">'INC'</span>: <span class="string">'influencechain'</span>, <span class="string">'KBC'</span>: <span class="string">'karatgold-coin'</span>, <span class="string">'XMC'</span>: <span class="string">'monero-classic'</span>, <span class="string">'SGCC'</span>: <span class="string">'supergamechain'</span>, <span class="string">'APL'</span>: <span class="string">'apollo-currency'</span>, <span class="string">'BTCP'</span>: <span class="string">'bitcoin-private'</span>, <span class="string">'DTRC'</span>: <span class="string">'datarius-credit'</span>, <span class="string">'DHT'</span>: <span class="string">'deephealthtoken'</span>, <span class="string">'DGTX'</span>: <span class="string">'digitex-futures'</span>, <span class="string">'FTX'</span>: <span class="string">'fintrux-network'</span>, <span class="string">'LCS'</span>: <span class="string">'local-coin-swap'</span>, <span class="string">'XMO'</span>: <span class="string">'monero-original'</span>, <span class="string">'SGN'</span>: <span class="string">'signals-network'</span>, <span class="string">'SKM'</span>: <span class="string">'skrumblenetwork'</span>, <span class="string">'BWX'</span>: <span class="string">'blue-whale-token'</span>, <span class="string">'CLO'</span>: <span class="string">'callisto-network'</span>, <span class="string">'CVH'</span>: <span class="string">'curriculum-vitae'</span>, <span class="string">'DGX'</span>: <span class="string">'digix-gold-token'</span>, <span class="string">'ENGT'</span>: <span class="string">'engagement-token'</span>, <span class="string">'MORPH'</span>: <span class="string">'morpheus-network'</span>, <span class="string">'HCC'</span>: <span class="string">'happy-creator-coin'</span>, <span class="string">'JOT'</span>: <span class="string">'jury-online-token'</span>, <span class="string">'MAN'</span>: <span class="string">'matrix-ai-network'</span>, <span class="string">'PAL'</span>: <span class="string">'policypal-network'</span>, <span class="string">'CLN'</span>: <span class="string">'colu-local-network'</span>, <span class="string">'DSCB'</span>: <span class="string">'datashieldcoinbank'</span>, <span class="string">'MVL'</span>: <span class="string">'mass-vehicle-ledger'</span>, <span class="string">'NCP'</span>: <span class="string">'newton-coin-project'</span>, <span class="string">'RCN'</span>: <span class="string">'rcoin'</span>, <span class="string">'AVH'</span>: <span class="string">'animation-vision-cash'</span>, <span class="string">'GVE'</span>: <span class="string">'globalvillageecosystem'</span>, <span class="string">'LWF'</span>: <span class="string">'local-world-forwarders'</span>, <span class="string">'VECT'</span>: <span class="string">'vechainblockchaintoken'</span>, <span class="string">'CEN'</span>: <span class="string">'coinsuper-ecosystem-network'</span>, <span class="string">'PZM'</span>: <span class="string">'prizm'</span>, <span class="string">'SAFEX'</span>: <span class="string">'safe-exchange-coin'</span>, <span class="string">'XTO'</span>: <span class="string">'tao'</span>, <span class="string">'CSC'</span>: <span class="string">'casinocoin'</span>, <span class="string">'LKK'</span>: <span class="string">'lykke'</span>, <span class="string">'SXDT'</span>: <span class="string">'spectre-dividend'</span>, <span class="string">'BITUSD'</span>: <span class="string">'bitusd'</span>, <span class="string">'ECC'</span>: <span class="string">'eccoin'</span>, <span class="string">'BBR'</span>: <span class="string">'boolberry'</span>, <span class="string">'RMC'</span>: <span class="string">'remicoin'</span>, <span class="string">'KLC'</span>: <span class="string">'kilocoin'</span>, <span class="string">'BQ'</span>: <span class="string">'bitqy'</span>, <span class="string">'PBT'</span>: <span class="string">'primalbase'</span>, <span class="string">'WCT'</span>: <span class="string">'waves-community-token'</span>, <span class="string">'MONK'</span>: <span class="string">'monkey-project'</span>, <span class="string">'SPRTS'</span>: <span class="string">'sprouts'</span>, <span class="string">'HDG'</span>: <span class="string">'hedge'</span>, <span class="string">'ASTRO'</span>: <span class="string">'astro'</span>, <span class="string">'MYB'</span>: <span class="string">'mybit-token'</span>, <span class="string">'XPA'</span>: <span class="string">'xpa'</span>, <span class="string">'SENSE'</span>: <span class="string">'sense'</span>, <span class="string">'TRAK'</span>: <span class="string">'trakinvest'</span>, <span class="string">'STA'</span>: <span class="string">'starta'</span>, <span class="string">'GOOD'</span>: <span class="string">'goodomy'</span>, <span class="string">'CHIPS'</span>: <span class="string">'chips'</span>, <span class="string">'ZEPH'</span>: <span class="string">'zephyr'</span>, <span class="string">'DAR'</span>: <span class="string">'darcrus'</span>, <span class="string">'B3'</span>: <span class="string">'b3coin'</span>, <span class="string">'BELA'</span>: <span class="string">'belacoin'</span>, <span class="string">'ATMS'</span>: <span class="string">'atmos'</span>, <span class="string">'HORSE'</span>: <span class="string">'ethorse'</span>, <span class="string">'SWIFT'</span>: <span class="string">'bitswift'</span>, <span class="string">'AHT'</span>: <span class="string">'bowhead'</span>, <span class="string">'MBI'</span>: <span class="string">'monster-byte'</span>, <span class="string">'ETT'</span>: <span class="string">'encryptotel'</span>, <span class="string">'VSX'</span>: <span class="string">'vsync-vsx'</span>, <span class="string">'FOR'</span>: <span class="string">'force'</span>, <span class="string">'XNN'</span>: <span class="string">'xenon'</span>, <span class="string">'FRD'</span>: <span class="string">'farad'</span>, <span class="string">'MRT'</span>: <span class="string">'miners-reward-token'</span>, <span class="string">'GMT'</span>: <span class="string">'mercury-protocol'</span>, <span class="string">'NSR'</span>: <span class="string">'nushares'</span>, <span class="string">'TDX'</span>: <span class="string">'tidex-token'</span>, <span class="string">'MAG'</span>: <span class="string">'maggie'</span>, <span class="string">'POP'</span>: <span class="string">'popularcoin'</span>, <span class="string">'TSE'</span>: <span class="string">'tattoocoin'</span>, <span class="string">'STRC'</span>: <span class="string">'starcredits'</span>, <span class="string">'TRCT'</span>: <span class="string">'tracto'</span>, <span class="string">'LOG'</span>: <span class="string">'woodcoin'</span>, <span class="string">'KLN'</span>: <span class="string">'kolion'</span>, <span class="string">'GOLF'</span>: <span class="string">'golfcoin'</span>, <span class="string">'SNRG'</span>: <span class="string">'synergy'</span>, <span class="string">'FLIK'</span>: <span class="string">'flik'</span>, <span class="string">'JET'</span>: <span class="string">'jetcoin'</span>, <span class="string">'BTWTY'</span>: <span class="string">'bit20'</span>, <span class="string">'BITBTC'</span>: <span class="string">'bitbtc'</span>, <span class="string">'OCL'</span>: <span class="string">'oceanlab'</span>, <span class="string">'ELTCOIN'</span>: <span class="string">'eltcoin'</span>, <span class="string">'ICOO'</span>: <span class="string">'ico-openledger'</span>, <span class="string">'MEC'</span>: <span class="string">'megacoin'</span>, <span class="string">'BTCA'</span>: <span class="string">'bitair'</span>, <span class="string">'BRIT'</span>: <span class="string">'britcoin'</span>, <span class="string">'ISL'</span>: <span class="string">'islacoin'</span>, <span class="string">'HODL'</span>: <span class="string">'hodl-bucks'</span>, <span class="string">'J'</span>: <span class="string">'joincoin'</span>, <span class="string">'AIB'</span>: <span class="string">'advanced-internet-blocks'</span>, <span class="string">'USC'</span>: <span class="string">'usdcoin'</span>, <span class="string">'GLT'</span>: <span class="string">'globaltoken'</span>, <span class="string">'WGO'</span>: <span class="string">'wavesgo'</span>, <span class="string">'CUBE'</span>: <span class="string">'digicube'</span>, <span class="string">'KURT'</span>: <span class="string">'kurrent'</span>, <span class="string">'JIN'</span>: <span class="string">'jin-coin'</span>, <span class="string">'BITEUR'</span>: <span class="string">'biteur'</span>, <span class="string">'SIGT'</span>: <span class="string">'signatum'</span>, <span class="string">'XSTC'</span>: <span class="string">'safe-trade-coin'</span>, <span class="string">'SCRT'</span>: <span class="string">'secretcoin'</span>, <span class="string">'BOST'</span>: <span class="string">'boostcoin'</span>, <span class="string">'CCO'</span>: <span class="string">'ccore'</span>, <span class="string">'PURE'</span>: <span class="string">'pure'</span>, <span class="string">'STARS'</span>: <span class="string">'starcash-network'</span>, <span class="string">'ZMC'</span>: <span class="string">'zetamicron'</span>, <span class="string">'CTO'</span>: <span class="string">'crypto'</span>, <span class="string">'BOAT'</span>: <span class="string">'doubloon'</span>, <span class="string">'NRO'</span>: <span class="string">'neuro'</span>, <span class="string">'DRS'</span>: <span class="string">'digital-rupees'</span>, <span class="string">'GRLC'</span>: <span class="string">'garlicoin'</span>, <span class="string">'IMX'</span>: <span class="string">'impact'</span>, <span class="string">'BTQ'</span>: <span class="string">'bitquark'</span>, <span class="string">'BTPL'</span>: <span class="string">'bitcoin-planet'</span>, <span class="string">'IMS'</span>: <span class="string">'independent-money-system'</span>, <span class="string">'4CHN'</span>: <span class="string">'chancoin'</span>, <span class="string">'TRDT'</span>: <span class="string">'trident'</span>, <span class="string">'ROOFS'</span>: <span class="string">'roofs'</span>, <span class="string">'BRAT'</span>: <span class="string">'brat'</span>, <span class="string">'VTA'</span>: <span class="string">'virtacoin'</span>, <span class="string">'B@'</span>: <span class="string">'bankcoin'</span>, <span class="string">'DDM'</span>: <span class="string">'17ddm'</span>, <span class="string">'ABJ'</span>: <span class="string">'abjcoin'</span>, <span class="string">'ACES'</span>: <span class="string">'aces'</span>, <span class="string">'ADL'</span>: <span class="string">'adelphoi'</span>, <span class="string">'AERM'</span>: <span class="string">'aerium'</span>, <span class="string">'AGRS'</span>: <span class="string">'agoras-tokens'</span>, <span class="string">'AGLC'</span>: <span class="string">'agrolifecoin'</span>, <span class="string">'AKY'</span>: <span class="string">'akuya-coin'</span>, <span class="string">'APC'</span>: <span class="string">'applecoin-apw'</span>, <span class="string">'ABC'</span>: <span class="string">'alphabitcoinfund'</span>, <span class="string">'SONO'</span>: <span class="string">'altcommunity-coin'</span>, <span class="string">'AMBER'</span>: <span class="string">'ambercoin'</span>, <span class="string">'AMIS'</span>: <span class="string">'amis'</span>, <span class="string">'AMMO'</span>: <span class="string">'ammo-rewards'</span>, <span class="string">'ANI'</span>: <span class="string">'animecoin'</span>, <span class="string">'RYZ'</span>: <span class="string">'anryze'</span>, <span class="string">'ANTI'</span>: <span class="string">'antibitcoin'</span>, <span class="string">'ALTC'</span>: <span class="string">'antilitecoin'</span>, <span class="string">'ANTX'</span>: <span class="string">'antimatter'</span>, <span class="string">'ATC'</span>: <span class="string">'arbitracoin'</span>, <span class="string">'ASN'</span>: <span class="string">'aseancoin'</span>, <span class="string">'ASC'</span>: <span class="string">'asiccoin'</span>, <span class="string">'ATCC'</span>: <span class="string">'atc-coin'</span>, <span class="string">'ATMC'</span>: <span class="string">'atmcoin'</span>, <span class="string">'AURS'</span>: <span class="string">'aureus'</span>, <span class="string">'AV'</span>: <span class="string">'avatarcoin'</span>, <span class="string">'ACN'</span>: <span class="string">'avoncoin'</span>, <span class="string">'AXF'</span>: <span class="string">'axfunds'</span>, <span class="string">'AXIOM'</span>: <span class="string">'axiom'</span>, <span class="string">'BBC'</span>: <span class="string">'bigboobscoin'</span>, <span class="string">'BSN'</span>: <span class="string">'bastonet'</span>, <span class="string">'BCAP'</span>: <span class="string">'bcap'</span>, <span class="string">'BCX'</span>: <span class="string">'bcx'</span>, <span class="string">'BVC'</span>: <span class="string">'beavercoin'</span>, <span class="string">'BEST'</span>: <span class="string">'bestchain'</span>, <span class="string">'BIGUP'</span>: <span class="string">'bigup'</span>, <span class="string">'BLRY'</span>: <span class="string">'billarycoin'</span>, <span class="string">'BIOB'</span>: <span class="string">'biobar'</span>, <span class="string">'BIOS'</span>: <span class="string">'bios-crypto'</span>, <span class="string">'BIRDS'</span>: <span class="string">'birds'</span>, <span class="string">'BAC'</span>: <span class="string">'bitalphacoin'</span>, <span class="string">'BTBC'</span>: <span class="string">'bitbase'</span>, <span class="string">'BBT'</span>: <span class="string">'bitboost'</span>, <span class="string">'BXC'</span>: <span class="string">'bitcedi'</span>, <span class="string">'GOD'</span>: <span class="string">'bitcoin-god'</span>, <span class="string">'BTC2X'</span>: <span class="string">'bitcoin2x'</span>, <span class="string">'BTF'</span>: <span class="string">'bitcoinfaith'</span>, <span class="string">'BIFI'</span>: <span class="string">'bitcoinfile'</span>, <span class="string">'BCW'</span>: <span class="string">'bitcoinwonder'</span>, <span class="string">'BITE'</span>: <span class="string">'bitethereum'</span>, <span class="string">'BTH'</span>: <span class="string">'bithot'</span>, <span class="string">'BITOK'</span>: <span class="string">'bitok'</span>, <span class="string">'BPC'</span>: <span class="string">'bitpark-coin'</span>, <span class="string">'BTE'</span>: <span class="string">'bitserial'</span>, <span class="string">'BSR'</span>: <span class="string">'bitsoar'</span>, <span class="string">'BXT'</span>: <span class="string">'bittokens'</span>, <span class="string">'BITZ'</span>: <span class="string">'bitz'</span>, <span class="string">'BSTAR'</span>: <span class="string">'blackstar'</span>, <span class="string">'BLAZR'</span>: <span class="string">'blazercoin'</span>, <span class="string">'BLITZ'</span>: <span class="string">'blitzcash'</span>, <span class="string">'BCDN'</span>: <span class="string">'blockcdn'</span>, <span class="string">'BLX'</span>: <span class="string">'blockchain-index'</span>, <span class="string">'BLOCKPAY'</span>: <span class="string">'blockpay'</span>, <span class="string">'BMT'</span>: <span class="string">'bmchain'</span>, <span class="string">'BOPO'</span>: <span class="string">'bokocloud'</span>, <span class="string">'BGR'</span>: <span class="string">'bongger'</span>, <span class="string">'BDS'</span>: <span class="string">'borderless'</span>, <span class="string">'BRAIN'</span>: <span class="string">'braincoin'</span>, <span class="string">'BTCM'</span>: <span class="string">'btcmoon'</span>, <span class="string">'BUB'</span>: <span class="string">'bubble'</span>, <span class="string">'CAGE'</span>: <span class="string">'cagecoin'</span>, <span class="string">'CALC'</span>: <span class="string">'caliphcoin'</span>, <span class="string">'CANDY'</span>: <span class="string">'candy'</span>, <span class="string">'CCC'</span>: <span class="string">'capricorncoin'</span>, <span class="string">'CME'</span>: <span class="string">'cashme'</span>, <span class="string">'CASINO'</span>: <span class="string">'casino'</span>, <span class="string">'CBD'</span>: <span class="string">'cbd-crystals'</span>, <span class="string">'CCB'</span>: <span class="string">'cccoin'</span>, <span class="string">'CCM100'</span>: <span class="string">'ccminer'</span>, <span class="string">'CDC'</span>: <span class="string">'cdcf'</span>, <span class="string">'CTR'</span>: <span class="string">'centra'</span>, <span class="string">'CHEAP'</span>: <span class="string">'cheapcoin'</span>, <span class="string">'CNC'</span>: <span class="string">'chncoin'</span>, <span class="string">'DAY'</span>: <span class="string">'chronologic'</span>, <span class="string">'CRX'</span>: <span class="string">'chronos'</span>, <span class="string">'CIG'</span>: <span class="string">'ciorigin'</span>, <span class="string">'CKUSD'</span>: <span class="string">'ckusd'</span>, <span class="string">'CLR'</span>: <span class="string">'clearcoin'</span>, <span class="string">'CES'</span>: <span class="string">'cleverness'</span>, <span class="string">'CLINT'</span>: <span class="string">'clinton'</span>, <span class="string">'CLD'</span>: <span class="string">'cloud'</span>, <span class="string">'CLUB'</span>: <span class="string">'clubcoin'</span>, <span class="string">'COE'</span>: <span class="string">'coeval'</span>, <span class="string">'COXST'</span>: <span class="string">'coexistcoin'</span>, <span class="string">'CV2'</span>: <span class="string">'colossuscoin-v2'</span>, <span class="string">'CMP'</span>: <span class="string">'compcoin'</span>, <span class="string">'CMS'</span>: <span class="string">'comsa-xem'</span>, <span class="string">'CFD'</span>: <span class="string">'confido'</span>, <span class="string">'SEN'</span>: <span class="string">'consensus'</span>, <span class="string">'XCPO'</span>: <span class="string">'copico'</span>, <span class="string">'CRTM'</span>: <span class="string">'corethum'</span>, <span class="string">'CORG'</span>: <span class="string">'corgicoin'</span>, <span class="string">'COR'</span>: <span class="string">'corion'</span>, <span class="string">'CRYPT'</span>: <span class="string">'cryptcoin'</span>, <span class="string">'BUK'</span>: <span class="string">'cryptobuck'</span>, <span class="string">'CESC'</span>: <span class="string">'cryptoescudo'</span>, <span class="string">'CFT'</span>: <span class="string">'cryptoforecast'</span>, <span class="string">'CEFS'</span>: <span class="string">'cryptopiafeeshares'</span>, <span class="string">'CWXT'</span>: <span class="string">'cryptoworldx-token'</span>, <span class="string">'OFF'</span>: <span class="string">'cthulhu-offerings'</span>, <span class="string">'XCS'</span>: <span class="string">'cybcsec'</span>, <span class="string">'CC'</span>: <span class="string">'cybercoin'</span>, <span class="string">'CYC'</span>: <span class="string">'cycling-coin'</span>, <span class="string">'CYDER'</span>: <span class="string">'cyder'</span>, <span class="string">'CYP'</span>: <span class="string">'cypher'</span>, <span class="string">'DAI'</span>: <span class="string">'dai'</span>, <span class="string">'DLISK'</span>: <span class="string">'dappster'</span>, <span class="string">'DISK'</span>: <span class="string">'darklisk'</span>, <span class="string">'DASHS'</span>: <span class="string">'dashs'</span>, <span class="string">'DAV'</span>: <span class="string">'davorcoin'</span>, <span class="string">'DDN'</span>: <span class="string">'ddn'</span>, <span class="string">'DML'</span>: <span class="string">'decentralized-machine-learning'</span>, <span class="string">'DWC'</span>: <span class="string">'deepwebcash'</span>, <span class="string">'DCRE'</span>: <span class="string">'deltacredits'</span>, <span class="string">'DES'</span>: <span class="string">'destiny'</span>, <span class="string">'DFS'</span>: <span class="string">'dfscoin'</span>, <span class="string">'DIBC'</span>: <span class="string">'dibcoin'</span>, <span class="string">'DBG'</span>: <span class="string">'digital-bullion-gold'</span>, <span class="string">'DGCS'</span>: <span class="string">'digital-credits'</span>, <span class="string">'BOB'</span>: <span class="string">'dobbscoin'</span>, <span class="string">'DON'</span>: <span class="string">'donationcoin'</span>, <span class="string">'DRG'</span>: <span class="string">'dragon-coins'</span>, <span class="string">'DT'</span>: <span class="string">'dragontoken'</span>, <span class="string">'DRACO'</span>: <span class="string">'dt-token'</span>, <span class="string">'DUB'</span>: <span class="string">'dubstep'</span>, <span class="string">'DUTCH'</span>: <span class="string">'dutch-coin'</span>, <span class="string">'DMC'</span>: <span class="string">'dynamiccoin'</span>, <span class="string">'EAG'</span>: <span class="string">'ea-coin'</span>, <span class="string">'EB3'</span>: <span class="string">'eb3-coin'</span>, <span class="string">'EBIT'</span>: <span class="string">'ebit'</span>, <span class="string">'EDU'</span>: <span class="string">'educhain'</span>, <span class="string">'EGCC'</span>: <span class="string">'egcchain'</span>, <span class="string">'EGG'</span>: <span class="string">'eggcoin'</span>, <span class="string">'EGO'</span>: <span class="string">'ego'</span>, <span class="string">'EGOLD'</span>: <span class="string">'egold'</span>, <span class="string">'ELC'</span>: <span class="string">'elacoin'</span>, <span class="string">'ELTC2'</span>: <span class="string">'eltc'</span>, <span class="string">'EMB'</span>: <span class="string">'embercoin'</span>, <span class="string">'XNG'</span>: <span class="string">'enigma'</span>, <span class="string">'EOT'</span>: <span class="string">'eot-token'</span>, <span class="string">'EPC'</span>: <span class="string">'epc'</span>, <span class="string">'ERC20'</span>: <span class="string">'erc20'</span>, <span class="string">'EREAL'</span>: <span class="string">'ereal'</span>, <span class="string">'EDOGE'</span>: <span class="string">'etherdoge'</span>, <span class="string">'ECH'</span>: <span class="string">'etherecash'</span>, <span class="string">'ELITE'</span>: <span class="string">'ethereum-lite'</span>, <span class="string">'EMV'</span>: <span class="string">'ethereum-movie-venture'</span>, <span class="string">'ETX'</span>: <span class="string">'etherx'</span>, <span class="string">'EGAS'</span>: <span class="string">'ethgas'</span>, <span class="string">'EUSD'</span>: <span class="string">'eusd'</span>, <span class="string">'EXL'</span>: <span class="string">'excelcoin'</span>, <span class="string">'EFC'</span>: <span class="string">'exchangefollow'</span>, <span class="string">'FC'</span>: <span class="string">'facecoin'</span>, <span class="string">'FAL'</span>: <span class="string">'falcoin'</span>, <span class="string">'FAP'</span>: <span class="string">'fapcoin'</span>, <span class="string">'FRGC'</span>: <span class="string">'fargocoin'</span>, <span class="string">'FRCT'</span>: <span class="string">'farstcoin'</span>, <span class="string">'FAZZ'</span>: <span class="string">'fazzcoin'</span>, <span class="string">'FBTC'</span>: <span class="string">'fbtc'</span>, <span class="string">'FBC'</span>: <span class="string">'fibocoins'</span>, <span class="string">'FIL'</span>: <span class="string">'filecoin'</span>, <span class="string">'FIMK'</span>: <span class="string">'fimkrypto'</span>, <span class="string">'FNC'</span>: <span class="string">'fincoin'</span>, <span class="string">'FIRE'</span>: <span class="string">'firecoin'</span>, <span class="string">'BITCF'</span>: <span class="string">'first-bitcoin-capital'</span>, <span class="string">'FLAP'</span>: <span class="string">'flappycoin'</span>, <span class="string">'FLVR'</span>: <span class="string">'flavorcoin'</span>, <span class="string">'FLY'</span>: <span class="string">'flycoin'</span>, <span class="string">'FONZ'</span>: <span class="string">'fonziecoin'</span>, <span class="string">'FOOT'</span>: <span class="string">'footy-cash'</span>, <span class="string">'FRK'</span>: <span class="string">'franko'</span>, <span class="string">'FRWC'</span>: <span class="string">'frankywillcoin'</span>, <span class="string">'FRAZ'</span>: <span class="string">'frazcoin'</span>, <span class="string">'FEI'</span>: <span class="string">'fuda-energy'</span>, <span class="string">'FC2'</span>: <span class="string">'fuelcoin'</span>, <span class="string">'FUTC'</span>: <span class="string">'futcoin'</span>, <span class="string">'FXE'</span>: <span class="string">'futurexe'</span>, <span class="string">'FVS'</span>: <span class="string">'fvs'</span>, <span class="string">'GBT'</span>: <span class="string">'gamebet-coin'</span>, <span class="string">'GCS'</span>: <span class="string">'gamechain'</span>, <span class="string">'GML'</span>: <span class="string">'gameleaguecoin'</span>, <span class="string">'UNITS'</span>: <span class="string">'gameunits'</span>, <span class="string">'MRJA'</span>: <span class="string">'ganjacoin'</span>, <span class="string">'GAY'</span>: <span class="string">'gaycoin'</span>, <span class="string">'WTT'</span>: <span class="string">'giga-watt-token'</span>, <span class="string">'GIM'</span>: <span class="string">'gimli'</span>, <span class="string">'GBRC'</span>: <span class="string">'global-business-revolution'</span>, <span class="string">'GJC'</span>: <span class="string">'global-jobcoin'</span>, <span class="string">'GOKU'</span>: <span class="string">'gokucoin'</span>, <span class="string">'GRX'</span>: <span class="string">'gold-reward-token'</span>, <span class="string">'GMX'</span>: <span class="string">'goldmaxcoin'</span>, <span class="string">'XGR'</span>: <span class="string">'goldreserve'</span>, <span class="string">'GUC'</span>: <span class="string">'goldunioncoin'</span>, <span class="string">'GBG'</span>: <span class="string">'golos-gold'</span>, <span class="string">'GPU'</span>: <span class="string">'gpu-coin'</span>, <span class="string">'GRAM'</span>: <span class="string">'gram'</span>, <span class="string">'GDC'</span>: <span class="string">'grandcoin'</span>, <span class="string">'GRT'</span>: <span class="string">'grantcoin'</span>, <span class="string">'GYC'</span>: <span class="string">'gycoin'</span>, <span class="string">'GYL'</span>: <span class="string">'gylian'</span>, <span class="string">'HKG'</span>: <span class="string">'hacker-gold'</span>, <span class="string">'HADE'</span>: <span class="string">'hade-platform'</span>, <span class="string">'HALLO'</span>: <span class="string">'halloween-coin'</span>, <span class="string">'SPOON'</span>: <span class="string">'hardspoon'</span>, <span class="string">'HBC'</span>: <span class="string">'hbcoin'</span>, <span class="string">'HMP'</span>: <span class="string">'hempcoin-hmp'</span>, <span class="string">'HEC'</span>: <span class="string">'herochain'</span>, <span class="string">'HIGH'</span>: <span class="string">'high-gain'</span>, <span class="string">'HTC'</span>: <span class="string">'hitcoin'</span>, <span class="string">'HYPER'</span>: <span class="string">'hyper'</span>, <span class="string">'HYTV'</span>: <span class="string">'hyper-tv'</span>, <span class="string">'IBTC'</span>: <span class="string">'ibtc'</span>, <span class="string">'ICO'</span>: <span class="string">'ico'</span>, <span class="string">'ICE'</span>: <span class="string">'idice'</span>, <span class="string">'IGNIS'</span>: <span class="string">'ignis'</span>, <span class="string">'IIC'</span>: <span class="string">'iicoin'</span>, <span class="string">'IMPS'</span>: <span class="string">'impulsecoin'</span>, <span class="string">'INDIA'</span>: <span class="string">'india-coin'</span>, <span class="string">'INDI'</span>: <span class="string">'indicoin'</span>, <span class="string">'XIN'</span>: <span class="string">'infinity-economics'</span>, <span class="string">'ITT'</span>: <span class="string">'intelligent-trading-tech'</span>, <span class="string">'XID'</span>: <span class="string">'sphre-air'</span>, <span class="string">'IOT'</span>: <span class="string">'internet-of-things'</span>, <span class="string">'IDT'</span>: <span class="string">'investdigital'</span>, <span class="string">'IVZ'</span>: <span class="string">'invisiblecoin'</span>, <span class="string">'IOU'</span>: <span class="string">'iou1'</span>, <span class="string">'IPFS'</span>: <span class="string">'ipfs'</span>, <span class="string">'PRN'</span>: <span class="string">'protean'</span>, <span class="string">'ITS'</span>: <span class="string">'its'</span>, <span class="string">'JNS'</span>: <span class="string">'janus'</span>, <span class="string">'JWL'</span>: <span class="string">'jewels'</span>, <span class="string">'JINN'</span>: <span class="string">'jinn'</span>, <span class="string">'JIO'</span>: <span class="string">'jio-token'</span>, <span class="string">'KARMA'</span>: <span class="string">'karmacoin'</span>, <span class="string">'KASHH'</span>: <span class="string">'kashhcoin'</span>, <span class="string">'KAYI'</span>: <span class="string">'kayicoin'</span>, <span class="string">'KEXCOIN'</span>: <span class="string">'kexcoin'</span>, <span class="string">'MEOW'</span>: <span class="string">'kittehcoin'</span>, <span class="string">'KDC'</span>: <span class="string">'klondikecoin'</span>, <span class="string">'KRS'</span>: <span class="string">'krypstal'</span>, <span class="string">'KZC'</span>: <span class="string">'kzcash'</span>, <span class="string">'LDCN'</span>: <span class="string">'landcoin'</span>, <span class="string">'LTH'</span>: <span class="string">'lathaan'</span>, <span class="string">'LAZ'</span>: <span class="string">'lazaruscoin'</span>, <span class="string">'LEEK'</span>: <span class="string">'leekcoin'</span>, <span class="string">'LGD'</span>: <span class="string">'legends-room'</span>, <span class="string">'LCT'</span>: <span class="string">'lendconnect'</span>, <span class="string">'LST'</span>: <span class="string">'lendroid-support-token'</span>, <span class="string">'HLB'</span>: <span class="string">'lepaoquan'</span>, <span class="string">'LEPEN'</span>: <span class="string">'lepen'</span>, <span class="string">'LEVO'</span>: <span class="string">'levocoin'</span>, <span class="string">'LNK'</span>: <span class="string">'link-platform'</span>, <span class="string">'LKC'</span>: <span class="string">'linkedcoin'</span>, <span class="string">'LTG'</span>: <span class="string">'litecoin-gold'</span>, <span class="string">'LLT'</span>: <span class="string">'lltoken'</span>, <span class="string">'LRN'</span>: <span class="string">'loopring-neo'</span>, <span class="string">'LOT'</span>: <span class="string">'lottocoin'</span>, <span class="string">'LTBC'</span>: <span class="string">'ltbcoin'</span>, <span class="string">'MCR'</span>: <span class="string">'macro1'</span>, <span class="string">'MDC'</span>: <span class="string">'madcoin'</span>, <span class="string">'MAGN'</span>: <span class="string">'magnetcoin'</span>, <span class="string">'MARX'</span>: <span class="string">'marxcoin'</span>, <span class="string">'MAVRO'</span>: <span class="string">'mavro'</span>, <span class="string">'MBC'</span>: <span class="string">'mbc'</span>, <span class="string">'MGE'</span>: <span class="string">'merge'</span>, <span class="string">'MTLMC3'</span>: <span class="string">'metal-music-coin'</span>, <span class="string">'MEX'</span>: <span class="string">'mex'</span>, <span class="string">'MRC'</span>: <span class="string">'microcoin'</span>, <span class="string">'AMM'</span>: <span class="string">'micromoney'</span>, <span class="string">'MND'</span>: <span class="string">'mindcoin'</span>, <span class="string">'MINEX'</span>: <span class="string">'minex'</span>, <span class="string">'MMXVI'</span>: <span class="string">'mmxvi'</span>, <span class="string">'MBL'</span>: <span class="string">'mobilecash'</span>, <span class="string">'XMRG'</span>: <span class="string">'monero-gold'</span>, <span class="string">'MONETA'</span>: <span class="string">'moneta2'</span>, <span class="string">'MONEY'</span>: <span class="string">'moneycoin'</span>, <span class="string">'MNY'</span>: <span class="string">'monkey'</span>, <span class="string">'MRNG'</span>: <span class="string">'morningstar-payments'</span>, <span class="string">'MCC'</span>: <span class="string">'moving-cloud-coin'</span>, <span class="string">'MUSK'</span>: <span class="string">'musk'</span>, <span class="string">'NAMO'</span>: <span class="string">'namocoin'</span>, <span class="string">'NAUT'</span>: <span class="string">'nautiluscoin'</span>, <span class="string">'NEOG'</span>: <span class="string">'neo-gold'</span>, <span class="string">'NBIT'</span>: <span class="string">'netbit'</span>, <span class="string">'NDAO'</span>: <span class="string">'neurodao'</span>, <span class="string">'NEWB'</span>: <span class="string">'newbium'</span>, <span class="string">'NXX'</span>: <span class="string">'nexxus'</span>, <span class="string">'NIMFA'</span>: <span class="string">'nimfamoney'</span>, <span class="string">'NODC'</span>: <span class="string">'nodecoin'</span>, <span class="string">'NUMUS'</span>: <span class="string">'numuscash'</span>, <span class="string">'NVST'</span>: <span class="string">'nvo'</span>, <span class="string">'OCX'</span>: <span class="string">'ocx'</span>, <span class="string">'OEX'</span>: <span class="string">'oex'</span>, <span class="string">'OHM'</span>: <span class="string">'ohm-wallet'</span>, <span class="string">'OHNI'</span>: <span class="string">'ohni'</span>, <span class="string">'MOT'</span>: <span class="string">'olympus'</span>, <span class="string">'OMC'</span>: <span class="string">'omicron'</span>, <span class="string">'RNT'</span>: <span class="string">'oneroot'</span>, <span class="string">'OP'</span>: <span class="string">'operand'</span>, <span class="string">'OPES'</span>: <span class="string">'opescoin'</span>, <span class="string">'ORLY'</span>: <span class="string">'orlycoin'</span>, <span class="string">'OS76'</span>: <span class="string">'osmiumcoin'</span>, <span class="string">'OX'</span>: <span class="string">'ox-fina'</span>, <span class="string">'P7C'</span>: <span class="string">'p7coin'</span>, <span class="string">'PCS'</span>: <span class="string">'pabyosi-coin-special'</span>, <span class="string">'PAYP'</span>: <span class="string">'paypeer'</span>, <span class="string">'PEC'</span>: <span class="string">'peacecoin'</span>, <span class="string">'MEN'</span>: <span class="string">'peoplecoin'</span>, <span class="string">'PEPECASH'</span>: <span class="string">'pepe-cash'</span>, <span class="string">'PSB'</span>: <span class="string">'pesobit'</span>, <span class="string">'SKULL'</span>: <span class="string">'pirate-blocks'</span>, <span class="string">'PIZZA'</span>: <span class="string">'pizzacoin'</span>, <span class="string">'PCASH'</span>: <span class="string">'playcash'</span>, <span class="string">'PLX'</span>: <span class="string">'plexcoin'</span>, <span class="string">'POKE'</span>: <span class="string">'pokecoin'</span>, <span class="string">'AI'</span>: <span class="string">'poly-ai'</span>, <span class="string">'POS'</span>: <span class="string">'postoken'</span>, <span class="string">'GARY'</span>: <span class="string">'president-johnson'</span>, <span class="string">'PRES'</span>: <span class="string">'president-trump'</span>, <span class="string">'PRIMU'</span>: <span class="string">'primulon'</span>, <span class="string">'PRX'</span>: <span class="string">'printerium'</span>, <span class="string">'PRM'</span>: <span class="string">'prismchain'</span>, <span class="string">'PDC'</span>: <span class="string">'project-decorum'</span>, <span class="string">'PGL'</span>: <span class="string">'prospectors-gold'</span>, <span class="string">'PROUD'</span>: <span class="string">'proud-money'</span>, <span class="string">'PRS'</span>: <span class="string">'prs'</span>, <span class="string">'PSY'</span>: <span class="string">'psilocybin'</span>, <span class="string">'PULSE'</span>: <span class="string">'pulse'</span>, <span class="string">'PRPS'</span>: <span class="string">'purpose'</span>, <span class="string">'PX'</span>: <span class="string">'px'</span>, <span class="string">'QBK'</span>: <span class="string">'qibuck-asset'</span>, <span class="string">'QLB'</span>: <span class="string">'qlcoin'</span>, <span class="string">'QORA'</span>: <span class="string">'qora'</span>, <span class="string">'QCN'</span>: <span class="string">'quazarcoin'</span>, <span class="string">'QUBE'</span>: <span class="string">'qube'</span>, <span class="string">'YTC'</span>: <span class="string">'quncoin'</span>, <span class="string">'QUN'</span>: <span class="string">'qunqun'</span>, <span class="string">'XQN'</span>: <span class="string">'quotient'</span>, <span class="string">'RBBT'</span>: <span class="string">'rabbitcoin'</span>, <span class="string">'ROC'</span>: <span class="string">'rasputin-online-coin'</span>, <span class="string">'READ'</span>: <span class="string">'read'</span>, <span class="string">'MWAT'</span>: <span class="string">'red-mwat'</span>, <span class="string">'REE'</span>: <span class="string">'reecoin'</span>, <span class="string">'REGA'</span>: <span class="string">'regacoin'</span>, <span class="string">'REV'</span>: <span class="string">'revenu'</span>, <span class="string">'RHFC'</span>: <span class="string">'rhfcoin'</span>, <span class="string">'RICHX'</span>: <span class="string">'richcoin'</span>, <span class="string">'RIDE'</span>: <span class="string">'ride-my-car'</span>, <span class="string">'RBX'</span>: <span class="string">'ripto-bux'</span>, <span class="string">'ROUND'</span>: <span class="string">'round'</span>, <span class="string">'ROYAL'</span>: <span class="string">'royalcoin'</span>, <span class="string">'RYCN'</span>: <span class="string">'royalcoin-2'</span>, <span class="string">'XRY'</span>: <span class="string">'royalties'</span>, <span class="string">'RSGP'</span>: <span class="string">'rsgpcoin'</span>, <span class="string">'RUBIT'</span>: <span class="string">'rublebit'</span>, <span class="string">'RBLX'</span>: <span class="string">'rublix'</span>, <span class="string">'RUNNERS'</span>: <span class="string">'runners'</span>, <span class="string">'RUP'</span>: <span class="string">'rupee'</span>, <span class="string">'RUSTBITS'</span>: <span class="string">'rustbits'</span>, <span class="string">'SFE'</span>: <span class="string">'safecoin'</span>, <span class="string">'SKR'</span>: <span class="string">'sakuracoin'</span>, <span class="string">'SANC'</span>: <span class="string">'sanchain'</span>, <span class="string">'SND'</span>: <span class="string">'sand-coin'</span>, <span class="string">'MAD'</span>: <span class="string">'satoshimadness'</span>, <span class="string">'SBG'</span>: <span class="string">'sbgcoin'</span>, <span class="string">'SCORE'</span>: <span class="string">'scorecoin'</span>, <span class="string">'SCOT'</span>: <span class="string">'scotcoin'</span>, <span class="string">'DDD'</span>: <span class="string">'scry'</span>, <span class="string">'SLFI'</span>: <span class="string">'selfiecoin'</span>, <span class="string">'SHA'</span>: <span class="string">'shacoin'</span>, <span class="string">'SDC'</span>: <span class="string">'shadowcash'</span>, <span class="string">'SAK'</span>: <span class="string">'sharkcoin'</span>, <span class="string">'SHP'</span>: <span class="string">'sharpe-capital'</span>, <span class="string">'SHELL'</span>: <span class="string">'shellcoin'</span>, <span class="string">'SH'</span>: <span class="string">'shilling'</span>, <span class="string">'SHE'</span>: <span class="string">'shinechain'</span>, <span class="string">'SHORTY'</span>: <span class="string">'shorty'</span>, <span class="string">'SHOW'</span>: <span class="string">'show'</span>, <span class="string">'SIGMA'</span>: <span class="string">'sigmacoin'</span>, <span class="string">'SISA'</span>: <span class="string">'sisa'</span>, <span class="string">'SIX'</span>: <span class="string">'six'</span>, <span class="string">'SJW'</span>: <span class="string">'sjwcoin'</span>, <span class="string">'SLM'</span>: <span class="string">'slimcoin'</span>, <span class="string">'SLING'</span>: <span class="string">'sling'</span>, <span class="string">'SLOTH'</span>: <span class="string">'slothcoin'</span>, <span class="string">'SIFT'</span>: <span class="string">'smart-investment-fund-token'</span>, <span class="string">'SMOKE'</span>: <span class="string">'smoke'</span>, <span class="string">'SNAKE'</span>: <span class="string">'snakeeyes'</span>, <span class="string">'SNET'</span>: <span class="string">'snetwork'</span>, <span class="string">'SNIP'</span>: <span class="string">'snipcoin'</span>, <span class="string">'SOJ'</span>: <span class="string">'sojourn'</span>, <span class="string">'SPK'</span>: <span class="string">'sparks'</span>, <span class="string">'SAY'</span>: <span class="string">'spherepay'</span>, <span class="string">'SPORT'</span>: <span class="string">'sportscoin'</span>, <span class="string">'SPEX'</span>: <span class="string">'sproutsextreme'</span>, <span class="string">'STCN'</span>: <span class="string">'stakecoin-stcn'</span>, <span class="string">'STEPS'</span>: <span class="string">'steps'</span>, <span class="string">'SCC'</span>: <span class="string">'stockchain'</span>, <span class="string">'SJCX'</span>: <span class="string">'storjcoin-x'</span>, <span class="string">'DATA'</span>: <span class="string">'streamr'</span>, <span class="string">'STS'</span>: <span class="string">'stress'</span>, <span class="string">'SBC'</span>: <span class="string">'strikebitclub'</span>, <span class="string">'SUP'</span>: <span class="string">'superior-coin'</span>, <span class="string">'UNITY'</span>: <span class="string">'supernet-unity'</span>, <span class="string">'SBTC'</span>: <span class="string">'supersbtc'</span>, <span class="string">'SWP'</span>: <span class="string">'swapcoin'</span>, <span class="string">'TOKEN'</span>: <span class="string">'swaptoken'</span>, <span class="string">'SDP'</span>: <span class="string">'sydpak'</span>, <span class="string">'SYNC'</span>: <span class="string">'sync'</span>, <span class="string">'TCOIN'</span>: <span class="string">'t-coin'</span>, <span class="string">'TAGR'</span>: <span class="string">'tagrcoin'</span>, <span class="string">'TLE'</span>: <span class="string">'tattoocoin-limited'</span>, <span class="string">'TEAM'</span>: <span class="string">'teamup'</span>, <span class="string">'THS'</span>: <span class="string">'techshares'</span>, <span class="string">'TELL'</span>: <span class="string">'tellurion'</span>, <span class="string">'TER'</span>: <span class="string">'terranova'</span>, <span class="string">'TESLA'</span>: <span class="string">'teslacoilcoin'</span>, <span class="string">'XVE'</span>: <span class="string">'the-vegan-initiative'</span>, <span class="string">'TCR'</span>: <span class="string">'thecreed'</span>, <span class="string">'TIE'</span>: <span class="string">'ties-network'</span>, <span class="string">'TME'</span>: <span class="string">'timereum'</span>, <span class="string">'TMC'</span>: <span class="string">'timescoin'</span>, <span class="string">'TBAR'</span>: <span class="string">'titanium-bar'</span>, <span class="string">'BAR'</span>: <span class="string">'titanium-blockchain'</span>, <span class="string">'TODAY'</span>: <span class="string">'todaycoin'</span>, <span class="string">'ACE'</span>: <span class="string">'tokenstars'</span>, <span class="string">'TOPAZ'</span>: <span class="string">'topaz'</span>, <span class="string">'TOP'</span>: <span class="string">'topcoin'</span>, <span class="string">'TOR'</span>: <span class="string">'torcoin-tor'</span>, <span class="string">'TRIA'</span>: <span class="string">'triaconta'</span>, <span class="string">'TRICK'</span>: <span class="string">'trickycoin'</span>, <span class="string">'TNC'</span>: <span class="string">'trinity'</span>, <span class="string">'TBC'</span>: <span class="string">'triplechain'</span>, <span class="string">'TURBO'</span>: <span class="string">'turbocoin'</span>, <span class="string">'TYC'</span>: <span class="string">'tyrocoin'</span>, <span class="string">'UAH'</span>: <span class="string">'uahpay'</span>, <span class="string">'UBC'</span>: <span class="string">'ubitcoin'</span>, <span class="string">'U'</span>: <span class="string">'ucoin'</span>, <span class="string">'UFO'</span>: <span class="string">'ufo-coin'</span>, <span class="string">'GAIN'</span>: <span class="string">'ugain'</span>, <span class="string">'UNIC'</span>: <span class="string">'unicoin'</span>, <span class="string">'UKG'</span>: <span class="string">'unikoingold'</span>, <span class="string">'UNY'</span>: <span class="string">'unity-ingot'</span>, <span class="string">'UNRC'</span>: <span class="string">'universalroyalcoin'</span>, <span class="string">'URC'</span>: <span class="string">'unrealcoin'</span>, <span class="string">'UR'</span>: <span class="string">'ur'</span>, <span class="string">'URO'</span>: <span class="string">'uro'</span>, <span class="string">'USDE'</span>: <span class="string">'usde'</span>, <span class="string">'VAL'</span>: <span class="string">'valorbit'</span>, <span class="string">'VLC'</span>: <span class="string">'valuechain'</span>, <span class="string">'VGC'</span>: <span class="string">'vegascoin'</span>, <span class="string">'CRED'</span>: <span class="string">'verify'</span>, <span class="string">'VTY'</span>: <span class="string">'victoriouscoin'</span>, <span class="string">'VIP'</span>: <span class="string">'vip-tokens'</span>, <span class="string">'VIPS'</span>: <span class="string">'vipstar-coin'</span>, <span class="string">'XVP'</span>: <span class="string">'virtacoinplus'</span>, <span class="string">'VC'</span>: <span class="string">'virtualcoin'</span>, <span class="string">'VOYA'</span>: <span class="string">'voyacoin'</span>, <span class="string">'XVS'</span>: <span class="string">'vsync'</span>, <span class="string">'VTR'</span>: <span class="string">'vtorrent'</span>, <span class="string">'WA'</span>: <span class="string">'wa-space'</span>, <span class="string">'WBC'</span>: <span class="string">'wallet-builders-coin'</span>, <span class="string">'WARP'</span>: <span class="string">'warp'</span>, <span class="string">'WAX'</span>: <span class="string">'wax'</span>, <span class="string">'WAY'</span>: <span class="string">'wayguide'</span>, <span class="string">'WAC'</span>: <span class="string">'wearechain'</span>, <span class="string">'WETH'</span>: <span class="string">'weth'</span>, <span class="string">'WEX'</span>: <span class="string">'wexcoin'</span>, <span class="string">'WIC'</span>: <span class="string">'wi-coin'</span>, <span class="string">'WINK'</span>: <span class="string">'wink'</span>, <span class="string">'WKC'</span>: <span class="string">'wkc'</span>, <span class="string">'WMC'</span>: <span class="string">'wmcoin'</span>, <span class="string">'X2'</span>: <span class="string">'x2'</span>, <span class="string">'XAU'</span>: <span class="string">'xaucoin'</span>, <span class="string">'XC'</span>: <span class="string">'xcurrency'</span>, <span class="string">'XDE2'</span>: <span class="string">'xde-ii'</span>, <span class="string">'XEN'</span>: <span class="string">'xenixcoin'</span>, <span class="string">'MI'</span>: <span class="string">'xiaomicoin'</span>, <span class="string">'XIOS'</span>: <span class="string">'xios'</span>, <span class="string">'XOC'</span>: <span class="string">'xonecoin'</span>, <span class="string">'XTD'</span>: <span class="string">'xtd-coin'</span>, <span class="string">'XYLO'</span>: <span class="string">'xylo'</span>, <span class="string">'YAC'</span>: <span class="string">'yacoin'</span>, <span class="string">'YASH'</span>: <span class="string">'yashcoin'</span>, <span class="string">'YEL'</span>: <span class="string">'yellow-token'</span>, <span class="string">'YTN'</span>: <span class="string">'yenten'</span>, <span class="string">'YES'</span>: <span class="string">'yescoin'</span>, <span class="string">'YIC'</span>: <span class="string">'yiiacoin'</span>, <span class="string">'YUAN'</span>: <span class="string">'yuan'</span>, <span class="string">'ZCG'</span>: <span class="string">'zcash-gold'</span>, <span class="string">'ZIBER'</span>: <span class="string">'ziber'</span>, <span class="string">'ZBC'</span>: <span class="string">'zilbercoin'</span>, <span class="string">'ZNE'</span>: <span class="string">'zonecoin'</span>, <span class="string">'ZSE'</span>: <span class="string">'zsecoin'</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取币种价格的函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_price</span><span class="params">(keyword)</span>:</span>    </span><br><span class="line">    <span class="keyword">if</span> keyword.upper() <span class="keyword">in</span> coindict:</span><br><span class="line">        keyword = coindict[keyword.upper()]</span><br><span class="line">    url = <span class="string">'https://www.feixiaohao.com/currencies/&#123;&#125;/'</span>.format(keyword.lower())    </span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        doc = pq(url)</span><br><span class="line">        nowTime =  datetime.datetime.now().strftime(<span class="string">'%Y-%m-%d %H:%M:%S'</span>)</span><br><span class="line">        content = doc(<span class="string">'.cell'</span>)</span><br><span class="line">        info = content.find(<span class="string">'.coinprice'</span>)</span><br><span class="line">        fluctuation =info.find(<span class="string">'.tags-red'</span>).text()</span><br><span class="line">        info.find(<span class="string">'.tags-red'</span>).remove()</span><br><span class="line">        price = info.text()</span><br><span class="line">        rank = doc(<span class="string">'.tag-marketcap'</span>).text()</span><br><span class="line">        result = <span class="string">"当前&#123;&#125;的价格:&#123;&#125;\n涨幅:&#123;&#125;\n市值排名:&#123;&#125;\n【&#123;&#125;】"</span>.format(keyword,price,fluctuation,rank,nowTime)</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在私聊中可用</span></span><br><span class="line"><span class="meta">@ itchat.msg_register(itchat.content.TEXT)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">text_reply</span><span class="params">(msg)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> get_price(msg[<span class="string">'Text'</span>])    </span><br><span class="line">    </span><br><span class="line"><span class="comment"># 在群聊中可用</span></span><br><span class="line"><span class="meta">@ itchat.msg_register(itchat.content.TEXT,isGroupChat=True)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">groupchat_reply</span><span class="params">(msg)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> get_price(msg[<span class="string">'Text'</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">    itchat.auto_login(hotReload=<span class="keyword">True</span>)   <span class="comment"># hotReload = True, 保持在线，下次运行代码可自动登录</span></span><br><span class="line">    itchat.run()</span><br></pre></td></tr></table></figure><p>如果进展顺利的话，点击运行后用微信扫码登陆即可，挂着服务器上就可以长期运行此机器人了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文环境： Windows 10 和 python 3.5&lt;/p&gt;
&lt;p&gt;需要安装 itchat 以及 pyquery 库，直接命令 &lt;code&gt;pip3 install itchat&lt;/code&gt; 以及 &lt;code&gt;pip3 install pyquery&lt;/code&gt; 进行安装&lt;/p&gt;
&lt;p&gt;币价数据来源：非小号 &lt;a href=&quot;https://www.feixiaohao.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.feixiaohao.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在群聊和私聊中可实现查询当前币价的功能，如下 &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://s1.ax2x.com/2018/08/01/53waGE.png&quot; alt=&quot;53waGE.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;全部代码如下&lt;/p&gt;
    
    </summary>
    
      <category term="Articles" scheme="http://yoursite.com/categories/Articles/"/>
    
    
      <category term="robot" scheme="http://yoursite.com/tags/robot/"/>
    
  </entry>
  
  <entry>
    <title>Python 中的正则表达式</title>
    <link href="http://yoursite.com/2018/07/19/regex/"/>
    <id>http://yoursite.com/2018/07/19/regex/</id>
    <published>2018-07-18T16:00:00.000Z</published>
    <updated>2018-07-19T08:22:10.920Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Regex-in-Python"><a href="#Regex-in-Python" class="headerlink" title="Regex in Python"></a>Regex in Python</h1><blockquote><p>在编写处理字符串的程序或网页时，经常会有查找符合某些复杂规则的字符串的需要。正则表达式就是用于描述这些规则的工具。换句话说，正则表达式就是记录文本规则的代码。</p></blockquote><h2 id="字符"><a href="#字符" class="headerlink" title="字符"></a>字符</h2><p>.       匹配除换行符之外的任意字符，当re.S(DOTALL)标记被指定时，这可以匹配包括换         行符的任意字符 </p><p>\d        可以匹配一个数字 等同于[0-9]</p><p>\D        等同于[^0-9]匹配非数字</p><p>\w        等同于[a-z0-9A-Z_]匹配大小写字母、数字和下划线</p><p>\W        等同于[^a-z0-9A-Z_]等同于上一条取非</p><p>A|B     可以匹配A或B，所以(P|p)ython可以匹配’Python’或者’python’</p><p>^       表示行的开头，^\d表示必须以数字开头</p><p>\$      表示行的结束，\d$表示必须以数字结束</p><p>\s      可以匹配空白字符,等价于 [\t\n\r\f]。（也包括Tab等空白符）</p><p>\S      匹配任意非空字符 </p><p>\n      匹配一个换行符</p><p>\t      匹配一个制表符</p><p>\A      匹配字符串开头</p><p>\Z      匹配字符串结尾，如果存在换行，只匹配到换行前的结束字符串</p><p>\z      匹配字符串结尾，如果存在换行，同时还会匹配换行符</p><p>\G      匹配最后匹配完成的位置 （不懂需要理解）</p><a id="more"></a><h2 id="量词"><a href="#量词" class="headerlink" title="量词"></a>量词</h2><p>跟着一个字符或一个表达式后面，表示前面重复的次数</p><p>+       匹配前面的字符1次或多次（&gt;=1）</p><p>*       匹配前面的字符0次或多次（&gt;=0）</p><p>?       匹配前面的字符0次或者1次 (0 or 1)</p><p>{m}        匹配前面表达式m次 （=m）</p><p>{m,}    匹配前面表达式至少m次 (&gt;=m)</p><p>{,n}    匹配前面的正则表达式最多n次 (&lt;=m)</p><p>{m,n}    匹配前面的正则表达式m到n次  (&gt;m,&lt;n)</p><p>注意点：<br>以上量词都是贪婪模式，会尽可能多的匹配，如果要改为非贪婪模式，通过在量词后面跟随一个?来实现</p><h2 id="范围"><a href="#范围" class="headerlink" title="范围"></a>范围</h2><p>[] 代表匹配里面的字符中的任意一个</p><p>[^] 代表除了内部包含的字符以外都能匹配，[^abc] 匹配除了a,b,c之外的字符</p><p>[0-9]    0123456789任意之一</p><p>[a-z]    小写字母任意之一</p><p>[A-Z]    大写字母任意之一</p><p>[0-9a-zA-Z_] 可以匹配一个数字、字母或者下划线；</p><p>[0-9a-zA-Z_]+ 可以匹配至少由一个数字、字母或者下划线组成的字符串，比如’a100’，’0_Z’，’Py3000’等等；</p><p>[a-zA-Z_][0-9a-zA-Z_]* 可以匹配由字母或下划线开头，后接任意个由一个数字、字母或者下划线组成的字符串，也就是Python合法的变量；</p><p>[a-zA-Z_][0-9a-zA-Z_]{0, 19} 更精确地限制了变量的长度是1-20个字符（前面1个字符+后面最多19个字符）。</p><p>(?:…) 不作为分组</p><h2 id="转义符"><a href="#转义符" class="headerlink" title="转义符"></a>转义符</h2><p>特殊字符：.^$?+*{}[]()|<br>以上特殊字符要想使用字面值，必须使用\进行转义</p><h2 id="贪婪匹配"><a href="#贪婪匹配" class="headerlink" title="贪婪匹配"></a>贪婪匹配</h2><p>因为正则表达式默认是“贪婪”的，贪婪匹配，也就是匹配尽可能多的字符。</p><p>“+”代表是字符重复一次或多次。但是这个多次到底是多少次。所以它会尽可能“贪婪”地多给我们匹配字符，在这个例子里也就是匹配到最后一个“.”。我们怎么解决这种问题呢？只要在“+”后面加一个“？”就好了。</p><p>例子：理想的结果是@hit.结果是@hit.edu.</p><p>当需要用到 ‘+’ 或 ‘*’ 这种一定先想好到底是用贪婪型还是懒惰型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">key = <span class="string">r"chuxiuhong@hit.edu.cn"</span></span><br><span class="line">p1 = <span class="string">r"@.+\."</span><span class="comment">#我想匹配到@后面一直到“.”之间的，在这里是hit</span></span><br><span class="line"><span class="comment">#p1 = r'@[a-z]&#123;3&#125;\.'</span></span><br><span class="line">pattern1 = re.compile(p1)</span><br><span class="line"><span class="keyword">print</span> (pattern1.findall(key))</span><br><span class="line"><span class="keyword">print</span> (re.findall(<span class="string">r'@.+?\.'</span>,key))</span><br></pre></td></tr></table></figure><pre><code>[&apos;@hit.edu.&apos;][&apos;@hit.&apos;]</code></pre><p>注意，如果 <code>.*?</code>放到字符串结尾，可能匹配不到任何内容了，因为它会匹配尽可能少的字符。下面例子结果，就没匹配到内容</p><p><code>.*?</code> 尽量匹配少的内容<br><code>.*</code>  尽量匹配多的内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">test = <span class="string">'https://Jamie/python'</span></span><br><span class="line">result1 = re.search(<span class="string">r'http.*?Jamie/(.*?)'</span>,test)</span><br><span class="line">result2 = re.search(<span class="string">r'http.*?Jamie/(.*)'</span>,test)</span><br><span class="line">print(<span class="string">'result1'</span>,result1.group(<span class="number">1</span>))</span><br><span class="line">print(<span class="string">'result2'</span>,result2.group(<span class="number">1</span>))</span><br></pre></td></tr></table></figure><pre><code>result1 result2 python</code></pre><h2 id="向前向后查找"><a href="#向前向后查找" class="headerlink" title="向前向后查找"></a>向前向后查找</h2><p>?&lt;=后面跟着的是前缀要求，?=后面跟的是后缀要求。</p><p>exp1(?=exp2)    表示exp1后面的内容要匹配exp2,返回exp1（前瞻）</p><p>exp1(?!exp2)    表示exp1后面的内容不能匹配exp2,返回exp1 （负前瞻）</p><p>(?&lt;=exp2)exp1   表示exp1前面的内容要匹配exp2,返回exp1  （后顾）</p><p>(?&lt;!exp2)exp1   表示exp1前面的内容不能匹配exp2,返回exp1  （负后顾）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">print(<span class="string">'--------------  exp1(?=exp2) ---------------'</span>)</span><br><span class="line">pattern = <span class="string">r'\w(?=\d)'</span> <span class="comment"># 匹配数字的前一位，\w：单词字符[A-Za-z0-9]</span></span><br><span class="line">print(re.findall(pattern,<span class="string">'abc1 edf1 xyz1'</span>)) </span><br><span class="line">print(re.findall(pattern,<span class="string">'jamie201807101740jamie'</span>)) </span><br><span class="line">print(re.findall(<span class="string">r'\w+(?=\d)'</span>,<span class="string">'abc1 edf1 xyz1'</span>))  <span class="comment"># 匹配数字的前多位，\w：单词字符[A-Za-z0-9]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(<span class="string">'--------------  exp1(?!exp2) ---------------'</span>)</span><br><span class="line">p = <span class="string">r'[A-Za-z](?!\d)'</span></span><br><span class="line">print(re.findall(p,<span class="string">'jamie201807101740jamie'</span>))  <span class="comment">#匹配后面不是数字的一位字符，</span></span><br><span class="line">print(re.findall(<span class="string">r'[A-Za-z]+(?!\d)'</span>,<span class="string">'jamie201807101740jamie'</span>)) <span class="comment">#匹配后面不是数字的字符串</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(<span class="string">'--------------  (?&lt;=exp2)exp1 ---------------'</span>)</span><br><span class="line">pat = <span class="string">r'(?&lt;=\d)[A-Za-z]+'</span> <span class="comment"># 匹配前面是数字的字母 返回exp1</span></span><br><span class="line">print(re.findall(pat,<span class="string">'3abc21,5def31,7xyz41'</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(<span class="string">'--------------  (?&lt;!exp2)exp1 ---------------'</span>)</span><br><span class="line">pa = <span class="string">r'(?&lt;!\d)[A-Za-z]+'</span> <span class="comment"># 匹配前面不是数字的字母 返回exp1</span></span><br><span class="line">print(re.findall(pa,<span class="string">'abc21,def31,xyz41,Jamie124324Jamie'</span>))</span><br></pre></td></tr></table></figure><pre><code>--------------  exp1(?=exp2) ---------------[&apos;c&apos;, &apos;f&apos;, &apos;z&apos;][&apos;e&apos;, &apos;2&apos;, &apos;0&apos;, &apos;1&apos;, &apos;8&apos;, &apos;0&apos;, &apos;7&apos;, &apos;1&apos;, &apos;0&apos;, &apos;1&apos;, &apos;7&apos;, &apos;4&apos;][&apos;abc&apos;, &apos;edf&apos;, &apos;xyz&apos;]--------------  exp1(?!exp2) ---------------[&apos;j&apos;, &apos;a&apos;, &apos;m&apos;, &apos;i&apos;, &apos;j&apos;, &apos;a&apos;, &apos;m&apos;, &apos;i&apos;, &apos;e&apos;][&apos;jami&apos;, &apos;jamie&apos;]--------------  (?&lt;=exp2)exp1 ---------------[&apos;abc&apos;, &apos;def&apos;, &apos;xyz&apos;]--------------  (?&lt;!exp2)exp1 ---------------[&apos;abc&apos;, &apos;def&apos;, &apos;xyz&apos;, &apos;Jamie&apos;, &apos;amie&apos;]</code></pre><h3 id="组合使用"><a href="#组合使用" class="headerlink" title="组合使用"></a>组合使用</h3><p>例如：我们要查找hello，但是hello后面必须是world，正则表达式可以这样写：”(hello)\s+(?=world)”,用来匹配”hello wangxing”和”hello world”只能匹配到后者的hello</p><p>(?&lt;=exp1)exp(?=exp2) 表示exp前面的内容要匹配exp1,后面的内容要匹配exp2,即exp1expexp2</p><p>匹配到两个括号中间的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">key = <span class="string">r"&lt;html&gt;&lt;body&gt;&lt;h1&gt;hello world&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;"</span><span class="comment">#这段是你要匹配的文本</span></span><br><span class="line">p1 = <span class="string">r"(?&lt;=&lt;h1&gt;).+?(?=&lt;/h1&gt;)"</span><span class="comment">#这是我们写的正则表达式规则</span></span><br><span class="line">matcher1 = re.search(p1,key)<span class="comment">#在源文本中搜索符合正则表达式的部分</span></span><br><span class="line">print(matcher1.group(<span class="number">0</span>))<span class="comment">#打印出来</span></span><br><span class="line"></span><br><span class="line">print(re.search(p1,key).group(<span class="number">0</span>))</span><br></pre></td></tr></table></figure><pre><code>hello worldhello world</code></pre><h2 id="回溯引用"><a href="#回溯引用" class="headerlink" title="回溯引用"></a>回溯引用</h2><p>原本要匹配<code>&lt;h1&gt;\&lt;/h1&gt;</code>之间的内容，现在你知道HTML有多级标题，你想把每一级的标题内容都提取出来。你也许会这样写：</p><p><code>p = r&quot;&lt;h[1-6]&gt;.*?&lt;/h[1-6]&gt;&quot;</code></p><p>这样一来，你就可以将HTML页面内所有的标题内容全部匹配出来。即<code>&lt;h1&gt;\&lt;/h1&gt;到&lt;h6&gt;\&lt;/h6&gt;</code>的内容都可以被提取出来。但是我们之前说过，写正则表达式困难的不是匹配到想要的内容，而是尽可能的不匹配到不想要的内容。在这个例子中，很有可能你就会被下面这样的用例玩坏。</p><p>比方说</p><p><code>&lt;h1&gt;hello world&lt;/h3&gt;</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">key = <span class="string">r"&lt;h1&gt;hello world&lt;/h1&gt;"</span></span><br><span class="line">p1 = <span class="string">r"&lt;h([1-6])&gt;.*?&lt;/h\1&gt;"</span></span><br><span class="line">m1 = re.search(p1,key)</span><br><span class="line">print(m1.group(<span class="number">0</span>))<span class="comment">#这里是会报错的，因为匹配不到，你如果将源字符串改成&lt;/h1&gt;</span></span><br><span class="line"><span class="comment">#结尾就能看出效果</span></span><br></pre></td></tr></table></figure><pre><code>&lt;h1&gt;hello world&lt;/h1&gt;</code></pre><p>看到\1了吗？原本那个位置应该是[1-6]，但是我们写的是\1，我们之前说过，转义符\干的活就是把特殊的字符转成一般的字符，把一般的字符转成特殊字符。普普通通的数字1被转移成什么了呢？在这里1表示第一个子表达式，也就是说，它是动态的，是随着前面第一个子表达式的匹配到的东西而变化的。比方说前面的子表达式内是[1-6]，在实际字符串中找到了1，那么后面的\1就是1，如果前面的子表达式在实际字符串中找到了2，那么后面的\1就是2。</p><p>类似的，\2,\3,….就代表第二个第三个子表达式。</p><p>所以回溯引用是正则表达式内的一个“动态”的正则表达式，让你根据实际的情况变化进行匹配。</p><p>如果我们要找从字符串中找出联系重复的数字，如11,22</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="comment"># 找出第一次出现的重复数字</span></span><br><span class="line">test = <span class="string">'..1234567891011213141516171820212223'</span></span><br><span class="line">reg = <span class="string">r'([0-9a-zA-Z])\1+'</span> <span class="comment">#回溯引用,表示与前面相同的字符</span></span><br><span class="line">m =re.search(reg,test)</span><br><span class="line">print(m.group())</span><br></pre></td></tr></table></figure><pre><code>11</code></pre><p>(\d)\1的意思是，第一个是数字，第二个数字跟第一个数字相同。正则表达式中，用了一个专门的术语来描述\1这种概念，即回溯引用。</p><p>四个相同数字  (\d)\1\1\1  或   (\d)\1{3}</p><p>多个相同的数字<br>(\d)\1+</p><h2 id="re-match"><a href="#re-match" class="headerlink" title="re.match()"></a>re.match()</h2><p>re.match 尝试从字符串的起始位置匹配一个模式，如果不是起始位置匹配成功的话，match()就返回none。</p><p><span class="mark">re.match(pattern, string, flags=0)</span></p><p>pattern 匹配的正则表达式</p><p>string  要匹配的字符串</p><p>flags   标志位，用于控制正则表达式的匹配方式，如：是否区分大小写，多行匹配等等</p><p>可以使用group(num) 或 groups() 匹配对象函数来获取匹配表达式。</p><p>group(num=0)  匹配的整个表达式的字符串</p><p>group() 可以一次输入多个组号，在这种情况下它将返回一个包含那些组所对应值的元组。</p><p>groups()  返回一个包含所有小组字符串的元组，从 1 到 所含的小组号。</p><p>命名分组 (?P<name>…)</name></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re </span><br><span class="line"></span><br><span class="line">print(re.match(<span class="string">'www'</span>, <span class="string">'www.google.com'</span>))  <span class="comment"># 在起始位置匹配，成功</span></span><br><span class="line">print(re.match(<span class="string">'com'</span>, <span class="string">'www.google.com'</span>))  <span class="comment"># 不在起始位置匹配，失败</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># group 分组，从左到右</span></span><br><span class="line">print(re.match(<span class="string">'(.*\d)\.(.*\d)\.'</span>, <span class="string">'www1.google2.com3'</span>).group()) <span class="comment"># 所有匹配项</span></span><br><span class="line">print(re.match(<span class="string">'(.*\d)\.(.*\d)\.'</span>, <span class="string">'www1.google2.com3'</span>).group(<span class="number">0</span>)) <span class="comment"># 所以匹配项</span></span><br><span class="line">print(re.match(<span class="string">'(.*\d)\.(.*\d)\.'</span>, <span class="string">'www1.google2.com3'</span>).group(<span class="number">1</span>)) <span class="comment"># 第一个匹配项</span></span><br><span class="line">print(re.match(<span class="string">'(.*\d)\.(.*\d)\.'</span>, <span class="string">'www1.google2.com3'</span>).group(<span class="number">2</span>)) <span class="comment"># 第二个匹配项</span></span><br><span class="line">print(re.match(<span class="string">'(.*\d)\.(.*\d)\.'</span>, <span class="string">'www1.google2.com3'</span>).group(<span class="number">1</span>,<span class="number">2</span>)) </span><br><span class="line">print(re.match(<span class="string">'(.*\d)\.(.*\d)\.'</span>, <span class="string">'www1.google2.com3'</span>).groups()) </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># group 嵌套，从外到内，再从左到右</span></span><br><span class="line">print(re.match(<span class="string">'((.*\d)\.(.*\d))\.'</span>, <span class="string">'www1.google2.com3'</span>).group(<span class="number">1</span>))  <span class="comment"># group（1）是最外层</span></span><br><span class="line">print(re.match(<span class="string">'((.*\d)\.(.*\d))\.'</span>, <span class="string">'www1.google2.com3'</span>).group(<span class="number">2</span>))  <span class="comment"># group（2）内层从左向右</span></span><br><span class="line">print(re.match(<span class="string">'((.*\d)\.(.*\d))\.'</span>, <span class="string">'www1.google2.com3'</span>).group(<span class="number">3</span>)) <span class="comment"># group（3）内层从左向右</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 命名分组</span></span><br><span class="line">m = re.match(<span class="string">'((?P&lt;name&gt;.*\d)\.(?P&lt;website&gt;.*\d))\.'</span>, <span class="string">'www1.google2.com3'</span>)</span><br><span class="line">print(m.group(<span class="string">'name'</span>))</span><br><span class="line">print(m.group(<span class="string">'website'</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># groupdict()</span></span><br><span class="line">print(m.groupdict())</span><br></pre></td></tr></table></figure><pre><code>&lt;_sre.SRE_Match object; span=(0, 3), match=&apos;www&apos;&gt;Nonewww1.google2.www1.google2.www1google2(&apos;www1&apos;, &apos;google2&apos;)(&apos;www1&apos;, &apos;google2&apos;)www1.google2www1google2www1google2{&apos;name&apos;: &apos;www1&apos;, &apos;website&apos;: &apos;google2&apos;}</code></pre><h2 id="re-search"><a href="#re-search" class="headerlink" title="re.search()"></a>re.search()</h2><p>re.search 扫描整个字符串并返回第一个成功的匹配。</p><p><span class="mark">re.search(pattern, string, flags=0)</span></p><p>pattern 匹配的正则表达式</p><p>string 要匹配的字符串</p><p>flags 标志位，用于控制正则表达式的匹配方式，如：是否区分大小写，多行匹配等等</p><p>可以使用group(num) 或 groups() 匹配对象函数来获取匹配表达式。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re </span><br><span class="line"></span><br><span class="line">print(re.search(<span class="string">'www'</span>, <span class="string">'www.google.com'</span>))  <span class="comment"># 在起始位置匹配，成功</span></span><br><span class="line">print(re.search(<span class="string">'com'</span>, <span class="string">'www.google.com'</span>))  <span class="comment"># 不在起始位置匹配,成功</span></span><br></pre></td></tr></table></figure><pre><code>&lt;_sre.SRE_Match object; span=(0, 3), match=&apos;www&apos;&gt;&lt;_sre.SRE_Match object; span=(11, 14), match=&apos;com&apos;&gt;</code></pre><p>match和search一旦匹配成功，就是一个match object对象，而match object对象有以下方法：</p><p>start() 返回匹配开始的位置,子串第一个字符的索引</p><p>end() 返回匹配结束的位置，子串最后一个字符的索引+1</p><p>span() 返回一个元组包含匹配 (开始,结束) 的位置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">m = re.search(<span class="string">r'\d+'</span>,<span class="string">'adf1234adsf'</span>)</span><br><span class="line">print(m.start())</span><br><span class="line">print(m.end())</span><br><span class="line">print(m.span())</span><br></pre></td></tr></table></figure><pre><code>37(3, 7)</code></pre><h2 id="re-match与re-search的区别"><a href="#re-match与re-search的区别" class="headerlink" title="re.match与re.search的区别"></a>re.match与re.search的区别</h2><p>re.match只匹配字符串的开始，如果字符串开始不符合正则表达式，则匹配失败，函数返回None；而re.search匹配整个字符串，直到找到一个匹配。</p><h2 id="re-sub-检索和替换、删除"><a href="#re-sub-检索和替换、删除" class="headerlink" title="re.sub 检索和替换、删除"></a>re.sub 检索和替换、删除</h2><p>re.sub用于替换字符串中的匹配项。</p><p><span class="mark">re.sub(pattern, repl, string, count=0)</span></p><p>pattern : 正则中的模式字符串。</p><p>repl : 替换的字符串，也可为一个函数。</p><p>string : 要被查找替换的原始字符串。</p><p>count : 模式匹配后替换的最大次数，默认 0 表示替换所有的匹配。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">phone = <span class="string">'2004-959-559 # 这是一个电话号码'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#删除注释部分</span></span><br><span class="line">num = re.sub(<span class="string">'#.*'</span>,<span class="string">''</span>,phone)</span><br><span class="line">print(num)</span><br><span class="line"></span><br><span class="line"><span class="comment">#移除非数字的内容</span></span><br><span class="line">num = re.sub(<span class="string">'\D'</span>,<span class="string">''</span>,phone)</span><br><span class="line">print(num)</span><br></pre></td></tr></table></figure><pre><code>2004-959-559 2004959559</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">test = <span class="string">'hello James, nihao James'</span></span><br><span class="line">replacedtest = re.sub(<span class="string">r'hello (\w+), nihao \1'</span>,<span class="string">'Jamie'</span>,test) <span class="comment"># 匹配到整个字符串，并用Jamie替换掉整个字符串</span></span><br><span class="line">print(replacedtest)</span><br><span class="line"></span><br><span class="line">retest= re.sub(<span class="string">r'hello (\w+), nihao \1'</span>,<span class="string">r'\1'</span>,test) <span class="comment"># 匹配到整个字符串，并用组1替换掉整个字符串</span></span><br><span class="line">print(retest)</span><br><span class="line"></span><br><span class="line">s = <span class="string">'hello world ! hello hz !'</span></span><br><span class="line">print(re.findall(<span class="string">r'(\w+) (\w+)'</span>,s)) <span class="comment"># 可以看到匹配到2了项</span></span><br><span class="line">r = re.sub(<span class="string">r'(\w+) (\w+)'</span>,<span class="string">r'\2 \1'</span>,s) <span class="comment"># 每项中的2组位置互换</span></span><br><span class="line">print(r)</span><br><span class="line"></span><br><span class="line">s = <span class="string">'Hello, *world*!'</span></span><br><span class="line">s1 = <span class="string">'Hello, *world* *good* !'</span></span><br><span class="line">pattern = <span class="string">r'\*([^\*]+)\*'</span></span><br><span class="line">print(re.search(pattern,s).group(<span class="number">1</span>)) <span class="comment"># 匹配项中的组1</span></span><br><span class="line">print(re.sub(pattern,<span class="string">r'&lt;em&gt;\1&lt;／em&gt;'</span>,s)) </span><br><span class="line"></span><br><span class="line">print(re.findall(pattern,s1))</span><br><span class="line">print(re.sub(pattern,<span class="string">r'&lt;em&gt;\1&lt;／em&gt;'</span>,s1)) <span class="comment"># 匹配到两项，每项的组1替换匹配项</span></span><br></pre></td></tr></table></figure><pre><code>JamieJames[(&apos;hello&apos;, &apos;world&apos;), (&apos;hello&apos;, &apos;hz&apos;)]world hello ! hz hello !worldHello, &lt;em&gt;world&lt;／em&gt;![&apos;world&apos;, &apos;good&apos;]Hello, &lt;em&gt;world&lt;／em&gt; &lt;em&gt;good&lt;／em&gt; !</code></pre><h2 id="匹配汉字"><a href="#匹配汉字" class="headerlink" title="匹配汉字"></a>匹配汉字</h2><p>[\u4e00-\u9fa5] 至少匹配一个汉字</p><p>这两个unicode值正好是Unicode表中的汉字的头和尾。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">print(re.match(<span class="string">'[\u4e00-\u9fa5]'</span>, <span class="string">'你好'</span>)) </span><br><span class="line">line = <span class="string">'study in 南京大学'</span></span><br><span class="line">print(re.match(<span class="string">'.*([\u4e00-\u9fa5]+大学)'</span>,line).group(<span class="number">1</span>)) <span class="comment">#贪婪匹配</span></span><br><span class="line">print(re.match(<span class="string">'.*?([\u4e00-\u9fa5]+大学)'</span>,line).group(<span class="number">1</span>)) <span class="comment">#非贪婪匹配</span></span><br></pre></td></tr></table></figure><pre><code>&lt;_sre.SRE_Match object; span=(0, 1), match=&apos;你&apos;&gt;京大学南京大学</code></pre><h2 id="小测试"><a href="#小测试" class="headerlink" title="小测试"></a>小测试</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">m =[ <span class="string">'XXX出生于2011年6月1日'</span>,<span class="string">'XXX出生于2011年6月'</span>,<span class="string">'XXX出生于2011/6/1'</span>,<span class="string">'XXX出生于2011-6-1'</span>,<span class="string">'XXX出生于2011-06-01'</span>,<span class="string">'XXX出生于2011-06'</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> m:</span><br><span class="line">    print(re.match(<span class="string">'.*出生于(\d&#123;4&#125;[年/-]\d&#123;1,2&#125;([月/-]\d&#123;1,2&#125;.?|[月/-]$|$))'</span>,i).group(<span class="number">1</span>))</span><br></pre></td></tr></table></figure><pre><code>2011年6月1日2011年6月2011/6/12011-6-12011-06-012011-06</code></pre><h2 id="普遍邮箱适用的正则表达式"><a href="#普遍邮箱适用的正则表达式" class="headerlink" title="普遍邮箱适用的正则表达式"></a>普遍邮箱适用的正则表达式</h2><p>reg =  r’[A-Za-z0-9_]+@[A-Za-z0-9]+.[a-z]{3}</p><p>因为</p><p>\w 等同于[a-z0-9A-Z_]匹配大小写字母、数字和下划线</p><p>所以</p><p>reg =  r’\w+@\w+.[a-z]{3}</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">text = <span class="string">'45206091@qq.com rogovik1994@icloud.com sd676876@ru.com  russell_gardner@icloud.com'</span></span><br><span class="line">reg =  <span class="string">r'[A-Za-z0-9_]+@[A-Za-z0-9]+\.[a-z]&#123;3&#125;'</span></span><br><span class="line">regx = <span class="string">r'\w+@\w+\.[a-z]&#123;3&#125;'</span></span><br><span class="line">print(re.findall(reg,text))</span><br><span class="line">print(re.findall(regx,text))</span><br></pre></td></tr></table></figure><pre><code>[&apos;45206091@qq.com&apos;, &apos;rogovik1994@icloud.com&apos;, &apos;sd676876@ru.com&apos;, &apos;russell_gardner@icloud.com&apos;][&apos;45206091@qq.com&apos;, &apos;rogovik1994@icloud.com&apos;, &apos;sd676876@ru.com&apos;, &apos;russell_gardner@icloud.com&apos;]</code></pre><h2 id="re-findall-与-re-search-的区别"><a href="#re-findall-与-re-search-的区别" class="headerlink" title="re.findall() 与 re.search() 的区别"></a>re.findall() 与 re.search() 的区别</h2><p>re.search匹配整个字符串，直到找到一个匹配,返回一个Match对象</p><p>和re.match一样<br>通过Match对象内的group编号或命名，获得对应的值</p><p>注意到group(0)永远是原始字符串，group(1)、group(2)……表示第1、2、……个子串</p><p>re.findall返回一个列表对象，包含所有匹配的字符串</p><p>正则表达式中没有使用分组，即没有括号，返回值是匹配到的完整字符串的列表</p><p>正则表达式中有使用分组，即有括号，返回值是各个group的值所组合出来的列表</p><p>所以要通过findall，想要获得整个字符串的话，有两种方法</p><p>第一：使用不带括号的，即没有分组</p><p>第二：使用括号，但是要用特殊符号 (?:) 不作为分组 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">text = <span class="string">'45206091@qq.com rogovik1994@icloud.com sd676876@ru.com'</span></span><br><span class="line">reg =  <span class="string">r'[A-Za-z0-9.]+@[A-Za-z0-9]+\.[a-z]&#123;3&#125;'</span></span><br><span class="line">print(re.search(reg,text))<span class="comment"># 返回第一个匹配的Match对象</span></span><br><span class="line">print(re.search(reg,text).group(<span class="number">0</span>))<span class="comment"># group(0)获取值</span></span><br><span class="line">print(re.findall(reg,text))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 自己写的邮箱正则表达式，想想结果</span></span><br><span class="line">reg2 = <span class="string">r'[A-Za-z0-9_]+@[a-zA-Z0-9]+\.(cn|com|ru|net|gmail)'</span></span><br><span class="line"></span><br><span class="line">email = re.search(reg,text) <span class="comment"># 匹配到第一个邮箱</span></span><br><span class="line">email2 = re.findall(reg2,text) <span class="comment"># 结果是['com', 'com', 'com'] 为什么？</span></span><br><span class="line">print(email.group(<span class="number">0</span>))</span><br><span class="line">print(email2) </span><br><span class="line"><span class="comment"># 在re.findall(),中的正则表达式有使用分组，即有括号，返回值是各个group的值所组合出来的列表</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">reg3 = <span class="string">r'[A-Za-z0-9_]+@[a-zA-Z0-9]+\.(?:cn|com|ru|net|gmail)'</span></span><br><span class="line">print(re.findall(reg3,text))</span><br><span class="line"><span class="comment"># 在re.findall(),中的正则表达式有使用分组，如果想获取整个字符串，再括号前添加 ？：</span></span><br></pre></td></tr></table></figure><pre><code>&lt;_sre.SRE_Match object; span=(0, 15), match=&apos;45206091@qq.com&apos;&gt;45206091@qq.com[&apos;45206091@qq.com&apos;, &apos;rogovik1994@icloud.com&apos;, &apos;sd676876@ru.com&apos;]45206091@qq.com[&apos;com&apos;, &apos;com&apos;, &apos;com&apos;][&apos;45206091@qq.com&apos;, &apos;rogovik1994@icloud.com&apos;, &apos;sd676876@ru.com&apos;]</code></pre><h2 id="判断小数"><a href="#判断小数" class="headerlink" title="判断小数"></a>判断小数</h2><p><a href="https://www.hackerrank.com/challenges/introduction-to-regex/editorial" target="_blank" rel="noopener">https://www.hackerrank.com/challenges/introduction-to-regex/editorial</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">test = <span class="string">'+.4'</span> </span><br><span class="line">test1 = <span class="string">'.5'</span> </span><br><span class="line">test2 = <span class="string">'-+4.5'</span></span><br><span class="line">test3 = <span class="string">'12.'</span>   </span><br><span class="line">test4 = <span class="string">'4.0o0'</span> <span class="comment"># 不是小数，内含字母 </span></span><br><span class="line">reg = <span class="string">r'^[-+]?\d*\.\d+$'</span></span><br><span class="line">print(bool(re.search(reg,test)))</span><br><span class="line">print(bool(re.search(reg,test1)))</span><br><span class="line">print(bool(re.search(reg,test2)))</span><br><span class="line">print(bool(re.search(reg,test3)))</span><br><span class="line">print(bool(re.search(reg,test4)))</span><br></pre></td></tr></table></figure><pre><code>TrueTrueFalseFalseFalse</code></pre><h2 id="re-compile-pattern-flags-0"><a href="#re-compile-pattern-flags-0" class="headerlink" title="re.compile(pattern, flags=0)"></a>re.compile(pattern, flags=0)</h2><p>这个方法可以将正则字符串编译成正则表达式对象，以便在后面的匹配中复用</p><p><a href="https://www.cnblogs.com/huxi/archive/2010/07/04/1771073.html" target="_blank" rel="noopener">https://www.cnblogs.com/huxi/archive/2010/07/04/1771073.html</a></p><p>prog = re.compile(pattern)</p><p>result = prog.match(string)</p><p>等价于</p><p>result = re.match(pattern, string)</p><p>re提供了众多模块方法用于完成正则表达式的功能。这些方法可以使用Pattern实例的相应方法替代，唯一的好处是少写一行re.compile()代码，但同时也无法复用编译后的Pattern对象。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">test = <span class="string">'3232xc'</span></span><br><span class="line">reg = <span class="string">r'\d+'</span></span><br><span class="line"></span><br><span class="line">pattern = re.compile(reg)</span><br><span class="line">result1 = pattern.match(test)</span><br><span class="line"><span class="comment">#上面两行等价于下面一行</span></span><br><span class="line">result2 = re.match(reg,test)</span><br><span class="line">print(result1.group(<span class="number">0</span>),result2.group(),sep=<span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure><pre><code>32323232</code></pre><h3 id="Pattern"><a href="#Pattern" class="headerlink" title="Pattern"></a>Pattern</h3><p>Pattern对象是一个编译好的正则表达式，通过Pattern提供的一系列方法可以对文本进行匹配查找。</p><p>Pattern不能直接实例化，必须使用re.compile()进行构造。 </p><p>Pattern提供了几个可读属性用于获取表达式的相关信息：</p><p>pattern: 编译时用的表达式字符串。</p><p>flags: 编译时用的匹配模式。数字形式。</p><p>groups: 表达式中分组的数量。</p><p>groupindex: 以表达式中有别名的组的别名为键、以该组对应的编号为值的字典，没有别名的组不包含在内。</p><h3 id="pattern-match-string-pos-endpos"><a href="#pattern-match-string-pos-endpos" class="headerlink" title="pattern.match(string[, pos[, endpos]])"></a>pattern.match(string[, pos[, endpos]])</h3><p>从string的pos下标处起尝试匹配pattern；如果pattern 一开始就可匹配，则返回一个Match对象；如果匹配过程中pattern无法匹配，或者匹配未结束就已到达endpos，则返回None。 </p><p>pos和endpos的默认值分别为0和len(string)；re.match()无法指定这两个参数，参数flags用于编译pattern时指定匹配模式。 </p><p>注意：这个方法并不是完全匹配。当pattern结束时若string还有剩余字符，仍然视为成功。想要完全匹配，可以在表达式末尾加上边界匹配符’$’。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">test = <span class="string">'1aaadaa'</span></span><br><span class="line">test1 = <span class="string">'1aaadaab'</span></span><br><span class="line"></span><br><span class="line">pattern = re.compile(<span class="string">r'aa'</span>)</span><br><span class="line">pattern1 = re.compile(<span class="string">r'aa$'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(pattern.match(test)) <span class="comment"># 返回none,因为一开始久没匹配到</span></span><br><span class="line">print(pattern.match(test,<span class="number">5</span>))</span><br><span class="line">print(pattern1.match(test,<span class="number">5</span>))</span><br><span class="line">print(pattern1.match(test1,<span class="number">5</span>))</span><br></pre></td></tr></table></figure><pre><code>None&lt;_sre.SRE_Match object; span=(5, 7), match=&apos;aa&apos;&gt;&lt;_sre.SRE_Match object; span=(5, 7), match=&apos;aa&apos;&gt;None</code></pre><h3 id="pattern-search-string-pos-endpos"><a href="#pattern-search-string-pos-endpos" class="headerlink" title="pattern.search(string[, pos[, endpos]])"></a>pattern.search(string[, pos[, endpos]])</h3><p>这个方法用于查找字符串中可以匹配成功的子串。从string的pos下标处起尝试匹配pattern，如果pattern结束时仍可匹配，则返回一个Match对象；若无法匹配，则将pos加1后重新尝试匹配；直到pos=endpos时仍无法匹配则返回None。 </p><p>pos和endpos的默认值分别为0和len(string))；re.search()无法指定这两个参数，参数flags用于编译pattern时指定匹配模式。 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">test = <span class="string">'hello world!'</span></span><br><span class="line">pattern = re.compile(<span class="string">r'world'</span>)</span><br><span class="line">print(pattern.search(test))</span><br></pre></td></tr></table></figure><pre><code>&lt;_sre.SRE_Match object; span=(6, 11), match=&apos;world&apos;&gt;</code></pre><h3 id="pattern-findall-string-pos-endpos"><a href="#pattern-findall-string-pos-endpos" class="headerlink" title="pattern.findall(string[, pos[, endpos]])"></a>pattern.findall(string[, pos[, endpos]])</h3><p>搜索string，以列表形式返回全部能匹配的子串。 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">test = <span class="string">'aaadaa'</span></span><br><span class="line">pattern = re.compile(<span class="string">'aa'</span>)</span><br><span class="line">print(pattern.findall(test))</span><br></pre></td></tr></table></figure><pre><code>[&apos;aa&apos;, &apos;aa&apos;]</code></pre><h3 id="finditer-string-pos-endpos"><a href="#finditer-string-pos-endpos" class="headerlink" title="finditer(string[, pos[, endpos]])"></a>finditer(string[, pos[, endpos]])</h3><p>返回string中所有与pattern相匹配的全部字串，返回形式为迭代器。若匹配成功，match()/search()返回的是Match对象，finditer()返回的也是Match对象的迭代器，获取匹配结果需要调用Match对象的group()、groups或group(index)方法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">test = <span class="string">'aaadaa'</span></span><br><span class="line">reg = <span class="string">'aa'</span></span><br><span class="line">m = re.finditer(<span class="string">r'(?=&#123;&#125;)'</span>.format(reg),test)</span><br><span class="line">x = re.findall(<span class="string">r'(?=&#123;&#125;)'</span>.format(reg),test)</span><br><span class="line">print(list(m))</span><br><span class="line">print(x)</span><br></pre></td></tr></table></figure><pre><code>[&lt;_sre.SRE_Match object; span=(0, 0), match=&apos;&apos;&gt;, &lt;_sre.SRE_Match object; span=(1, 1), match=&apos;&apos;&gt;, &lt;_sre.SRE_Match object; span=(4, 4), match=&apos;&apos;&gt;][&apos;&apos;, &apos;&apos;, &apos;&apos;]</code></pre><h2 id="匹配叠加项"><a href="#匹配叠加项" class="headerlink" title="匹配叠加项"></a>匹配叠加项</h2><p>re.findall()<br>返回不叠加的所有匹配项的列表对象<br>Return all non-overlapping matches of pattern in string, as a list of strings. The string is scanned left-to-right, and matches are returned in the order found.</p><p>不叠加时什么意思<br>‘aaadaa’里面不叠加的算，有2个’aa’,叠加的算有3个’aa’</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">test = <span class="string">'aaadaa'</span></span><br><span class="line">reg = <span class="string">'aa'</span></span><br><span class="line">i = re.findall(reg,test)</span><br><span class="line">print(i)</span><br></pre></td></tr></table></figure><pre><code>[&apos;aa&apos;, &apos;aa&apos;]</code></pre><p>如何匹配叠加的所有项？</p><p>pattern.search(string[, pos[, endpos]]) 从string的pos下标处和endpos下标处之间匹配pattern</p><p>re.search()无法指定这两个参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第一种遍历全部项</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">test = <span class="string">'aaadaa'</span></span><br><span class="line">pattern = re.compile(<span class="string">'aa'</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(test)):</span><br><span class="line">    p = pattern.match(test,i)</span><br><span class="line">    <span class="keyword">if</span> p:</span><br><span class="line">        print(p.group())</span><br></pre></td></tr></table></figure><pre><code>aaaaaa</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#第三种 从匹配到的项的开头索引下一位作为下一次查找的开头，逐渐减少匹配范围</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">test = <span class="string">'aaadaa'</span></span><br><span class="line">reg = <span class="string">'aa'</span></span><br><span class="line">pattern = re.compile(reg)</span><br><span class="line">r = pattern.search(test)</span><br><span class="line"><span class="keyword">while</span> r:</span><br><span class="line">    print(r.group())</span><br><span class="line">    r = pattern.search(test,r.start()+<span class="number">1</span>)</span><br></pre></td></tr></table></figure><pre><code>aaaaaa</code></pre><h2 id="修饰符"><a href="#修饰符" class="headerlink" title="修饰符"></a>修饰符</h2><p>正则表达式可以包含一些可选标志修饰符来控制匹配的模式。修饰符被指定为一个可选的表示。</p><p>re.I   使匹配对大小写不敏感</p><p>re.L   做本地化识别(locale-aware)匹配</p><p>re.M   多行匹配，影响^和$</p><p>re.S   使.匹配包括换行在内的所有字符</p><p>re.U   根据Unicode字符集解析字符。这个标志影响\w,\W,\b,\B</p><p>re.X   该标志通过给与你更灵活的格式以便你将正则表达式写得更易于理解</p><p>在网页匹配中，较为常用的是 re.S 和 re.I</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">test = <span class="string">'''Hello Jamie33 worldthis is a Regex Demo</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">print(re.match(<span class="string">r'He.*?(\d+).*?Demo$'</span>,test).group(<span class="number">1</span>))</span><br></pre></td></tr></table></figure><pre><code>33</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">现在稍作修改，字符串里面加一个换行符，看看结果如何</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">test = <span class="string">'''Hello Jamie33 world</span></span><br><span class="line"><span class="string">this is a Regex Demo</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">print(re.match(<span class="string">r'He.*?(\d+).*?Demo$'</span>,test).group(<span class="number">1</span>))</span><br></pre></td></tr></table></figure><pre><code>---------------------------------------------------------------------------AttributeError                            Traceback (most recent call last)&lt;ipython-input-9-3373d4ec7df0&gt; in &lt;module&gt;()      4 this is a Regex Demo      5 &apos;&apos;&apos;----&gt; 6 print(re.match(r&apos;He.*?(\d+).*?Demo$&apos;,test).group(1))AttributeError: &apos;NoneType&apos; object has no attribute &apos;group&apos;</code></pre><p>结果报错，为什么加了一个换行符，就匹配不到了。这是因为<code>.</code>匹配的是除换行符之外的任意字符，当遇到换行符时<code>.*？</code>就不能匹配了，所以失败。这里只需要加一个修饰符<code>re.S</code>就可以修正这个错误</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">test = <span class="string">'''Hello Jamie33 world</span></span><br><span class="line"><span class="string">this is a Regex Demo</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">print(re.match(<span class="string">r'He.*?(\d+).*?Demo$'</span>,test,re.S).group(<span class="number">1</span>))</span><br></pre></td></tr></table></figure><pre><code>33</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Regex-in-Python&quot;&gt;&lt;a href=&quot;#Regex-in-Python&quot; class=&quot;headerlink&quot; title=&quot;Regex in Python&quot;&gt;&lt;/a&gt;Regex in Python&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;在编写处理字符串的程序或网页时，经常会有查找符合某些复杂规则的字符串的需要。正则表达式就是用于描述这些规则的工具。换句话说，正则表达式就是记录文本规则的代码。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;字符&quot;&gt;&lt;a href=&quot;#字符&quot; class=&quot;headerlink&quot; title=&quot;字符&quot;&gt;&lt;/a&gt;字符&lt;/h2&gt;&lt;p&gt;.       匹配除换行符之外的任意字符，当re.S(DOTALL)标记被指定时，这可以匹配包括换         行符的任意字符 &lt;/p&gt;
&lt;p&gt;\d        可以匹配一个数字 等同于[0-9]&lt;/p&gt;
&lt;p&gt;\D        等同于[^0-9]匹配非数字&lt;/p&gt;
&lt;p&gt;\w        等同于[a-z0-9A-Z_]匹配大小写字母、数字和下划线&lt;/p&gt;
&lt;p&gt;\W        等同于[^a-z0-9A-Z_]等同于上一条取非&lt;/p&gt;
&lt;p&gt;A|B     可以匹配A或B，所以(P|p)ython可以匹配’Python’或者’python’&lt;/p&gt;
&lt;p&gt;^       表示行的开头，^\d表示必须以数字开头&lt;/p&gt;
&lt;p&gt;\$      表示行的结束，\d$表示必须以数字结束&lt;/p&gt;
&lt;p&gt;\s      可以匹配空白字符,等价于 [\t\n\r\f]。（也包括Tab等空白符）&lt;/p&gt;
&lt;p&gt;\S      匹配任意非空字符 &lt;/p&gt;
&lt;p&gt;\n      匹配一个换行符&lt;/p&gt;
&lt;p&gt;\t      匹配一个制表符&lt;/p&gt;
&lt;p&gt;\A      匹配字符串开头&lt;/p&gt;
&lt;p&gt;\Z      匹配字符串结尾，如果存在换行，只匹配到换行前的结束字符串&lt;/p&gt;
&lt;p&gt;\z      匹配字符串结尾，如果存在换行，同时还会匹配换行符&lt;/p&gt;
&lt;p&gt;\G      匹配最后匹配完成的位置 （不懂需要理解）&lt;/p&gt;
    
    </summary>
    
      <category term="Topics" scheme="http://yoursite.com/categories/Topics/"/>
    
    
      <category term="Regex" scheme="http://yoursite.com/tags/Regex/"/>
    
  </entry>
  
  <entry>
    <title>刷题 hackerrank Python 部分，多种解答方式和知识点归纳</title>
    <link href="http://yoursite.com/2018/07/19/hackerrank/"/>
    <id>http://yoursite.com/2018/07/19/hackerrank/</id>
    <published>2018-07-18T16:00:00.000Z</published>
    <updated>2018-07-19T08:33:44.682Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Print-Function"><a href="#Print-Function" class="headerlink" title="Print Function"></a>Print Function</h1><p><a href="https://www.hackerrank.com/challenges/python-print/problem" target="_blank" rel="noopener">https://www.hackerrank.com/challenges/python-print/problem</a></p><p>打印出123…N 之间的整数</p><p><span class="girk">方法一</span> 用 for 循环依次打印出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="number">3</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,n+<span class="number">1</span>):</span><br><span class="line">    print(i,end=<span class="string">''</span>)</span><br></pre></td></tr></table></figure><pre><code>123</code></pre><p><span class="girk">方法二</span> 用 print 内置函数的参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">n=<span class="number">3</span></span><br><span class="line">print(*range(<span class="number">1</span>, n+<span class="number">1</span>), sep=<span class="string">''</span>)</span><br></pre></td></tr></table></figure><pre><code>123</code></pre><a id="more"></a><h2>print()函数</h2><br><span class="mark">知识点</span>  print(*objects, sep=’ ‘, end=’\n’, file=sys.stdout, flush=False)<br><br>objects – object 复数形式，表示可以一次输出多个对象。输出多个对象时，需要用 , 分隔。<br><br>sep – 用来间隔多个对象，默认值是一个空格。<br><br>end – 用来设定以什么结尾。默认值是换行符 \n，我们可以换成其他字符串。<br><br>file – 要写入的文件对象。<br><br>*objects – 表示可以用可变参数<br><br>在函数调用时，在 str/list/tuple/range 参数前加 *，意思是把 str/list/tuple/range 序列中的元素一个一个传到函数里面<br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">'123456'</span></span><br><span class="line">b = [<span class="string">'1'</span>,<span class="string">'2'</span>,<span class="string">'3'</span>,<span class="string">'4'</span>,<span class="string">'5'</span>,<span class="string">'6'</span>]</span><br><span class="line">c = (<span class="string">'1'</span>,<span class="string">'2'</span>,<span class="string">'3'</span>,<span class="string">'4'</span>,<span class="string">'5'</span>,<span class="string">'6'</span>)</span><br><span class="line">d = range(<span class="number">1</span>,<span class="number">7</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印出来的元素之间有空格</span></span><br><span class="line">print(*a)</span><br><span class="line">print(*b)</span><br><span class="line">print(*c)</span><br><span class="line">print(*d)</span><br><span class="line"></span><br><span class="line">print(<span class="string">'ju'</span>,<span class="string">'p'</span>,<span class="string">'t'</span>,<span class="string">'er'</span>,sep=<span class="string">'-'</span>)</span><br><span class="line">print(*[<span class="string">'ju'</span>,<span class="string">'p'</span>,<span class="string">'t'</span>,<span class="string">'er'</span>],sep=<span class="string">'-'</span>)</span><br><span class="line">print(*(<span class="string">'ju'</span>,<span class="string">'p'</span>,<span class="string">'t'</span>,<span class="string">'er'</span>),sep=<span class="string">'-'</span>)</span><br><span class="line">print(*(range(<span class="number">1</span>,<span class="number">7</span>)),sep=<span class="string">'-'</span>)</span><br></pre></td></tr></table></figure><br><br>    1 2 3 4 5 6<br>    1 2 3 4 5 6<br>    1 2 3 4 5 6<br>    1 2 3 4 5 6<br>    ju-p-t-er<br>    ju-p-t-er<br>    ju-p-t-er<br>    1-2-3-4-5-6<br><br><br># Lists<br><br><a href="https://www.hackerrank.com/challenges/python-lists/problem" target="_blank" rel="noopener">https://www.hackerrank.com/challenges/python-lists/problem</a><br><br>根据输入执行相应的命令<br><br><span class="girk">方法一</span>  if…elif<br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 正常思路</span></span><br><span class="line"></span><br><span class="line">L = []</span><br><span class="line">N = int(input())</span><br><span class="line">   </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(N):</span><br><span class="line">    c = input().split(<span class="string">' '</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,len(c)):</span><br><span class="line">        c[i] = int(c[i])</span><br><span class="line">    command = c[<span class="number">0</span>]</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">if</span> command == <span class="string">'insert'</span>:</span><br><span class="line">        L.insert(c[<span class="number">1</span>],c[<span class="number">2</span>])</span><br><span class="line">    <span class="keyword">elif</span> command == <span class="string">'print'</span>:</span><br><span class="line">        print(L)</span><br><span class="line">    <span class="keyword">elif</span> command == <span class="string">'remove'</span>:</span><br><span class="line">        L.remove(c[<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">elif</span> command == <span class="string">'append'</span>:</span><br><span class="line">        L.append(c[<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">elif</span> command == <span class="string">'extend'</span>:</span><br><span class="line">        L.extend(c[<span class="number">1</span>:])</span><br><span class="line">    <span class="keyword">elif</span> command == <span class="string">'sort'</span>:</span><br><span class="line">        L.sort()</span><br><span class="line">    <span class="keyword">elif</span> command == <span class="string">'pop'</span>:</span><br><span class="line">        L.pop()</span><br><span class="line">    <span class="keyword">elif</span> command == <span class="string">'reverse'</span>:</span><br><span class="line">        L.reverse()</span><br></pre></td></tr></table></figure><br><br>    2<br>    append 9<br>    print<br>    [9]<br><br><br><span class="girk">方法二</span>  eval()<br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#简化</span></span><br><span class="line"></span><br><span class="line">n = int(input())</span><br><span class="line">l = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(n):</span><br><span class="line">    c = input().split()</span><br><span class="line">    command = c[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">if</span> len(c) &gt; <span class="number">0</span>:</span><br><span class="line">        args = c[<span class="number">1</span>:]</span><br><span class="line">    print(args)</span><br><span class="line">    <span class="keyword">if</span> command !=<span class="string">"print"</span>:</span><br><span class="line">        command += <span class="string">"("</span>+ <span class="string">","</span>.join(args) +<span class="string">")"</span></span><br><span class="line">        eval(<span class="string">"l."</span>+command)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(l)</span><br></pre></td></tr></table></figure><br><br>    2<br>    append 9<br>    [‘9’]<br>    print<br>    []<br>    [9]<br><br><br><h2>join() 函数</h2><p><span class="mark">知识点</span> ‘sep’.join(seq)</p><p>将字符串、列表、元组、字典中的元素以指定的字符(分隔符)连接生成一个新的字符串,</p><p>sep – 分隔符。可以为空</p><p>seq – 要连接的元素序列:字符串、列表、元组、字典。</p><p>以sep作为分隔符，将seq所有的元素合并成一个新的字符串。返回一个以分隔符sep连接各个元素后生成的字符串</p><p>str.join(sequence) 函数中的 sequence 中的元素必须的字符串，否则会报错</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#seq内元素只能是可迭代字符串类型，数字不可以</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#对字符串进行操作</span></span><br><span class="line">seq1 = <span class="string">'HelloWorldIamaprogrammer'</span></span><br><span class="line">print((<span class="string">' '</span>).join(seq1))</span><br><span class="line"></span><br><span class="line"><span class="comment">#对列表进行操作</span></span><br><span class="line">seq2 = [<span class="string">'Hello'</span>,<span class="string">'World'</span>,<span class="string">'I'</span>,<span class="string">'am'</span>,<span class="string">'a'</span>,<span class="string">'programmer'</span>]</span><br><span class="line">print((<span class="string">' '</span>).join(seq2))</span><br><span class="line"></span><br><span class="line"><span class="comment">#对元祖进行操作</span></span><br><span class="line">seq3 = (<span class="string">'Hello'</span>,<span class="string">'World'</span>,<span class="string">'I'</span>,<span class="string">'am'</span>,<span class="string">'a'</span>,<span class="string">'programmer'</span>)</span><br><span class="line">print((<span class="string">'：'</span>).join(seq3))</span><br><span class="line"></span><br><span class="line"><span class="comment">#对字典进行操作</span></span><br><span class="line">seq4 = &#123;<span class="string">'hello'</span>:<span class="number">1</span>,<span class="string">'world'</span>:<span class="number">2</span>,<span class="string">'I'</span>:<span class="number">3</span>,<span class="string">'am'</span>:<span class="number">4</span>,<span class="string">'a'</span>:<span class="number">5</span>,<span class="string">'programmer'</span>:<span class="number">6</span>&#125;</span><br><span class="line">print((<span class="string">'-'</span>).join(seq4))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#seq内元素数量的不同，结果不同</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#元素有2或多个个</span></span><br><span class="line"></span><br><span class="line">num3 = [<span class="string">'9'</span>,<span class="string">'9'</span>,<span class="string">'9'</span>]</span><br><span class="line">print((<span class="string">','</span>).join(num3))</span><br><span class="line"></span><br><span class="line"><span class="comment">#元素只有1个,结果没有分隔符</span></span><br><span class="line"></span><br><span class="line">num1 =[<span class="string">'9'</span>]</span><br><span class="line">print((<span class="string">','</span>).join(num1))</span><br><span class="line"></span><br><span class="line"><span class="comment">#应用：合并参数</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">'('</span>+<span class="string">','</span>.join([<span class="string">'0'</span>, <span class="string">'5'</span>])+<span class="string">')'</span>)</span><br><span class="line">print(<span class="string">'('</span>+<span class="string">','</span>.join([<span class="string">'0'</span>])+<span class="string">')'</span>)</span><br></pre></td></tr></table></figure><pre><code>H e l l o W o r l d I a m a p r o g r a m m e rHello World I am a programmerHello：World：I：am：a：programmerhello-world-I-am-a-programmer9,9,99(0,5)(0)</code></pre><h2>eval()函数</h2><br><span class="mark">知识点</span>  eval()函数<br><br>将字符串str当成有效的表达式来求值并返回计算结果。所以，结合math当成一个计算器很好用。<br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#计算字符串中有效的表达式</span></span><br><span class="line">print(eval(<span class="string">'pow(2,2)'</span>))</span><br><span class="line">print(eval(<span class="string">'2+2'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#将字符串转成相应的对象（如list、tuple、dict和string之间的转换）</span></span><br><span class="line">a=<span class="string">"[[1,2], [3,4], [5,6], [7,8], [9,0]]"</span></span><br><span class="line">b=<span class="string">"(1,2,3,4)"</span></span><br><span class="line">c=<span class="string">"&#123;1:'xx',2:'yy'&#125;"</span></span><br><span class="line"></span><br><span class="line">print(eval(a))</span><br><span class="line">print(eval(b))</span><br><span class="line">print(eval(c))</span><br></pre></td></tr></table></figure><br><br>    4<br>    4<br>    [[1, 2], [3, 4], [5, 6], [7, 8], [9, 0]]<br>    (1, 2, 3, 4)<br>    {1: ‘xx’, 2: ‘yy’}<br><br><br># List Comprehensions<br><br><a href="https://www.hackerrank.com/challenges/list-comprehensions/problem" target="_blank" rel="noopener">https://www.hackerrank.com/challenges/list-comprehensions/problem</a><br><br>根据要求属于三维坐标<br><br><span class="girk">方法一</span> for 循环<br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 正常思路</span></span><br><span class="line">x = int(input())</span><br><span class="line">y = int(input())</span><br><span class="line">z = int(input())</span><br><span class="line">n = int(input())</span><br><span class="line">l = []</span><br><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> range(x+<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> b <span class="keyword">in</span> range(y+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(z+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> a+b+c != n:</span><br><span class="line">                l.append([a,b,c])</span><br><span class="line">print(l)</span><br></pre></td></tr></table></figure><br><br>    1<br>    1<br>    1<br>    2<br>    [[0, 0, 0], [0, 0, 1], [0, 1, 0], [1, 0, 0], [1, 1, 1]]<br><br><br><span class="girk">方法二</span> 简化方法<br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 简化4次input，列表生成式</span></span><br><span class="line">x,y,z,n = [int(input()) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>)]</span><br><span class="line">l = [[a,b,c] <span class="keyword">for</span> a <span class="keyword">in</span> range(x+<span class="number">1</span>) <span class="keyword">for</span> b <span class="keyword">in</span> range(y+<span class="number">1</span>) <span class="keyword">for</span> c <span class="keyword">in</span> range(z+<span class="number">1</span>) <span class="keyword">if</span> (a+b+c) != n]</span><br><span class="line"></span><br><span class="line">print(l)</span><br></pre></td></tr></table></figure><br><br>    1<br>    1<br>    1<br>    2<br>    [[0, 0, 0], [0, 0, 1], [0, 1, 0], [1, 0, 0], [1, 1, 1]]<br><br><br># Find the Runner-Up Score!<br><br><a href="https://www.hackerrank.com/challenges/find-second-maximum-number-in-a-list/editorial" target="_blank" rel="noopener">https://www.hackerrank.com/challenges/find-second-maximum-number-in-a-list/editorial</a><br><br>找到列表中第二大的数字<br><br><span class="girk">方法一</span> 用 set() , sorted()<br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">n = int(input())</span><br><span class="line">l = set(map(int,input().split()))</span><br><span class="line">print(sorted(l)[<span class="number">-2</span>])</span><br></pre></td></tr></table></figure><br><br>    5<br>    2 3 6 6 5<br>    5<br><br><br><span class="girk">方法二</span>  不用 set() , sorted()<br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#最基本的算法</span></span><br><span class="line">n = int(input())</span><br><span class="line">l = list(map(int,input().split()))</span><br><span class="line">maximum = max(l)</span><br><span class="line">m = <span class="number">-999999</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> l:</span><br><span class="line">    <span class="keyword">if</span> i &gt; m <span class="keyword">and</span> i != maximum:</span><br><span class="line">        m = i</span><br><span class="line">   </span><br><span class="line">print(m)</span><br></pre></td></tr></table></figure><br><br>    5<br>    2 3 6 6 5<br>    5<br><br><br><span class="girk">方法三</span>  collections.Counter()<br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line">n = int(input())</span><br><span class="line">l = Counter(map(int,input().split())).keys()</span><br><span class="line">sorted(l)[<span class="number">-2</span>]</span><br></pre></td></tr></table></figure><br><br>    5<br>    2 3 6 6 5<br><br><br><br><br><br>    5<br><br><br><br><span class="girk">方法四</span>  函数<br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">l = [<span class="number">2</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">5</span>]</span><br><span class="line"><span class="comment"># 列表最大值</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">maximum</span><span class="params">(l)</span>:</span> </span><br><span class="line">    d = <span class="number">-9999999</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> l:</span><br><span class="line">        <span class="keyword">if</span> i &gt; d:</span><br><span class="line">            d = i</span><br><span class="line">    <span class="keyword">return</span>(d)</span><br><span class="line"></span><br><span class="line"><span class="comment">#maximum(l)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#列表第二大值</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">second</span><span class="params">(l)</span>:</span> </span><br><span class="line">    m = maximum(l)</span><br><span class="line">    e = <span class="number">-9999999</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> l:</span><br><span class="line">        <span class="keyword">if</span> (i &gt; e) <span class="keyword">and</span> (i != m):</span><br><span class="line">            e = i</span><br><span class="line">    <span class="keyword">return</span>(e)</span><br><span class="line"></span><br><span class="line">second(l)</span><br></pre></td></tr></table></figure><br><br>    5<br><br><br><br><span class="girk">拓展</span>  求列表最大值<br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列表最大值</span></span><br><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_max</span><span class="params">(x,y)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> x &gt; y:</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> y</span><br><span class="line">l = [<span class="number">2</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">5</span>]</span><br><span class="line">reduce(get_max,l)</span><br><span class="line"></span><br><span class="line"><span class="comment">#简化</span></span><br><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line">reduce(<span class="keyword">lambda</span> x,y:x <span class="keyword">if</span> x&gt;y <span class="keyword">else</span> y,l)</span><br></pre></td></tr></table></figure><br><br>    6<br><br><br><br># Nested Lists<br><br><a href="https://www.hackerrank.com/challenges/nested-list/problem" target="_blank" rel="noopener">https://www.hackerrank.com/challenges/nested-list/problem</a><br><br>找到成绩排名第二的学生<br><br><span class="girk">第一种</span>   用字典<br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建数据</span></span><br><span class="line">students = []  </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(int(input())):</span><br><span class="line">    name = input()</span><br><span class="line">    score = float(input())</span><br><span class="line">    students.append([name,score])</span><br><span class="line">print(students)</span><br><span class="line"></span><br><span class="line"><span class="comment">#简化</span></span><br><span class="line">students=[[input(),float(input())] <span class="keyword">for</span> i <span class="keyword">in</span> range(int(input()))]</span><br></pre></td></tr></table></figure><br><br>    5<br>    Harry<br>    37.21<br>    Berry<br>    37.21<br>    Tina<br>    37.2<br>    Akriti<br>    41<br>    Harsh<br>    39<br>    [[‘Harry’, 37.21], [‘Berry’, 37.21], [‘Tina’, 37.2], [‘Akriti’, 41.0], [‘Harsh’, 39.0]]<br><br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">students = [[<span class="string">'Harry'</span>, <span class="number">37.21</span>], [<span class="string">'Berry'</span>, <span class="number">37.21</span>], [<span class="string">'Tina'</span>, <span class="number">37.2</span>], [<span class="string">'Akriti'</span>, <span class="number">41.0</span>], [<span class="string">'Harsh'</span>, <span class="number">39.0</span>]]</span><br><span class="line">c = dict(students)</span><br><span class="line">print(c)</span><br><span class="line">second = sorted(set(c.values()))[<span class="number">1</span>]</span><br><span class="line">s = [i[<span class="number">0</span>] <span class="keyword">for</span> i <span class="keyword">in</span> students <span class="keyword">if</span> i[<span class="number">1</span>] == second]</span><br><span class="line"></span><br><span class="line"><span class="comment">#第一种打印方式</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> sorted(s):</span><br><span class="line">    print(i)</span><br><span class="line"></span><br><span class="line"><span class="comment">#第二种打印方式    </span></span><br><span class="line">print(<span class="string">'\n'</span>.join(sorted(s)))</span><br></pre></td></tr></table></figure><br><br>    {‘Harry’: 37.21, ‘Berry’: 37.21, ‘Tina’: 37.2, ‘Akriti’: 41.0, ‘Harsh’: 39.0}<br>    Berry<br>    Harry<br>    Berry<br>    Harry<br><br><br><span class="girk">第二种</span>   不用字典 简化<br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">students = [[<span class="string">'Harry'</span>, <span class="number">37.21</span>], [<span class="string">'Berry'</span>, <span class="number">37.21</span>], [<span class="string">'Tina'</span>, <span class="number">37.2</span>], [<span class="string">'Akriti'</span>, <span class="number">41.0</span>], [<span class="string">'Harsh'</span>, <span class="number">39.0</span>]]</span><br><span class="line"></span><br><span class="line">second = sorted(set([i[<span class="number">1</span>] <span class="keyword">for</span> i <span class="keyword">in</span> students]))[<span class="number">1</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> sorted([i[<span class="number">0</span>] <span class="keyword">for</span> i <span class="keyword">in</span> students <span class="keyword">if</span> i[<span class="number">1</span>] == second]):</span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure><br><br>    Berry<br>    Harry<br><br><br><span class="girk">第三种</span><br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#第三种方法</span></span><br><span class="line">students = [[<span class="string">'Harry'</span>, <span class="number">37.21</span>], [<span class="string">'Berry'</span>, <span class="number">37.21</span>], [<span class="string">'Tina'</span>, <span class="number">37.2</span>], [<span class="string">'Akriti'</span>, <span class="number">41.0</span>], [<span class="string">'Harsh'</span>, <span class="number">39.0</span>]]</span><br><span class="line"></span><br><span class="line">second_highest = sorted(set([y <span class="keyword">for</span> x,y <span class="keyword">in</span> students]))[<span class="number">1</span>]</span><br><span class="line">print(<span class="string">'\n'</span>.join([a <span class="keyword">for</span> a,b <span class="keyword">in</span> sorted(students) <span class="keyword">if</span> b == second_highest]))</span><br></pre></td></tr></table></figure><br><br>    Berry<br>    Harry<br><br><br><h2>迭代嵌套列表</h2><br><span class="burk">知识点</span>  迭代嵌套列表<br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">students = [[<span class="string">'Harry'</span>, <span class="number">37.21</span>], [<span class="string">'Berry'</span>, <span class="number">37.21</span>], [<span class="string">'Tina'</span>, <span class="number">37.2</span>], [<span class="string">'Akriti'</span>, <span class="number">41.0</span>], [<span class="string">'Harsh'</span>, <span class="number">39.0</span>]]</span><br><span class="line">a = []</span><br><span class="line">b = []</span><br><span class="line"><span class="keyword">for</span> i,x <span class="keyword">in</span> students:</span><br><span class="line">    a.append(i)</span><br><span class="line">    b.append(x)</span><br><span class="line">print(a)</span><br><span class="line">print(b)</span><br><span class="line"></span><br><span class="line">c = [[<span class="string">'Harry'</span>, <span class="number">37.21</span>,<span class="number">3</span>], [<span class="string">'Berry'</span>, <span class="number">37.21</span>,<span class="number">2</span>], [<span class="string">'Tina'</span>, <span class="number">37.2</span>,<span class="number">1</span>], [<span class="string">'Akriti'</span>, <span class="number">41.0</span>,<span class="number">4</span>], [<span class="string">'Harsh'</span>, <span class="number">39.0</span>,<span class="number">4</span>]]</span><br><span class="line">print([z <span class="keyword">for</span> x,y,z <span class="keyword">in</span> c])</span><br></pre></td></tr></table></figure><br><br>    [‘Harry’, ‘Berry’, ‘Tina’, ‘Akriti’, ‘Harsh’]<br>    [37.21, 37.21, 37.2, 41.0, 39.0]<br>    [3, 2, 1, 4, 4]<br><br><br><h2>通过字典的value获取其key</h2><br><span class="burk">知识点</span>  通过字典的value获取其key,这个方法只适合没有相同value的字典<br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">d = &#123;<span class="string">'a'</span>:<span class="string">'001'</span>, <span class="string">'b'</span>:<span class="string">'002'</span>&#125;</span><br><span class="line">list(d.keys())[list(d.values()).index(<span class="string">"001"</span>)]</span><br><span class="line"><span class="comment">#index() 函数用于从列表中找出某个值第一个匹配项的索引位置。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#？？？如果要获取所有的索引位置</span></span><br></pre></td></tr></table></figure><br><br>    ‘a’<br><br><br><br># Finding the percentage<br><br><a href="https://www.hackerrank.com/challenges/finding-the-percentage/problem" target="_blank" rel="noopener">https://www.hackerrank.com/challenges/finding-the-percentage/problem</a><br><br>把学生和3门成绩的平均值一起存在字典中<br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建数据</span></span><br><span class="line">n = int(input())</span><br><span class="line">d = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(n):</span><br><span class="line">    text = input().split()</span><br><span class="line">    d[text[<span class="number">0</span>]] = list(map(float,text[<span class="number">1</span>:])) <span class="comment">#d[text[0]] = [float(i) for i in text[1:]]</span></span><br><span class="line">print(d)</span><br></pre></td></tr></table></figure><br><br>    3<br>    Krishna 67 68 69<br>    Arjun 70 98 63<br>    Malika 52 56 60<br>    {‘Krishna’: [67, 68, 69], ‘Arjun’: [70, 98, 63], ‘Malika’: [52, 56, 60]}<br><br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">scores = &#123;<span class="string">'Krishna'</span>: [<span class="number">67</span>, <span class="number">68</span>, <span class="number">69</span>], <span class="string">'Arjun'</span>: [<span class="number">70</span>, <span class="number">98</span>, <span class="number">63</span>], <span class="string">'Malika'</span>: [<span class="number">52</span>, <span class="number">56</span>, <span class="number">60</span>]&#125;</span><br><span class="line">name = input()</span><br><span class="line">sum = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> scores[name]:</span><br><span class="line">    sum += i</span><br><span class="line">    average_score = sum/len(scores[name])</span><br><span class="line">print(<span class="string">'&#123;:.2f&#125;'</span>.format(average_score))</span><br></pre></td></tr></table></figure><br><br>    Krishna<br>    68.00<br><br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 把学生和3门成绩的平均值一起存在字典中</span></span><br><span class="line"></span><br><span class="line">n = int(input())</span><br><span class="line"></span><br><span class="line">d = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(n):</span><br><span class="line">    text = input().split()</span><br><span class="line">    d[text[<span class="number">0</span>]] =<span class="string">'&#123;:.2f&#125;'</span>.format(sum((map(float,text[<span class="number">1</span>:]))/<span class="number">3</span>)</span><br><span class="line">print(d[input()])</span><br></pre></td></tr></table></figure><br><br>    3<br>    Krishna 67 68 69<br>    Arjun 70 98 63<br>    Malika 52 56 60<br>    Krishna<br>    68.00<br><br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">'HackerRan.'</span> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">swap_case</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">       </span><br><span class="line">        <span class="keyword">if</span> i.islower():</span><br><span class="line">            i.upper()</span><br><span class="line">        <span class="keyword">else</span> :</span><br><span class="line">            i.lower()</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line">swap_case(s)</span><br><span class="line"></span><br><span class="line"><span class="comment">#没有任何改变</span></span><br><span class="line"><span class="comment">#因为字符串是不可变类型，而且方法有返回值的，一定要储存，要不然就白弄了</span></span><br></pre></td></tr></table></figure><br><br>    ‘HackerRan.’<br><br><br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">'HackerRan.'</span> </span><br><span class="line">S = []</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">swap_case</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">       </span><br><span class="line">        <span class="keyword">if</span> i.islower():</span><br><span class="line">            S.append(i.upper())</span><br><span class="line">        <span class="keyword">else</span> :</span><br><span class="line">            S.append(i.lower())</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span>.join(S)</span><br><span class="line"></span><br><span class="line">swap_case(s)</span><br></pre></td></tr></table></figure><br><br>    ‘hACKERrAN.’<br><br><br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="keyword">for</span> i <span class="keyword">in</span> s <span class="keyword">if</span>]</span><br></pre></td></tr></table></figure><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s.swapcase()</span><br></pre></td></tr></table></figure><br><br>    ‘hACKERrAN.’<br><br><br><br># String Formatting<br><a href="https://www.hackerrank.com/challenges/python-string-formatting/problem" target="_blank" rel="noopener">https://www.hackerrank.com/challenges/python-string-formatting/problem</a><br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#第一种方法</span></span><br><span class="line"></span><br><span class="line">n = <span class="number">17</span></span><br><span class="line">width = len(bin(n)[<span class="number">2</span>:])</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,n+<span class="number">1</span>):</span><br><span class="line">    print(str(i).rjust(width),str(oct(i))[<span class="number">2</span>:].rjust(width),str(hex(i))[<span class="number">2</span>:].upper().rjust(width),str(bin(i))[<span class="number">2</span>:].rjust(width))</span><br></pre></td></tr></table></figure><br><br>        1     1     1     1<br>        2     2     2    10<br>        3     3     3    11<br>        4     4     4   100<br>        5     5     5   101<br>        6     6     6   110<br>        7     7     7   111<br>        8    10     8  1000<br>        9    11     9  1001<br>       10    12     A  1010<br>       11    13     B  1011<br>       12    14     C  1100<br>       13    15     D  1101<br>       14    16     E  1110<br>       15    17     F  1111<br>       16    20    10 10000<br>       17    21    11 10001<br><br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#第二种方法</span></span><br><span class="line">n = <span class="number">17</span></span><br><span class="line">width = len(bin(n))<span class="number">-2</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,n+<span class="number">1</span>):</span><br><span class="line">    print(<span class="string">'&#123;0:&#123;width&#125;d&#125; &#123;0:&#123;width&#125;o&#125; &#123;0:&#123;width&#125;x&#125; &#123;0:&#123;width&#125;b&#125;'</span>.format(i,width = width))</span><br></pre></td></tr></table></figure><br><br>        1     1     1     1<br>        2     2     2    10<br>        3     3     3    11<br>        4     4     4   100<br>        5     5     5   101<br>        6     6     6   110<br>        7     7     7   111<br>        8    10     8  1000<br>        9    11     9  1001<br>       10    12     a  1010<br>       11    13     b  1011<br>       12    14     c  1100<br>       13    15     d  1101<br>       14    16     e  1110<br>       15    17     f  1111<br>       16    20    10 10000<br>       17    21    11 10001<br><br><br># Alphabet Rangoli<br><a href="https://www.hackerrank.com/challenges/alphabet-rangoli/problem" target="_blank" rel="noopener">https://www.hackerrank.com/challenges/alphabet-rangoli/problem</a><br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="number">5</span></span><br><span class="line">alpha = [chr(i) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">97</span>,<span class="number">123</span>)]</span><br><span class="line">print(alpha)</span><br><span class="line"></span><br><span class="line"><span class="comment">#top corn</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(n<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">-1</span>):</span><br><span class="line">    print(+alpha[i].center(<span class="number">4</span>*n<span class="number">-3</span>,<span class="string">'-'</span>)+)  </span><br><span class="line"></span><br><span class="line"><span class="comment">#middle belt</span></span><br><span class="line">print(alpha[<span class="number">0</span>].center(<span class="number">4</span>*n<span class="number">-3</span>,<span class="string">'-'</span>))  </span><br><span class="line"><span class="comment">#below corn</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(n):</span><br><span class="line">    print(alpha[i].center(<span class="number">4</span>*n<span class="number">-3</span>,<span class="string">'-'</span>))</span><br></pre></td></tr></table></figure><br><br>    [‘a’, ‘b’, ‘c’, ‘d’, ‘e’, ‘f’, ‘g’, ‘h’, ‘i’, ‘j’, ‘k’, ‘l’, ‘m’, ‘n’, ‘o’, ‘p’, ‘q’, ‘r’, ‘s’, ‘t’, ‘u’, ‘v’, ‘w’, ‘x’, ‘y’, ‘z’]<br>    ——–e——–<br>    ——–d——–<br>    ——–c——–<br>    ——–b——–<br>    ——–a——–<br>    ——–a——–<br>    ——–a——–<br>    ——–b——–<br>    ——–c——–<br>    ——–d——–<br>    ——–e——–<br><br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="number">5</span></span><br><span class="line">a = <span class="string">'a-'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#top corn</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">2</span>*n<span class="number">-2</span>,<span class="number">2</span>):</span><br><span class="line">    print((a*(i+<span class="number">1</span>)).center(<span class="number">4</span>*n<span class="number">-3</span>,<span class="string">'-'</span>))  </span><br><span class="line"></span><br><span class="line"><span class="comment">#middle belt</span></span><br><span class="line"></span><br><span class="line">print(((a*(<span class="number">2</span>*n<span class="number">-1</span>)).center(<span class="number">4</span>*n<span class="number">-3</span>,<span class="string">'-'</span>).rstrip(<span class="string">'-'</span>)))  </span><br><span class="line"></span><br><span class="line"><span class="comment">#below corn</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>*n<span class="number">-4</span>,<span class="number">-2</span>,<span class="number">-2</span>):</span><br><span class="line">   print((a*(i+<span class="number">1</span>)).center(<span class="number">4</span>*n<span class="number">-3</span>,<span class="string">'-'</span>))</span><br></pre></td></tr></table></figure><br><br>    ——–a——–<br>    ——a-a-a——<br>    —-a-a-a-a-a—-<br>    –a-a-a-a-a-a-a–<br>    a-a-a-a-a-a-a-a-a<br>    –a-a-a-a-a-a-a–<br>    —-a-a-a-a-a—-<br>    ——a-a-a——<br>    ——–a——–<br><br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="number">5</span></span><br><span class="line">icon = <span class="string">'e-'</span></span><br><span class="line"></span><br><span class="line">alpha = [chr(i) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">97</span>,<span class="number">123</span>)]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">    s  = alpha[i:n]</span><br><span class="line">    b = alpha[i+<span class="number">1</span>:n]</span><br><span class="line">    line = (<span class="string">'-'</span>).join(s[::<span class="number">-1</span>]+b)</span><br><span class="line">    print(line.center(<span class="number">4</span>*n<span class="number">-3</span>,<span class="string">'-'</span>))</span><br></pre></td></tr></table></figure><br><br>    e-d-c-b-a-b-c-d-e<br>    –e-d-c-b-c-d-e–<br>    —-e-d-c-d-e—-<br>    ——e-d-e——<br>    ——–e——–<br><br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方法一</span></span><br><span class="line">n = <span class="number">5</span></span><br><span class="line"></span><br><span class="line">alpha = [chr(i) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">97</span>,<span class="number">123</span>)]</span><br><span class="line">line = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">    rstr  = alpha[i:n]</span><br><span class="line">    lstr = alpha[i+<span class="number">1</span>:n]</span><br><span class="line">    line.append(<span class="string">'-'</span>.join(lstr[::<span class="number">-1</span>]+rstr))</span><br><span class="line">print(line)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> l <span class="keyword">in</span> line[:<span class="number">0</span>:<span class="number">-1</span>]:</span><br><span class="line">    print(l.center(<span class="number">4</span>*n<span class="number">-3</span>,<span class="string">'-'</span>))</span><br><span class="line">    </span><br><span class="line"><span class="keyword">for</span> l <span class="keyword">in</span> line:</span><br><span class="line">    print(l.center(<span class="number">4</span>*n<span class="number">-3</span>,<span class="string">'-'</span>))</span><br></pre></td></tr></table></figure><br><br>    [‘e-d-c-b-a-b-c-d-e’, ‘e-d-c-b-c-d-e’, ‘e-d-c-d-e’, ‘e-d-e’, ‘e’]<br>    ——–e——–<br>    ——e-d-e——<br>    —-e-d-c-d-e—-<br>    –e-d-c-b-c-d-e–<br>    e-d-c-b-a-b-c-d-e<br>    –e-d-c-b-c-d-e–<br>    —-e-d-c-d-e—-<br>    ——e-d-e——<br>    ——–e——–<br><br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方法二</span></span><br><span class="line">n = <span class="number">5</span></span><br><span class="line"></span><br><span class="line">alpha = [chr(i) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">97</span>,<span class="number">123</span>)]</span><br><span class="line">line = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">    s = <span class="string">'-'</span>.join(alpha[i:n])</span><br><span class="line">    print(s)</span><br><span class="line">    line.append((s[::<span class="number">-1</span>]+s[<span class="number">1</span>:]).center(<span class="number">4</span>*n<span class="number">-3</span>,<span class="string">'-'</span>))</span><br><span class="line">print(line)</span><br><span class="line">print(<span class="string">'\n'</span>.join(line[:<span class="number">1</span>:<span class="number">-1</span>]+line))</span><br><span class="line">print(<span class="string">'\n'</span>.join(line[<span class="number">-1</span>:<span class="number">1</span>:<span class="number">-1</span>]+line))</span><br><span class="line">print(<span class="string">'\n'</span>.join(line[:<span class="number">-4</span>:<span class="number">-1</span>]+line))</span><br><span class="line">print(<span class="string">'\n'</span>.join(line[<span class="number">-1</span>:<span class="number">-4</span>:<span class="number">-1</span>]+line))</span><br></pre></td></tr></table></figure><br><br>    a-b-c-d-e<br>    b-c-d-e<br>    c-d-e<br>    d-e<br>    e<br>    [‘e-d-c-b-a-b-c-d-e’, ‘–e-d-c-b-c-d-e–’, ‘—-e-d-c-d-e—-‘, ‘——e-d-e——‘, ‘——–e——–’]<br>    ——–e——–<br>    ——e-d-e——<br>    —-e-d-c-d-e—-<br>    e-d-c-b-a-b-c-d-e<br>    –e-d-c-b-c-d-e–<br>    —-e-d-c-d-e—-<br>    ——e-d-e——<br>    ——–e——–<br>    ——–e——–<br>    ——e-d-e——<br>    —-e-d-c-d-e—-<br>    e-d-c-b-a-b-c-d-e<br>    –e-d-c-b-c-d-e–<br>    —-e-d-c-d-e—-<br>    ——e-d-e——<br>    ——–e——–<br>    ——–e——–<br>    ——e-d-e——<br>    —-e-d-c-d-e—-<br>    e-d-c-b-a-b-c-d-e<br>    –e-d-c-b-c-d-e–<br>    —-e-d-c-d-e—-<br>    ——e-d-e——<br>    ——–e——–<br>    ——–e——–<br>    ——e-d-e——<br>    —-e-d-c-d-e—-<br>    e-d-c-b-a-b-c-d-e<br>    –e-d-c-b-c-d-e–<br>    —-e-d-c-d-e—-<br>    ——e-d-e——<br>    ——–e——–<br><br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">'chris alan'</span></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> name.split(<span class="string">' '</span>):</span><br><span class="line">    print(n.capitalize(),end=<span class="string">' '</span>)</span><br></pre></td></tr></table></figure><br><br>    Chris Alan<br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="string">' '</span>).join([n.capitalize() <span class="keyword">for</span> n <span class="keyword">in</span> name.split(<span class="string">' '</span>)])</span><br></pre></td></tr></table></figure><br><br>    ‘Chris Alan’<br><br><br><br><h2>title() 与 capitalize() 的区别</h2><p>capitalize()与title()都可以实现字符串首字母大写.</p><p>主要区别在于：<br>capitalize(): 字符串第一个字母大写<br>title(): 字符串内的所有单词的首字母大写</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 字母开头的情况</span></span><br><span class="line"></span><br><span class="line">str=<span class="string">'huang bi quan'</span></span><br><span class="line">print(str.capitalize())       <span class="comment">#第一个字母大写  </span></span><br><span class="line">print(str.title())  <span class="comment">#所有单词的首字母大写</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#非字母开头的情况</span></span><br><span class="line"></span><br><span class="line">str=<span class="string">'深圳luohu'</span></span><br><span class="line">print(str.capitalize())              <span class="comment">#输出内容不变</span></span><br><span class="line">print(str.title())           <span class="comment">#第一个字母大写</span></span><br></pre></td></tr></table></figure><pre><code>Huang bi quanHuang Bi Quan深圳luohu深圳Luohu</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'title()方法'</span>)</span><br><span class="line">a = <span class="string">'abcd'</span></span><br><span class="line">print(a.title())</span><br><span class="line"></span><br><span class="line">b = <span class="string">'12abcd'</span></span><br><span class="line">print(b.title())</span><br><span class="line"></span><br><span class="line">c = <span class="string">'ab cd'</span></span><br><span class="line">print(c.title())</span><br><span class="line"></span><br><span class="line">print(<span class="string">'capitalize()方法'</span>)</span><br><span class="line">d = <span class="string">'abcd'</span></span><br><span class="line">print(d.capitalize())</span><br><span class="line"></span><br><span class="line">e = <span class="string">'12abcd'</span></span><br><span class="line">print(e.capitalize())</span><br><span class="line"></span><br><span class="line">f = <span class="string">'ab cd'</span></span><br><span class="line">print(f.capitalize())</span><br></pre></td></tr></table></figure><pre><code>title()Abcd12AbcdAb Cdcapitalize()Abcd12abcdAb cd</code></pre><h1 id="The-Minion-Game"><a href="#The-Minion-Game" class="headerlink" title="The Minion Game"></a>The Minion Game</h1><p><a href="https://www.hackerrank.com/challenges/the-minion-game/problem" target="_blank" rel="noopener">https://www.hackerrank.com/challenges/the-minion-game/problem</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方法一  但是当string很多的时候，就不行了</span></span><br><span class="line">string = <span class="string">'BANANA'</span></span><br><span class="line">S_score = <span class="number">0</span></span><br><span class="line">K_score = <span class="number">0</span></span><br><span class="line">vowel = <span class="string">'AEIOU'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> cut_len <span class="keyword">in</span> range(len(string)):</span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> range(len(string)):</span><br><span class="line">        <span class="keyword">if</span> len(string[s:s+cut_len+<span class="number">1</span>]) == cut_len+<span class="number">1</span>:</span><br><span class="line">            <span class="keyword">if</span> string[s:s+cut_len+<span class="number">1</span>][<span class="number">0</span>] <span class="keyword">in</span> vowel:</span><br><span class="line">                K_score += <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                S_score += <span class="number">1</span></span><br><span class="line">      </span><br><span class="line"><span class="keyword">if</span> S_score &gt; K_score:</span><br><span class="line">    print(<span class="string">'Stuart'</span>,S_score)</span><br><span class="line"><span class="keyword">elif</span> S_score &lt; K_score:</span><br><span class="line">    print(<span class="string">'Kevin'</span>,K_score)</span><br><span class="line"><span class="keyword">elif</span> S_score == K_score:</span><br><span class="line">    print(<span class="string">'Draw'</span>)</span><br></pre></td></tr></table></figure><pre><code>Stuart 12</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方法二</span></span><br><span class="line">string = <span class="string">'BANANA'</span></span><br><span class="line">S_score = <span class="number">0</span></span><br><span class="line">K_score = <span class="number">0</span></span><br><span class="line">vowel = <span class="string">'AEIOU'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(string)):</span><br><span class="line">    <span class="keyword">if</span> string[i] <span class="keyword">in</span> vowel:</span><br><span class="line">        K_score += len(string) - i</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        S_score += len(string) - i</span><br><span class="line">        </span><br><span class="line"><span class="keyword">if</span> S_score &gt; K_score:</span><br><span class="line">    print(<span class="string">'Stuart'</span>,S_score)</span><br><span class="line"><span class="keyword">elif</span> S_score &lt; K_score:</span><br><span class="line">    print(<span class="string">'Kevin'</span>,K_score)</span><br><span class="line"><span class="keyword">elif</span> S_score == K_score:</span><br><span class="line">    print(<span class="string">'Draw'</span>)</span><br></pre></td></tr></table></figure><pre><code>Stuart 12</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">string = <span class="string">'BANANA'</span></span><br><span class="line">combstr = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(string)):</span><br><span class="line">    combstr.append(string[i:])</span><br><span class="line">    combstr.append(string[:i+<span class="number">1</span>])</span><br><span class="line">    combstr.append(string[i])</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">print(set(combstr))</span><br><span class="line">print(len(combstr))</span><br></pre></td></tr></table></figure><pre><code>{&apos;N&apos;, &apos;BA&apos;, &apos;B&apos;, &apos;NANA&apos;, &apos;BANAN&apos;, &apos;ANA&apos;, &apos;ANANA&apos;, &apos;BANA&apos;, &apos;BANANA&apos;, &apos;NA&apos;, &apos;BAN&apos;, &apos;A&apos;}18</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">string = <span class="string">'BANANA'</span></span><br><span class="line">substrings = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> cut_len <span class="keyword">in</span> range(len(string)):</span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> range(len(string)):</span><br><span class="line">        <span class="keyword">if</span> len(string[s:s+cut_len+<span class="number">1</span>]) == cut_len+<span class="number">1</span>:</span><br><span class="line">            substrings.append(string[s:s+cut_len+<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">substrings = set(substrings)</span><br><span class="line">print(substrings)</span><br><span class="line">print(len(substrings))</span><br><span class="line"></span><br><span class="line">palyers = &#123;<span class="string">'Stuart'</span>:[],<span class="string">'Kevin'</span>:[]&#125;</span><br><span class="line"></span><br><span class="line">vowel = <span class="string">'AEIOU'</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> substrings:</span><br><span class="line">    <span class="keyword">if</span> i[<span class="number">0</span>] <span class="keyword">in</span> vowel:</span><br><span class="line">        palyers[<span class="string">'kevin'</span>].append(i)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        palyers[<span class="string">'Stuart'</span>].append(i)</span><br><span class="line">print(palyers)</span><br></pre></td></tr></table></figure><pre><code>{&apos;ANAN&apos;, &apos;N&apos;, &apos;BA&apos;, &apos;B&apos;, &apos;NANA&apos;, &apos;BANAN&apos;, &apos;ANA&apos;, &apos;BANA&apos;, &apos;ANANA&apos;, &apos;AN&apos;, &apos;NAN&apos;, &apos;BANANA&apos;, &apos;NA&apos;, &apos;BAN&apos;, &apos;A&apos;}15{&apos;Stuart&apos;: [&apos;N&apos;, &apos;BA&apos;, &apos;B&apos;, &apos;NANA&apos;, &apos;BANAN&apos;, &apos;BANA&apos;, &apos;NAN&apos;, &apos;BANANA&apos;, &apos;NA&apos;, &apos;BAN&apos;], &apos;Kevin&apos;: [&apos;ANAN&apos;, &apos;ANA&apos;, &apos;ANANA&apos;, &apos;AN&apos;, &apos;A&apos;]}</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">string = <span class="string">'BANANA'</span></span><br><span class="line">substrings = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> cut_len <span class="keyword">in</span> range(len(string)):</span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> range(len(string)):</span><br><span class="line">        <span class="keyword">if</span> len(string[s:s+cut_len+<span class="number">1</span>]) == cut_len+<span class="number">1</span>:</span><br><span class="line">            substrings.append(string[s:s+cut_len+<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">print(substrings)</span><br><span class="line"></span><br><span class="line">Stuart = []</span><br><span class="line">Kevin = []</span><br><span class="line">vowel = <span class="string">'AEIOU'</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> substrings:</span><br><span class="line">    <span class="keyword">if</span> i[<span class="number">0</span>] <span class="keyword">in</span> vowel:</span><br><span class="line">        Kevin.append(i)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        Stuart.append(i)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">S_dict = dict(Counter(Stuart))</span><br><span class="line">K_dict = dict(Counter(Kevin))</span><br><span class="line"></span><br><span class="line">S_score = <span class="number">0</span></span><br><span class="line">K_score = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> v <span class="keyword">in</span> S_dict.values():</span><br><span class="line">        S_score += v</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> v <span class="keyword">in</span> K_dict.values():</span><br><span class="line">        K_score += v</span><br><span class="line">        </span><br><span class="line">print(S_score,K_score)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> S_score &gt; K_score:</span><br><span class="line">    print(<span class="string">'Stuart'</span>,S_score)</span><br><span class="line"><span class="keyword">elif</span> S_score &lt; K_score:</span><br><span class="line">    print(<span class="string">'Kevin'</span>,K_score)</span><br><span class="line"><span class="keyword">elif</span> S_score == K_score:</span><br><span class="line">    print(<span class="string">'Draw'</span>)</span><br></pre></td></tr></table></figure><pre><code>[&apos;B&apos;, &apos;A&apos;, &apos;N&apos;, &apos;A&apos;, &apos;N&apos;, &apos;A&apos;, &apos;BA&apos;, &apos;AN&apos;, &apos;NA&apos;, &apos;AN&apos;, &apos;NA&apos;, &apos;BAN&apos;, &apos;ANA&apos;, &apos;NAN&apos;, &apos;ANA&apos;, &apos;BANA&apos;, &apos;ANAN&apos;, &apos;NANA&apos;, &apos;BANAN&apos;, &apos;ANANA&apos;, &apos;BANANA&apos;]12 9Stuart 12</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#按照长度切分字符串，变成n个子字符串</span></span><br><span class="line">string = <span class="string">'BANANA'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cut_word</span><span class="params">(n,string)</span>:</span></span><br><span class="line">    substrings = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(string)):</span><br><span class="line">        <span class="keyword">if</span> len(string[i:i+n]) == n:</span><br><span class="line">            substrings.append(string[i:i+n])</span><br><span class="line">    print(substrings)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> range(len(string)):</span><br><span class="line">    cut_word(n+<span class="number">1</span>,string)</span><br></pre></td></tr></table></figure><pre><code>[&apos;B&apos;, &apos;A&apos;, &apos;N&apos;, &apos;A&apos;, &apos;N&apos;, &apos;A&apos;][&apos;BA&apos;, &apos;AN&apos;, &apos;NA&apos;, &apos;AN&apos;, &apos;NA&apos;][&apos;BAN&apos;, &apos;ANA&apos;, &apos;NAN&apos;, &apos;ANA&apos;][&apos;BANA&apos;, &apos;ANAN&apos;, &apos;NANA&apos;][&apos;BANAN&apos;, &apos;ANANA&apos;][&apos;BANANA&apos;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#切分子字符串</span></span><br><span class="line">string = <span class="string">'BANANA'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cut_word</span><span class="params">(string)</span>:</span></span><br><span class="line">    substrings = []</span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> range(len(string)):</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(string)):</span><br><span class="line">            <span class="keyword">if</span> len(string[i:i+n+<span class="number">1</span>]) == n+<span class="number">1</span>:</span><br><span class="line">                substrings.append(string[i:i+n+<span class="number">1</span>])</span><br><span class="line">    print(substrings)</span><br><span class="line">    </span><br><span class="line">cut_word(string)</span><br></pre></td></tr></table></figure><pre><code>[&apos;B&apos;, &apos;A&apos;, &apos;N&apos;, &apos;A&apos;, &apos;N&apos;, &apos;A&apos;, &apos;BA&apos;, &apos;AN&apos;, &apos;NA&apos;, &apos;AN&apos;, &apos;NA&apos;, &apos;BAN&apos;, &apos;ANA&apos;, &apos;NAN&apos;, &apos;ANA&apos;, &apos;BANA&apos;, &apos;ANAN&apos;, &apos;NANA&apos;, &apos;BANAN&apos;, &apos;ANANA&apos;, &apos;BANANA&apos;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">'BANANA'</span></span><br><span class="line">vowels = <span class="string">'AEIOU'</span></span><br><span class="line"></span><br><span class="line">kevsc = <span class="number">0</span></span><br><span class="line">stusc = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(s)):</span><br><span class="line">    <span class="keyword">if</span> s[i] <span class="keyword">in</span> vowels:</span><br><span class="line">        kevsc += (len(s)-i)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        stusc += (len(s)-i)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> kevsc &gt; stusc:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"Kevin"</span>, kevsc</span><br><span class="line"><span class="keyword">elif</span> kevsc &lt; stusc:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"Stuart"</span>, stusc</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"Draw"</span></span><br></pre></td></tr></table></figure><h1 id="Merge-the-Tools"><a href="#Merge-the-Tools" class="headerlink" title="Merge the Tools!"></a>Merge the Tools!</h1><p><a href="https://www.hackerrank.com/challenges/merge-the-tools/problem" target="_blank" rel="noopener">https://www.hackerrank.com/challenges/merge-the-tools/problem</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">string = <span class="string">'AABCAAADA'</span></span><br><span class="line">k = <span class="number">3</span></span><br><span class="line">cut_len = int(len(string)/k)</span><br><span class="line">cut_word = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(string),cut_len):</span><br><span class="line">        cut_word.append(string[i:i+cut_len])</span><br><span class="line">print(cut_word)</span><br></pre></td></tr></table></figure><pre><code>[&apos;AAB&apos;, &apos;CAA&apos;, &apos;ADA&apos;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">string = <span class="string">'AABCAAADA'</span></span><br><span class="line">s = list(string)</span><br><span class="line">k = <span class="number">3</span></span><br><span class="line">split_number = int(len(string)/k)</span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i &lt; len(s)<span class="number">-1</span>:</span><br><span class="line">    <span class="keyword">if</span> s[i] == s[i+<span class="number">1</span>]:</span><br><span class="line">        <span class="keyword">del</span> s[i]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        i += <span class="number">1</span></span><br></pre></td></tr></table></figure><pre><code>[&apos;A&apos;, &apos;B&apos;, &apos;C&apos;, &apos;A&apos;, &apos;D&apos;, &apos;A&apos;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">9</span>/<span class="number">3</span></span><br></pre></td></tr></table></figure><pre><code>3.0</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方法一</span></span><br><span class="line">string = <span class="string">'AABCAAADA'</span></span><br><span class="line">k = <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(string),k):</span><br><span class="line">        s = []</span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> string[i:i+k]:</span><br><span class="line">            <span class="keyword">if</span> item <span class="keyword">not</span> <span class="keyword">in</span> s:</span><br><span class="line">                s.append(item)</span><br><span class="line">        print(<span class="string">''</span>.join(s))</span><br></pre></td></tr></table></figure><pre><code>ABCAAD</code></pre><h2>列表生成式理解出错的例子</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">string = <span class="string">'AABCAAADA'</span></span><br><span class="line">k = <span class="number">3</span></span><br><span class="line">s = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> string:</span><br><span class="line">    <span class="keyword">if</span> item <span class="keyword">not</span> <span class="keyword">in</span> s:</span><br><span class="line">        s.append(item)</span><br><span class="line">print(s)</span><br><span class="line"></span><br><span class="line"><span class="comment">#我们把上面的代码块简化成下面的</span></span><br><span class="line">a = []</span><br><span class="line">print([item <span class="keyword">for</span> item <span class="keyword">in</span> string <span class="keyword">if</span> item <span class="keyword">not</span> <span class="keyword">in</span> a]) <span class="comment">#2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#但是结果却不一样，原因在哪里？</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">#2处，因为比较的a列表中一直都是空的，所以条件一直都是True</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者这样</span></span><br><span class="line">r = []</span><br><span class="line">print([r.append(item) <span class="keyword">for</span> item <span class="keyword">in</span> string <span class="keyword">if</span> item <span class="keyword">not</span> <span class="keyword">in</span> r])</span><br><span class="line"><span class="comment">#由于 append()方法无返回值，所以打印出的是none</span></span><br><span class="line">print(r)</span><br></pre></td></tr></table></figure><pre><code>[&apos;A&apos;, &apos;B&apos;, &apos;C&apos;, &apos;D&apos;][&apos;A&apos;, &apos;A&apos;, &apos;B&apos;, &apos;C&apos;, &apos;A&apos;, &apos;A&apos;, &apos;A&apos;, &apos;D&apos;, &apos;A&apos;][None, None, None, None][&apos;A&apos;, &apos;B&apos;, &apos;C&apos;, &apos;D&apos;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方法二</span></span><br><span class="line">string = <span class="string">'AABCAAADA'</span></span><br><span class="line">k = <span class="number">3</span></span><br><span class="line"><span class="keyword">for</span> part <span class="keyword">in</span> zip(*[iter(string)] * k):</span><br><span class="line">    d = dict()</span><br><span class="line">    print(<span class="string">''</span>.join([ d.setdefault(c, c) <span class="keyword">for</span> c <span class="keyword">in</span> part <span class="keyword">if</span> c <span class="keyword">not</span> <span class="keyword">in</span> d ]))</span><br><span class="line">    print(d)</span><br></pre></td></tr></table></figure><pre><code>AB{&apos;A&apos;: &apos;A&apos;, &apos;B&apos;: &apos;B&apos;}CA{&apos;C&apos;: &apos;C&apos;, &apos;A&apos;: &apos;A&apos;}AD{&apos;A&apos;: &apos;A&apos;, &apos;D&apos;: &apos;D&apos;}</code></pre><h2> dict.setdefault(key, default=None)</h2><p>Python 字典 setdefault() 方法和get()方法类似, 如果键不已经存在于字典中，将会添加键并将值设为默认值。</p><p>参数<br>key – 查找的键值。<br>default – 键不存在时，设置的默认键值。</p><p>返回值<br>如果 key 在 字典中，返回对应的值。如果不在字典中，则插入 key 及设置的默认值 default，并返回 default ，default 默认值为 None。</p><h2> dict.get(key, default=None)</h2><p>Python 字典 get() 函数返回指定键的值，如果值不在字典中返回默认值。</p><p>参数<br>key – 字典中要查找的键。<br>default – 如果指定键的值不存在时，返回该默认值值。</p><p>返回值<br>返回指定键的值，如果值不在字典中返回默认值 None。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a = &#123;<span class="string">'A'</span>: <span class="string">'A'</span>, <span class="string">'B'</span>: <span class="string">'B'</span>&#125;</span><br><span class="line"></span><br><span class="line">print(a.get(<span class="string">'A'</span>,<span class="string">'NA'</span>))</span><br><span class="line">print(a.get(<span class="string">'C'</span>,<span class="string">'NA'</span>))</span><br><span class="line">print(a)</span><br><span class="line">print(a.setdefault(<span class="string">'A'</span>,<span class="string">'NA'</span>))</span><br><span class="line">print(a.setdefault(<span class="string">'C'</span>,<span class="string">'NA'</span>))</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><pre><code>ANA{&apos;A&apos;: &apos;A&apos;, &apos;B&apos;: &apos;B&apos;}ANA{&apos;A&apos;: &apos;A&apos;, &apos;B&apos;: &apos;B&apos;, &apos;C&apos;: &apos;NA&apos;}</code></pre><h2>iter()函数</h2><p>凡是可作用于for循环的对象都是Iterable类型；<br>凡是可作用于next()函数的对象都是Iterator类型，它们表示一个惰性计算的序列；</p><p>生成器都是Iterator对象，但list、dict、str虽然是Iterable，却不是Iterator。<br>把list、dict、str等Iterable变成Iterator可以使用iter()函数</p><h2>iterator 对象 迭代器</h2><p>可以被next()函数调用并不断返回下一个值的对象称为迭代器：Iterator。</p><p>Python的Iterator对象表示的是一个数据流，Iterator对象可以被next()函数调用并不断返回下一个数据，直到没有数据时抛出StopIteration错误。可以把这个数据流看做是一个有序序列，但我们却不能提前知道序列的长度，只能不断通过next()函数实现按需计算下一个数据，所以Iterator的计算是惰性的，只有在需要返回下一个数据时它才会计算。</p><p>Iterator甚至可以表示一个无限大的数据流，例如全体自然数。而使用list是永远不可能存储全体自然数的。</p><h2>zip(<em>iterables)函数</em></h2><br><a href="https://docs.python.org/3/library/functions.html#zip" target="_blank" rel="noopener">https://docs.python.org/3/library/functions.html#zip</a><br><br>Python3中的zip函数可以把两个或者两个以上的迭代器封装成生成器，这种zip生成器会从每个迭代器中获取该迭代器的下一个值，然后把这些值组装成元组（tuple）。这样，zip函数就实现了平行地遍历多个迭代器。<br><br>如果输入的迭代器长度不同，那么，只要有一个迭代器遍历完，zip就不再产生元组了，zip会提前终止，这可能导致意外的结果，不可不察。<br><br>zip([iter(s)]<em>n)将数据序列聚类为n长度组的习语成为可能。这重复了相同的迭代器n次，以使每个输出元组具有对迭代器的n次调用的结果。这具有将输入划分为n个长块的效果。<br><br>zip() 与 </em> 操作符一起可以用来 unzip 一个列表<br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#很简洁地实现了同时遍历两个列表</span></span><br><span class="line">list1 = [<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>]</span><br><span class="line">list2 = [<span class="string">'apple'</span>,<span class="string">'boy'</span>,<span class="string">'cat'</span>,<span class="string">'dog'</span>]</span><br><span class="line"><span class="keyword">for</span> x,y <span class="keyword">in</span> zip(list1,list2):</span><br><span class="line">    print(x,<span class="string">'is'</span>,y)</span><br></pre></td></tr></table></figure><br><br>    a is apple<br>    b is boy<br>    c is cat<br>    d is dog<br><br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">'AABCAAADA'</span></span><br><span class="line">i = iter(s)</span><br><span class="line">print(list(zip(i,i,i))) </span><br><span class="line"><span class="comment">#其中3个i都是指向同一个iterator对象，它的内容只能被消费一次，每next()调用一次，就到下一个数据</span></span><br></pre></td></tr></table></figure><br><br>    [(‘A’, ‘A’, ‘B’), (‘C’, ‘A’, ‘A’), (‘A’, ‘D’, ‘A’)]<br><br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">l = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">n = l*<span class="number">3</span></span><br><span class="line">m = [l]*<span class="number">3</span></span><br><span class="line">print(n)</span><br><span class="line">print(m)</span><br><span class="line">m[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">9</span></span><br><span class="line">print(m)</span><br></pre></td></tr></table></figure><br><br>    [1, 2, 3, 1, 2, 3, 1, 2, 3]<br>    [[1, 2, 3], [1, 2, 3], [1, 2, 3]]<br>    [[9, 2, 3], [9, 2, 3], [9, 2, 3]]<br><br><br><h2>list.sort() 方法 与 sorted() 函数</h2><p>sorted(iterable,key=None,reverse=False)，返回新的列表，对所有可迭代的对象均有效</p><p>list.sort(key=None,reverse=False) 就地改变列表reverse：True反序；False 正序</p><p>sorted 和list.sort 都接受key, reverse定制。但是区别是。list.sort()是列表中的方法，只能用于列表。而sorted可以用于任何可迭代的对象。list.sort()是在原序列上进行修改，不会产生新的序列。所以如果你不需要旧的序列，可以选择list.sort()。 sorted() 会返回一个新的序列。旧的对象依然存在。</p><h1 id="Symmetric-Difference"><a href="#Symmetric-Difference" class="headerlink" title="Symmetric Difference"></a>Symmetric Difference</h1><p><a href="https://www.hackerrank.com/challenges/symmetric-difference/problem" target="_blank" rel="noopener">https://www.hackerrank.com/challenges/symmetric-difference/problem</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">M = <span class="string">'2 4 5 9'</span></span><br><span class="line">N = <span class="string">'2 4 11 12'</span></span><br><span class="line">M = set(map(int,M.split(<span class="string">' '</span>)))</span><br><span class="line">N = set(map(int,N.split(<span class="string">' '</span>)))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> sorted(M^N):</span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure><pre><code>591112</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">M = <span class="string">'2 4 5 9'</span></span><br><span class="line">N = <span class="string">'2 4 11 12'</span></span><br><span class="line">M = set(M.split(<span class="string">' '</span>))</span><br><span class="line">N = set(N.split(<span class="string">' '</span>))</span><br><span class="line">sym_dif = list(M^N)</span><br><span class="line">print(sym_dif)</span><br><span class="line">print(sorted(sym_dif))</span><br><span class="line">print(sorted(sym_dif,key=int))</span><br><span class="line">print(<span class="string">'\n'</span>.join(sorted(sym_dif,key=int)))</span><br></pre></td></tr></table></figure><pre><code>[&apos;11&apos;, &apos;5&apos;, &apos;9&apos;, &apos;12&apos;][&apos;11&apos;, &apos;12&apos;, &apos;5&apos;, &apos;9&apos;][&apos;5&apos;, &apos;9&apos;, &apos;11&apos;, &apos;12&apos;]591112</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方法一</span></span><br><span class="line">m,M,n,N =[input() <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>)]</span><br><span class="line">M = set(map(int,M.split(<span class="string">' '</span>)))</span><br><span class="line">N = set(map(int,N.split(<span class="string">' '</span>)))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> sorted(M^N):</span><br><span class="line">    print(i)</span><br><span class="line">    </span><br><span class="line"><span class="comment">#上面的for循环等同于下面的代码块</span></span><br><span class="line">print(*sorted(M^N),sep=<span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure><pre><code>42 4 5 942 4 11 125911125 9 11 12</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方法二 简化</span></span><br><span class="line">a,b = [set(input().split()) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>)][<span class="number">1</span>::<span class="number">2</span>]</span><br><span class="line">print(*sorted(a^b, key=int), sep=<span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure><pre><code>4 2 4 5 9 42 4 11 12591112</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方法三</span></span><br><span class="line">a,b = [set(input().split()) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>)][<span class="number">1</span>::<span class="number">2</span>]</span><br><span class="line"><span class="keyword">print</span> (<span class="string">'\n'</span>.join(sorted(a^b, key=int)))</span><br></pre></td></tr></table></figure><pre><code>4  2 4 5 9  4 2 4 11 12591112</code></pre><h2> ‘sep’.join(seq)</h2><br>sep：分隔符。可以为空<br>seq：要连接的元素序列、字符串、元组，里面的元素必须是字符串类型<br>如果是整数类型，<br>可以先把它转化为字符串类型  print(‘\n’.join(map(str,a)))<br>或者用 print(*a,sep=’\n’)<br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="string">'5'</span>, <span class="string">'9'</span>, <span class="string">'11'</span>, <span class="string">'12'</span>]</span><br><span class="line">print(<span class="string">'\n'</span>.join(a))</span><br><span class="line">print(*a,sep=<span class="string">'\n'</span>)</span><br><span class="line"></span><br><span class="line">a = [<span class="number">5</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">12</span>]</span><br><span class="line">print(*a,sep=<span class="string">'\n'</span>)</span><br><span class="line"><span class="comment">#print('\n'.join(a)) 报错，因为a里面的元素是整数型</span></span><br><span class="line">print(<span class="string">'\n'</span>.join(map(str,a))) <span class="comment">#先把元素转化为字符串类型</span></span><br></pre></td></tr></table></figure><br><br>    5<br>    9<br>    11<br>    12<br>    5<br>    9<br>    11<br>    12<br>    5<br>    9<br>    11<br>    12<br>    5<br>    9<br>    11<br>    12<br><br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 按照数字的大小，从小到大换行打印每一个元素</span></span><br><span class="line">a = [<span class="string">'11'</span>, <span class="string">'12'</span>, <span class="string">'5'</span>, <span class="string">'9'</span>] </span><br><span class="line"></span><br><span class="line">print(<span class="string">'\n'</span>.join(sorted(a,key = int)))</span><br><span class="line"></span><br><span class="line">print(*(sorted(a,key=int)),sep=<span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure><br><br>    5<br>    9<br>    11<br>    12<br>    5<br>    9<br>    11<br>    12<br><br><br># No Idea!<br><a href="https://www.hackerrank.com/challenges/no-idea/problem" target="_blank" rel="noopener">https://www.hackerrank.com/challenges/no-idea/problem</a><br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方法一  如果序列太大了，太耗时了</span></span><br><span class="line">n = <span class="number">3</span></span><br><span class="line">m = <span class="number">2</span></span><br><span class="line">arry = [<span class="number">1</span>,<span class="number">5</span>,<span class="number">3</span>]</span><br><span class="line">A = &#123;<span class="number">3</span>,<span class="number">1</span>&#125;</span><br><span class="line">B = &#123;<span class="number">5</span>,<span class="number">7</span>&#125;</span><br><span class="line">happiness = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> arry:</span><br><span class="line">    <span class="keyword">if</span> i <span class="keyword">in</span> A:</span><br><span class="line">        happiness += arry.count(i)</span><br><span class="line">    <span class="keyword">elif</span> i <span class="keyword">in</span> B:</span><br><span class="line">        happiness -= arry.count(i)</span><br><span class="line">print(happiness)</span><br></pre></td></tr></table></figure><br><br>    1<br><br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方法二 简化</span></span><br><span class="line">n = <span class="number">3</span></span><br><span class="line">m = <span class="number">2</span></span><br><span class="line">arry = [<span class="number">1</span>,<span class="number">5</span>,<span class="number">3</span>]</span><br><span class="line">A = &#123;<span class="number">3</span>,<span class="number">1</span>&#125;</span><br><span class="line">B = &#123;<span class="number">5</span>,<span class="number">7</span>&#125;</span><br><span class="line">happiness = <span class="number">0</span></span><br><span class="line">count = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> arry:</span><br><span class="line">    <span class="keyword">if</span> i <span class="keyword">in</span> A:</span><br><span class="line">        count.append(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">elif</span> i <span class="keyword">in</span> B:</span><br><span class="line">        count.append(<span class="number">-1</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        count.append(<span class="number">0</span>)</span><br><span class="line">print(sum(count))</span><br></pre></td></tr></table></figure><br><br>    1<br><br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方法三</span></span><br><span class="line">n = <span class="number">3</span></span><br><span class="line">m = <span class="number">2</span></span><br><span class="line">arry = [<span class="number">1</span>,<span class="number">5</span>,<span class="number">3</span>]</span><br><span class="line">A = &#123;<span class="number">3</span>,<span class="number">1</span>&#125;</span><br><span class="line">B = &#123;<span class="number">5</span>,<span class="number">7</span>&#125;</span><br><span class="line">happiness = <span class="number">0</span></span><br><span class="line">count = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> arry:</span><br><span class="line">    count.append((i <span class="keyword">in</span> A) - (i <span class="keyword">in</span> B))</span><br><span class="line">print(count)</span><br></pre></td></tr></table></figure><br><br>    [1, -1, 1]<br><br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(int(<span class="keyword">True</span>))</span><br><span class="line">print(int(<span class="keyword">False</span>))</span><br></pre></td></tr></table></figure><br><br>    1<br>    0<br><br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">n,m = list(map(int,input().split(<span class="string">' '</span>)))</span><br><span class="line">arry = list(map(int,input().split(<span class="string">' '</span>)))</span><br><span class="line">A = set(map(int,input().split(<span class="string">' '</span>)))</span><br><span class="line">B = set(map(int,input().split(<span class="string">' '</span>)))</span><br><span class="line">print(n,m,arry,A,B)</span><br></pre></td></tr></table></figure><br><br>    3 2<br>    1 5 3<br>    3 1<br>    5 7<br>    3 2 [1, 5, 3] {1, 3} {5, 7}<br><br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">n,m = input().split(<span class="string">' '</span>)</span><br><span class="line">arry = input().split(<span class="string">' '</span>)</span><br><span class="line">A = set(input().split(<span class="string">' '</span>))</span><br><span class="line">B = set(input().split(<span class="string">' '</span>))</span><br><span class="line">print(n,m,arry,A,B)</span><br></pre></td></tr></table></figure><br><br>    3 2<br>    1 5 3<br>    3 1<br>    5 7<br>    3 2 [‘1’, ‘5’, ‘3’] {‘3’, ‘1’} {‘5’, ‘7’}<br><br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">n = int(input())</span><br><span class="line">country = set(input().strip() <span class="keyword">for</span> i <span class="keyword">in</span> range(n))</span><br><span class="line">print(country,len(country))</span><br></pre></td></tr></table></figure><br><br>    7<br>    UK<br>    China<br>    USA<br>    France<br>    New Zealand<br>     UK<br>    France<br>    {‘France’, ‘China’, ‘USA’, ‘UK’, ‘New Zealand’} 5<br><br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">n = int(input())</span><br><span class="line">s = set(map(int,input().split(<span class="string">' '</span>)))</span><br><span class="line">print(s)</span><br></pre></td></tr></table></figure><br><br>    9<br>    1 2 3 4 5 6 7 8 9<br>    {1, 2, 3, 4, 5, 6, 7, 8, 9}<br><br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Eng,Fre = (set(input().split(<span class="string">' '</span>)) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>))</span><br><span class="line">print(Eng,Fre)</span><br><span class="line"></span><br><span class="line">print(Eng - Fre)</span><br></pre></td></tr></table></figure><br><br>    1 2 3 4 5 6 7 8 9<br>    10 1 2 3 11 21 55 6 8<br>    {‘6’, ‘2’, ‘5’, ‘8’, ‘3’, ‘ ‘, ‘7’, ‘9’, ‘4’, ‘1’} {‘6’, ‘2’, ‘5’, ‘0’, ‘8’, ‘3’, ‘ ‘, ‘1’}<br>    {‘4’, ‘7’, ‘9’}<br><br><br># Set Mutations<br><a href="https://www.hackerrank.com/challenges/py-set-mutations/problem" target="_blank" rel="noopener">https://www.hackerrank.com/challenges/py-set-mutations/problem</a><br><br><span class="girk">方法一</span> if<br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">num_ele = input()</span><br><span class="line">set_A = set(map(int,input().split(<span class="string">' '</span>)))</span><br><span class="line">num = int(input())</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(num):</span><br><span class="line">    command = input().split(<span class="string">' '</span>)[<span class="number">0</span>]</span><br><span class="line">    set_a = set(map(int,input().split(<span class="string">' '</span>)))</span><br><span class="line">    <span class="keyword">if</span> command == <span class="string">'intersection_update'</span>:</span><br><span class="line">        set_A &amp;= set_a</span><br><span class="line">    <span class="keyword">if</span> command == <span class="string">'update'</span>:</span><br><span class="line">        set_A |= set_a</span><br><span class="line">    <span class="keyword">if</span> command == <span class="string">'symmetric_difference_update'</span>:</span><br><span class="line">        set_A ^= set_a</span><br><span class="line">    <span class="keyword">if</span> command == <span class="string">'difference_update'</span>:</span><br><span class="line">        set_A -= set_a</span><br><span class="line">print(sum(set_A))</span><br></pre></td></tr></table></figure><br><br>    16<br>    1 2 3 4 5 6 7 8 9 10 11 12 13 14 24 52<br>    {‘10’, ‘2’, ‘12’, ‘7’, ‘11’, ‘4’, ‘13’, ‘6’, ‘3’, ‘8’, ‘1’, ‘14’, ‘52’, ‘24’, ‘5’, ‘9’}<br>    1<br>    intersection_update 10<br>    2 3 5 6 8 9 1 4 7 11<br>    {‘2’, ‘7’, ‘11’, ‘4’, ‘8’, ‘6’, ‘3’, ‘1’, ‘5’, ‘9’}<br>    10<br><br><br><span class="girk">方法二</span> getattr()<br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">num_ele = input()</span><br><span class="line">set_A = set(input().split(<span class="string">' '</span>))</span><br><span class="line">num = int(input())</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(num):</span><br><span class="line">    command = input().split(<span class="string">' '</span>)[<span class="number">0</span>]</span><br><span class="line">    set_a = set(input().split(<span class="string">' '</span>))</span><br><span class="line">    getattr(set_A,command)(set_a)</span><br><span class="line">print(sum(map(int,set_A)))</span><br></pre></td></tr></table></figure><br><br><h2>getattr()</h2><p>getattr(object, name[,default])<br>获取对象object的属性或者方法，如果存在打印出来，如果不存在，打印出默认值，默认值可选。<br>需要注意的是，如果是返回的对象的方法，返回的是方法的内存地址，如果需要运行这个方法，<br>可以在后面添加一对括号。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span><span class="params">()</span>:</span></span><br><span class="line">    name = <span class="string">'hackerrank'</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'Hello Hackerrank'</span></span><br><span class="line"></span><br><span class="line">t = test()</span><br><span class="line">print(getattr(t,<span class="string">'name'</span>)) <span class="comment">#获取name属性，存在就打印出来</span></span><br><span class="line">print(getattr(t,<span class="string">'run'</span>)) <span class="comment">#获取run方法，存在就打印出方法的内存地址</span></span><br><span class="line">getattr(t, <span class="string">'run'</span>)()  <span class="comment">#获取run方法，后面加括号可以将这个方法运行</span></span><br><span class="line">print(getattr(t, <span class="string">"age"</span>,<span class="string">"18"</span>))  <span class="comment">#若属性不存在，返回一个默认值。</span></span><br><span class="line">print(getattr(t, <span class="string">'age'</span>))  <span class="comment">#获取一个不存在的属性</span></span><br></pre></td></tr></table></figure><pre><code>hackerrank&lt;bound method test.run of &lt;__main__.test object at 0x000001C07C87F390&gt;&gt;18---------------------------------------------------------------------------AttributeError                            Traceback (most recent call last)&lt;ipython-input-11-7e96e4c12be7&gt; in &lt;module&gt;()      9 getattr(t, &apos;run&apos;)()  #获取run方法，后面加括号可以将这个方法运行     10 print(getattr(t, &quot;age&quot;,&quot;18&quot;))  #若属性不存在，返回一个默认值。---&gt; 11 print(getattr(t, &apos;age&apos;))  #获取一个不存在的属性AttributeError: &apos;test&apos; object has no attribute &apos;age&apos;</code></pre><h2>dir()</h2><p>dir()函数可以查看对像内所有属于及方法，在python中任何东西都是对像，一种数据类型，一个模块等，都有自己的属性和方法，除了常用方法外，其它的你不需要全部记住它，交给dir()函数就好了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;</span><br><span class="line">dir(a)</span><br></pre></td></tr></table></figure><pre><code>[&apos;__and__&apos;, &apos;__class__&apos;, &apos;__contains__&apos;, &apos;__delattr__&apos;, &apos;__dir__&apos;, &apos;__doc__&apos;, &apos;__eq__&apos;, &apos;__format__&apos;, &apos;__ge__&apos;, &apos;__getattribute__&apos;, &apos;__gt__&apos;, &apos;__hash__&apos;, &apos;__iand__&apos;, &apos;__init__&apos;, &apos;__init_subclass__&apos;, &apos;__ior__&apos;, &apos;__isub__&apos;, &apos;__iter__&apos;, &apos;__ixor__&apos;, &apos;__le__&apos;, &apos;__len__&apos;, &apos;__lt__&apos;, &apos;__ne__&apos;, &apos;__new__&apos;, &apos;__or__&apos;, &apos;__rand__&apos;, &apos;__reduce__&apos;, &apos;__reduce_ex__&apos;, &apos;__repr__&apos;, &apos;__ror__&apos;, &apos;__rsub__&apos;, &apos;__rxor__&apos;, &apos;__setattr__&apos;, &apos;__sizeof__&apos;, &apos;__str__&apos;, &apos;__sub__&apos;, &apos;__subclasshook__&apos;, &apos;__xor__&apos;, &apos;add&apos;, &apos;clear&apos;, &apos;copy&apos;, &apos;difference&apos;, &apos;difference_update&apos;, &apos;discard&apos;, &apos;intersection&apos;, &apos;intersection_update&apos;, &apos;isdisjoint&apos;, &apos;issubset&apos;, &apos;issuperset&apos;, &apos;pop&apos;, &apos;remove&apos;, &apos;symmetric_difference&apos;, &apos;symmetric_difference_update&apos;, &apos;union&apos;, &apos;update&apos;]</code></pre><h1 id="The-Captain’s-Room"><a href="#The-Captain’s-Room" class="headerlink" title="The Captain’s Room"></a>The Captain’s Room</h1><p><a href="https://www.hackerrank.com/challenges/py-the-captains-room/problem" target="_blank" rel="noopener">https://www.hackerrank.com/challenges/py-the-captains-room/problem</a></p><p><span class="girk">思路一：正常思路，找到出现频率为1次的项</span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方法一 循环</span></span><br><span class="line">k = int(input())</span><br><span class="line">num_list = input().split()</span><br><span class="line">num_times = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> num_list:</span><br><span class="line">    <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> num_times:</span><br><span class="line">        num_times[i] = <span class="number">0</span></span><br><span class="line">    num_times[i] +=  <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> num_times.keys():</span><br><span class="line">    <span class="keyword">if</span> num_times[i] == <span class="number">1</span>:</span><br><span class="line">        print(i)</span><br></pre></td></tr></table></figure><pre><code>51 2 3 6 5 4 4 2 5 3 6 1 6 5 3 2 4 1 2 5 1 4 3 6 8 4 3 1 5 6 2{&apos;1&apos;: 5, &apos;2&apos;: 5, &apos;3&apos;: 5, &apos;6&apos;: 5, &apos;5&apos;: 5, &apos;4&apos;: 5, &apos;8&apos;: 1}8</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方法二 fromkeys() </span></span><br><span class="line">k = int(input())</span><br><span class="line">num_list = input().split()</span><br><span class="line">num_times = dict.fromkeys(set(num_list),<span class="number">0</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> num_list:</span><br><span class="line">    <span class="keyword">if</span> i <span class="keyword">in</span> num_times:</span><br><span class="line">        num_times[i] +=  <span class="number">1</span></span><br><span class="line">print(num_times)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> num_times.keys():</span><br><span class="line">    <span class="keyword">if</span> num_times[i] == <span class="number">1</span>:</span><br><span class="line">        print(i)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方法三 collections.Counter</span></span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line">k = int(input())</span><br><span class="line">num_list = input().split()</span><br><span class="line">num_times = Counter(num_list)</span><br><span class="line">print(num_times.most_common()[<span class="number">-1</span>][<span class="number">0</span>])</span><br></pre></td></tr></table></figure><pre><code>51 2 3 6 5 4 4 2 5 3 6 1 6 5 3 2 4 1 2 5 1 4 3 6 8 4 3 1 5 6 2 8</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">l = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]</span><br><span class="line">d = dict.fromkeys(set(l),<span class="number">0</span>)</span><br><span class="line">print(d)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> l:</span><br><span class="line">    <span class="keyword">if</span> i <span class="keyword">in</span> d:</span><br><span class="line">        d[i] += <span class="number">1</span></span><br><span class="line">print(d)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line">c = Counter(d)</span><br><span class="line">print(c)</span><br><span class="line">m = c.most_common()</span><br><span class="line">print(m[<span class="number">-1</span>])</span><br><span class="line">print(m[<span class="number">-1</span>][<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">l = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]</span><br><span class="line">s = set(l)</span><br><span class="line">print(s)</span><br><span class="line">n = int((len(l)<span class="number">-1</span>)/<span class="number">5</span>)</span><br><span class="line">print(n)</span><br><span class="line">c = (sum(s)*n - sum(l))/(n<span class="number">-1</span>)</span><br><span class="line">print(int(c))</span><br></pre></td></tr></table></figure><pre><code>{1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0}{1: 3, 2: 3, 3: 3, 4: 3, 5: 3, 6: 1}Counter({1: 3, 2: 3, 3: 3, 4: 3, 5: 3, 6: 1})(6, 1)6{1, 2, 3, 4, 5, 6}36</code></pre><p><span class="girk">思路二：数学思路</span></p><p>L = [1,2,3,4,1,2,3,4,1,2,3,4,5]    S = (1,2,3,4,5)</p><p>C 是L中只出现一次的5   K 是 [1,2,3,4]在L中出现的次数 </p><p>L = S * K - (K-1) * C </p><p>C = (S * K - L)/(K-1)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">k = int(input())</span><br><span class="line">num_list = list(map(int,input().split()))</span><br><span class="line">s = set(num_list)</span><br><span class="line">Captin = (sum(s)*k - sum(num_list))/(k<span class="number">-1</span>)</span><br><span class="line">print(int(Captin))</span><br></pre></td></tr></table></figure><pre><code>51 2 3 6 5 4 4 2 5 3 6 1 6 5 3 2 4 1 2 5 1 4 3 6 8 4 3 1 5 6 2 8</code></pre><p><span class="girk">思路三：集合差</span></p><p>创建一个包括所有元素的集合，再创建一个包括出现频率超过一次的集合，两个集合求差</p><p>A 与 B 的差集是所有属于 A 且不属于 B 的元素构成的集合</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">k = int(input())</span><br><span class="line">num_list = list(map(int,input().split()))</span><br><span class="line">s1 = set()</span><br><span class="line">s2 = set()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> num_list:</span><br><span class="line">    <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> s1:</span><br><span class="line">        s1.add(i)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        s2.add(i)</span><br><span class="line">print((s1-s2).pop())</span><br></pre></td></tr></table></figure><pre><code>51 2 3 6 5 4 4 2 5 3 6 1 6 5 3 2 4 1 2 5 1 4 3 6 8 4 3 1 5 6 2 8</code></pre><p><span class="girk">思路四：集合对称差 完全想不到</span> </p><p>将列表进行排序后，交错分成2个列表，一个奇数列表，一个偶数列表，将这两个列表变成集合后，求对称差</p><p>两个集合的对称差是只属于其中一个集合，而不属于另一个集合的元素组成的集合。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">k = int(input())</span><br><span class="line">rooms = input().split()</span><br><span class="line">rooms.sort()</span><br><span class="line">capt_room = (set(rooms[<span class="number">0</span>::<span class="number">2</span>]) ^ set(rooms[<span class="number">1</span>::<span class="number">2</span>]))</span><br><span class="line">print(capt_room.pop())</span><br></pre></td></tr></table></figure><pre><code>51 2 3 6 5 4 4 2 5 3 6 1 6 5 3 2 4 1 2 5 1 4 3 6 8 4 3 1 5 6 28</code></pre><h1 id="Check-Subset"><a href="#Check-Subset" class="headerlink" title="Check Subset"></a>Check Subset</h1><p><a href="https://www.hackerrank.com/challenges/py-check-subset/problem" target="_blank" rel="noopener">https://www.hackerrank.com/challenges/py-check-subset/problem</a></p><h2>s.issubset(t)</h2><br> s &lt;= t  # 测试是否 s 中的每一个元素都在 t 中<br><br><h2>s.issuperset(t)</h2><br> s &gt;= t  # 测试是否 t 中的每一个元素都在 s 中<br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 正常思路求A和B的交集数量是否是还是A的数量</span></span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(T):</span><br><span class="line">    A_len = int(input())</span><br><span class="line">    A = set(input().split())</span><br><span class="line">    B_len = int(input())</span><br><span class="line">    B = set(input().split())</span><br><span class="line">    print(len(A&amp;B)==A_len)</span><br></pre></td></tr></table></figure><br><br>    1<br>    5<br>    1 2 3 5 6<br>    9<br>    9 8 5 6 3 2 1 4 7<br>    True<br><br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># s.issubset(t)</span></span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(T):</span><br><span class="line">    A_len = int(input())</span><br><span class="line">    A = set(input().split())</span><br><span class="line">    B_len = int(input())</span><br><span class="line">    B = set(input().split())</span><br><span class="line">    print(A&lt;=B)</span><br></pre></td></tr></table></figure><br><br>    1<br>    5<br>    1 2 3 5 6<br>    9<br>    9 8 5 6 3 2 1 4 7<br>    True<br><br><br># Check Strict Superset<br><a href="https://www.hackerrank.com/challenges/py-check-strict-superset/problem" target="_blank" rel="noopener">https://www.hackerrank.com/challenges/py-check-strict-superset/problem</a><br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 自己的思路</span></span><br><span class="line"></span><br><span class="line">A = set(input().split())</span><br><span class="line">N = int(input())</span><br><span class="line">result = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(N):</span><br><span class="line">    B = set(input().split())</span><br><span class="line">    <span class="keyword">if</span> A&gt;B:</span><br><span class="line">        result += <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        result -= <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> result=N:</span><br><span class="line">    print(<span class="string">'True'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'False'</span>)</span><br></pre></td></tr></table></figure><br><br>    True<br>    True<br>    True<br>    True<br>    False<br>    False<br><br><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 用all() 函数 和 生成器 generator</span></span><br><span class="line"></span><br><span class="line">A = set(input().split())</span><br><span class="line">print(all((A&gt;set(input().split()) <span class="keyword">for</span> i <span class="keyword">in</span> range(int(input()))))</span><br></pre></td></tr></table></figure><br><br>    1 2 3 4 5 6 7 8 9 10 11 12 23 45 84 78<br>    2<br>    1 2 3 4 5<br>    100 11 12<br>    False<br><br><br><h2>all() 函数</h2><p>all() 函数用于判断给定的可迭代参数 iterable 中的所有元素是否不为 0、’’、False 或者 iterable 为空，如果是返回 True，否则返回 False。</p><p><span class="mark">注意：</span>空元组、空列表返回值为True，这里要特别注意。</p><p>all函数等价于下列代码段：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">all</span><span class="params">(iterable)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> element <span class="keyword">in</span> iterable:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> element:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">True</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">print(all([<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>]) ) <span class="comment"># 列表list，元素都不为空或0</span></span><br><span class="line">print(all([<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">''</span>, <span class="string">'d'</span>]) )  <span class="comment"># 列表list，存在一个为空的元素</span></span><br><span class="line">print(all([<span class="number">0</span>, <span class="number">1</span>,<span class="number">2</span>, <span class="number">3</span>]) )  <span class="comment"># 列表list，存在一个为0的元素</span></span><br><span class="line">print(all([]))  <span class="comment"># 空列表</span></span><br><span class="line">print(all(())) <span class="comment"># 空元组</span></span><br></pre></td></tr></table></figure><pre><code>TrueFalseFalseTrueTrue</code></pre><h1 id="Find-Angle-MBC"><a href="#Find-Angle-MBC" class="headerlink" title="Find Angle MBC"></a>Find Angle MBC</h1><p><a href="https://www.hackerrank.com/challenges/find-angle/problem" target="_blank" rel="noopener">https://www.hackerrank.com/challenges/find-angle/problem</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sin</span><br><span class="line"><span class="keyword">from</span> cmath <span class="keyword">import</span> sqrt</span><br><span class="line">a = <span class="number">10</span></span><br><span class="line">b = <span class="number">10</span></span><br><span class="line">print(float(sqrt(a/a**a+b**b)))</span><br><span class="line"><span class="comment">#print(sin(a/sqrt(a**a+b**b)))</span></span><br></pre></td></tr></table></figure><pre><code>---------------------------------------------------------------------------TypeError                                 Traceback (most recent call last)&lt;ipython-input-13-042b1c12f4e0&gt; in &lt;module&gt;()      3 a = 10      4 b = 10----&gt; 5 print(float(sqrt(a/a**a+b**b)))      6 #print(sin(a/sqrt(a**a+b**b)))TypeError: can&apos;t convert complex to float</code></pre><h1 id="itertools-product"><a href="#itertools-product" class="headerlink" title="itertools.product()"></a>itertools.product()</h1><p><a href="https://www.hackerrank.com/challenges/itertools-permutations/problem" target="_blank" rel="noopener">https://www.hackerrank.com/challenges/itertools-permutations/problem</a></p><p>笛卡尔积</p><p>product(A, B) returns the same as ((x,y) for x in A for y in B)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> product</span><br><span class="line"></span><br><span class="line">print(list(product([<span class="number">1</span>,<span class="number">0</span>],[<span class="number">2</span>,<span class="number">4</span>])))</span><br><span class="line">print(list(product([<span class="number">1</span>,<span class="number">2</span>],repeat=<span class="number">2</span>)))</span><br><span class="line">print(list(product([<span class="number">1</span>,<span class="number">2</span>],[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">1</span>,<span class="number">2</span>])))</span><br><span class="line"></span><br><span class="line">a=[<span class="number">1</span>,<span class="number">2</span>]</span><br><span class="line">b=[<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> product(a,b):</span><br><span class="line">    print(i,end=<span class="string">' '</span>)</span><br><span class="line">print()</span><br><span class="line">print(*product(a,b))</span><br></pre></td></tr></table></figure><pre><code>[(1, 2), (1, 4), (0, 2), (0, 4)][(1, 1), (1, 2), (2, 1), (2, 2)][(1, 1, 1), (1, 1, 2), (1, 2, 1), (1, 2, 2), (2, 1, 1), (2, 1, 2), (2, 2, 1), (2, 2, 2)](1, 3) (1, 4) (2, 3) (2, 4) (1, 3) (1, 4) (2, 3) (2, 4)</code></pre><h1 id="itertools-permutations"><a href="#itertools-permutations" class="headerlink" title="itertools.permutations"></a>itertools.permutations</h1><p><a href="https://www.hackerrank.com/challenges/itertools-permutations/problem" target="_blank" rel="noopener">https://www.hackerrank.com/challenges/itertools-permutations/problem</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># permutations 排列  对顺序敏感（&#123;1, 2&#125;, &#123;2, 1&#125; 是不同的排列）</span></span><br><span class="line"><span class="comment"># combinations 组合  对顺序不敏感（&#123;1, 2, 3&#125;, &#123;1, 3, 2&#125;, … 都是相同的组合）</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> permutations,combinations</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">listA = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">listB = <span class="string">'abcd'</span></span><br><span class="line">print(permutations(listA)) <span class="comment"># 返回对象</span></span><br><span class="line">print(list(permutations(listA))) <span class="comment"># 返回迭代对象中所有的排列</span></span><br><span class="line">print(list(permutations(listB,<span class="number">2</span>))) <span class="comment"># 返回迭代对象中2元素的排列</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(<span class="string">'--------------combinations---------------------'</span>) </span><br><span class="line">print(list(combinations(listA,<span class="number">3</span>))) <span class="comment"># 返回迭代对象中所有的组合</span></span><br><span class="line">print(list(combinations(listB,<span class="number">2</span>))) <span class="comment"># 返回迭代对象中2元素的组合</span></span><br><span class="line">A = [<span class="number">1</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>]</span><br><span class="line">print(list(combinations(A,<span class="number">4</span>)))</span><br><span class="line">B = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">print(list(combinations(B,<span class="number">4</span>)))</span><br><span class="line"></span><br><span class="line">print(<span class="string">'--------------test-----------------------'</span>) </span><br><span class="line"></span><br><span class="line">test = <span class="string">'HACK'</span></span><br><span class="line">num = <span class="number">2</span></span><br><span class="line">print(sorted(list(permutations(test,num))))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> sorted(list(permutations(test,num))):</span><br><span class="line">    print(*i,sep=<span class="string">''</span>)</span><br><span class="line">    </span><br><span class="line">print(<span class="string">'--------------等同-----------------------'</span>)    </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> list(permutations(sorted(test),num)):</span><br><span class="line">    print(<span class="string">''</span>.join(i))</span><br></pre></td></tr></table></figure><pre><code>&lt;itertools.permutations object at 0x10edc89e8&gt;[(1, 2, 3), (1, 3, 2), (2, 1, 3), (2, 3, 1), (3, 1, 2), (3, 2, 1)][(&apos;a&apos;, &apos;b&apos;), (&apos;a&apos;, &apos;c&apos;), (&apos;a&apos;, &apos;d&apos;), (&apos;b&apos;, &apos;a&apos;), (&apos;b&apos;, &apos;c&apos;), (&apos;b&apos;, &apos;d&apos;), (&apos;c&apos;, &apos;a&apos;), (&apos;c&apos;, &apos;b&apos;), (&apos;c&apos;, &apos;d&apos;), (&apos;d&apos;, &apos;a&apos;), (&apos;d&apos;, &apos;b&apos;), (&apos;d&apos;, &apos;c&apos;)]--------------combinations---------------------[(1, 2, 3)][(&apos;a&apos;, &apos;b&apos;), (&apos;a&apos;, &apos;c&apos;), (&apos;a&apos;, &apos;d&apos;), (&apos;b&apos;, &apos;c&apos;), (&apos;b&apos;, &apos;d&apos;), (&apos;c&apos;, &apos;d&apos;)][(1, 1, 3, 3), (1, 1, 3, 3), (1, 1, 3, 3), (1, 3, 3, 3), (1, 3, 3, 3)][(1, 2, 3, 4), (1, 2, 3, 5), (1, 2, 4, 5), (1, 3, 4, 5), (2, 3, 4, 5)]--------------test-----------------------[(&apos;A&apos;, &apos;C&apos;), (&apos;A&apos;, &apos;H&apos;), (&apos;A&apos;, &apos;K&apos;), (&apos;C&apos;, &apos;A&apos;), (&apos;C&apos;, &apos;H&apos;), (&apos;C&apos;, &apos;K&apos;), (&apos;H&apos;, &apos;A&apos;), (&apos;H&apos;, &apos;C&apos;), (&apos;H&apos;, &apos;K&apos;), (&apos;K&apos;, &apos;A&apos;), (&apos;K&apos;, &apos;C&apos;), (&apos;K&apos;, &apos;H&apos;)]ACAHAKCACHCKHAHCHKKAKCKH--------------等同-----------------------ACAHAKCACHCKHAHCHKKAKCKH</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> combinations</span><br><span class="line"></span><br><span class="line">test = <span class="string">'HACK'</span></span><br><span class="line">num = <span class="number">2</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(num):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> combinations(sorted(test),i+<span class="number">1</span>):</span><br><span class="line">        print(*c,sep=<span class="string">''</span>)</span><br></pre></td></tr></table></figure><pre><code>[(&apos;A&apos;,), (&apos;C&apos;,), (&apos;H&apos;,), (&apos;K&apos;,)]ACHKACAHAKCHCKHK</code></pre><h1 id="itertools-groupby"><a href="#itertools-groupby" class="headerlink" title="itertools.groupby()"></a>itertools.groupby()</h1><p><a href="https://www.hackerrank.com/challenges/compress-the-string/problem?h_r=next-challenge&amp;h_r%5B%5D%5B%5D=next-challenge&amp;h_r%5B%5D%5B%5D=next-challenge&amp;h_v=zen&amp;h_v%5B%5D%5B%5D=zen&amp;h_v%5B%5D%5B%5D=zen" target="_blank" rel="noopener">https://www.hackerrank.com/challenges/compress-the-string/problem?h_r=next-challenge&amp;h_r%5B%5D%5B%5D=next-challenge&amp;h_r%5B%5D%5B%5D=next-challenge&amp;h_v=zen&amp;h_v%5B%5D%5B%5D=zen&amp;h_v%5B%5D%5B%5D=zen</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> groupby</span><br><span class="line"></span><br><span class="line">test = <span class="string">'1222311'</span></span><br><span class="line">print(groupby(test))</span><br></pre></td></tr></table></figure><pre><code>&lt;itertools.groupby object at 0x10ee17048&gt;</code></pre><h1 id="collections-Counter"><a href="#collections-Counter" class="headerlink" title="collections.Counter()"></a>collections.Counter()</h1><p><a href="https://www.hackerrank.com/challenges/collections-counter/problem" target="_blank" rel="noopener">https://www.hackerrank.com/challenges/collections-counter/problem</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"></span><br><span class="line">myList = [<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">6</span>]</span><br><span class="line">print(Counter(myList))</span><br><span class="line">print(Counter(myList).items())</span><br><span class="line">print(Counter(myList).keys())</span><br><span class="line">print(Counter(myList).values())</span><br></pre></td></tr></table></figure><pre><code>Counter({1: 2, 3: 2, 6: 2, 2: 1, 4: 1, 5: 1})dict_items([(1, 2), (2, 1), (3, 2), (4, 1), (5, 1), (6, 2)])dict_keys([1, 2, 3, 4, 5, 6])dict_values([2, 1, 2, 1, 1, 2])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"></span><br><span class="line">x = int(input())</span><br><span class="line">s = list(map(int,input().split()))</span><br><span class="line">n = int(input())</span><br><span class="line"></span><br><span class="line">print(Counter(s))</span><br></pre></td></tr></table></figure><pre><code>102 3 4 5 6 8 7 6 5 186Counter({5: 2, 6: 2, 2: 1, 3: 1, 4: 1, 8: 1, 7: 1, 18: 1})</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"></span><br><span class="line">s = [<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">18</span>]</span><br><span class="line">c = Counter(s)</span><br><span class="line">print(c)</span><br><span class="line">d = dict(c)</span><br><span class="line">v = [<span class="number">6</span>,<span class="number">55</span>]</span><br><span class="line">total = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">6</span>):</span><br><span class="line">    v = list(map(int,input().split()))</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> v[<span class="number">0</span>] <span class="keyword">in</span> d:</span><br><span class="line">        print(<span class="string">'Size &#123;&#125; no longer available,so no purchase'</span>.format(v[<span class="number">0</span>]))</span><br><span class="line">    <span class="keyword">elif</span> d[v[<span class="number">0</span>]]&gt;<span class="number">0</span>:</span><br><span class="line">        d[v[<span class="number">0</span>]] -= <span class="number">1</span></span><br><span class="line">        print(<span class="string">'Purchased size &#123;&#125; shoe for &#123;&#125;'</span>.format(v[<span class="number">0</span>],v[<span class="number">1</span>]))</span><br><span class="line">        total += v[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'Size &#123;&#125; no longer available,so no purchase'</span>.format(v[<span class="number">0</span>]))</span><br><span class="line">    </span><br><span class="line">print(total)</span><br></pre></td></tr></table></figure><pre><code>Counter({5: 2, 6: 2, 2: 1, 3: 1, 4: 1, 8: 1, 7: 1, 18: 1})6 55Purchased size 6 shoe for 556 45Purchased size 6 shoe for 456 55Size 6 no longer available,so no purchase4 40Purchased size 4 shoe for 4018 60Purchased size 18 shoe for 6010 50Size 10 no longer available,so no purchase200</code></pre><h1 id="Detect-Floating-Point-Number"><a href="#Detect-Floating-Point-Number" class="headerlink" title="Detect Floating Point Number"></a>Detect Floating Point Number</h1><p><a href="https://www.hackerrank.com/challenges/introduction-to-regex/editorial" target="_blank" rel="noopener">https://www.hackerrank.com/challenges/introduction-to-regex/editorial</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">test = <span class="string">'+.4'</span> </span><br><span class="line">test1 = <span class="string">'.5'</span> </span><br><span class="line">test2 = <span class="string">'-+4.5'</span></span><br><span class="line">test3 = <span class="string">'12.'</span></span><br><span class="line">test4 = <span class="string">'4.0o0'</span> </span><br><span class="line">reg = <span class="string">r'^[-+]?\d*\.\d+$'</span></span><br><span class="line">print(bool(re.search(reg,test)))</span><br><span class="line">print(bool(re.search(reg,test1)))</span><br><span class="line">print(bool(re.search(reg,test2)))</span><br><span class="line">print(bool(re.search(reg,test3)))</span><br><span class="line">print(bool(re.search(reg,test4)))</span><br></pre></td></tr></table></figure><pre><code>TrueTrueFalseFalseFalse</code></pre><h1 id="Re-split"><a href="#Re-split" class="headerlink" title="Re.split()"></a>Re.split()</h1><p><a href="https://www.hackerrank.com/challenges/re-split/problem?h_r=next-challenge&amp;h_v=zen" target="_blank" rel="noopener">https://www.hackerrank.com/challenges/re-split/problem?h_r=next-challenge&amp;h_v=zen</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">test = <span class="string">'100,000,000.000'</span></span><br><span class="line">reg = <span class="string">r'[,,\.]'</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> re.split(reg,test):</span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure><pre><code>100000000000</code></pre><h2 id="re-split"><a href="#re-split" class="headerlink" title="re.split()"></a>re.split()</h2><p>多个分隔符，复杂的分隔情况，使用re.split</p><p>原型： re.split(pattern, string, maxsplit=0)</p><p>通过正则表达式将字符串分离。如果用括号将正则表达式括起来，那么匹配的字符串也会被列入到list中返回。maxsplit是分离的次数，maxsplit=1分离一次，默认为0，不限制次数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不保留匹配项</span></span><br><span class="line">m = re.split(<span class="string">r'\d+'</span>,<span class="string">'123abc321cba'</span>)</span><br><span class="line">print(m)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保留匹配项</span></span><br><span class="line">m = re.split(<span class="string">r'(\d+)'</span>,<span class="string">'123abc321cba'</span>)</span><br><span class="line">print(m)</span><br></pre></td></tr></table></figure><pre><code>[&apos;&apos;, &apos;abc&apos;, &apos;cba&apos;][&apos;&apos;, &apos;123&apos;, &apos;abc&apos;, &apos;321&apos;, &apos;cba&apos;]</code></pre><h1 id="Group-Groups-amp-Groupdict"><a href="#Group-Groups-amp-Groupdict" class="headerlink" title="Group(), Groups() &amp; Groupdict()"></a>Group(), Groups() &amp; Groupdict()</h1><p><a href="https://www.hackerrank.com/challenges/re-group-groups/problem?h_r=next-challenge&amp;h_v=zen" target="_blank" rel="noopener">https://www.hackerrank.com/challenges/re-group-groups/problem?h_r=next-challenge&amp;h_v=zen</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">test = <span class="string">'..1234567891011213141516171820212223'</span></span><br><span class="line">reg = <span class="string">r'([0-9a-zA-Z])\1+'</span> <span class="comment">#回溯引用,表示与前面相同的字符</span></span><br><span class="line">m =re.search(reg,test)</span><br><span class="line">mport re</span><br><span class="line"></span><br><span class="line">test = <span class="string">'aaadaa'</span></span><br><span class="line">print(re.finditer(<span class="string">r'(?=('</span>++<span class="string">'))'</span>))</span><br><span class="line"><span class="keyword">if</span> m:</span><br><span class="line">    print(m.group(<span class="number">1</span>))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'-1'</span>)</span><br></pre></td></tr></table></figure><pre><code>1</code></pre><h1 id="Re-start-amp-Re-end"><a href="#Re-start-amp-Re-end" class="headerlink" title="Re.start() &amp; Re.end()"></a>Re.start() &amp; Re.end()</h1><p><a href="https://www.hackerrank.com/challenges/re-start-re-end/problem" target="_blank" rel="noopener">https://www.hackerrank.com/challenges/re-start-re-end/problem</a></p><p>match和search一旦匹配成功，就是一个match object对象，而match object对象有以下方法：<br>start() 返回匹配开始的位置,子串第一个字符的索引<br>end() 返回匹配结束的位置，子串最后一个字符的索引+1<br>span() 返回一个元组包含匹配 (开始,结束) 的位置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 匹配叠加项， pattern.match(string[, pos[, endpos]])</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">test = <span class="string">'aaadaa'</span></span><br><span class="line">pattern = re.compile(<span class="string">'aa'</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(test)):</span><br><span class="line">    p = pattern.match(test,i)</span><br><span class="line">    <span class="keyword">if</span> p:</span><br><span class="line">        print((p.start(),p.end()<span class="number">-1</span>))</span><br></pre></td></tr></table></figure><pre><code>(0, 1)(1, 2)(4, 5)</code></pre><p>第一种方法，figured it our by myself, 从每一个索引找起</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">test = input()</span><br><span class="line">pattern = re.compile(input())</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> pattern.search(test):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(test)):</span><br><span class="line">        p = pattern.match(test,i)</span><br><span class="line">        <span class="keyword">if</span> p:</span><br><span class="line">            print((p.start(),p.end()<span class="number">-1</span>))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print((<span class="number">-1</span>,<span class="number">-1</span>))</span><br></pre></td></tr></table></figure><pre><code>aaadaaaa(0, 1)(1, 2)(4, 5)</code></pre><p>第二种方法，网站提供的参考方法，从匹配到的项的开头索引下一位作为下一次查找的开头，相对第一种方法，更快捷，不需要从头查找到尾</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">test = <span class="string">'aaadaa'</span></span><br><span class="line">reg = <span class="string">'aa'</span></span><br><span class="line">patter = re.compile(reg)</span><br><span class="line">r = pattern.search(test)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> r:</span><br><span class="line">    print((<span class="number">-1</span>,<span class="number">-1</span>))</span><br><span class="line"><span class="keyword">while</span> r:</span><br><span class="line">    print(<span class="string">'(&#123;0&#125;,&#123;1&#125;)'</span>.format(r.start(),r.end()<span class="number">-1</span>))</span><br><span class="line">    r = pattern.search(test,r.start()+<span class="number">1</span>)</span><br></pre></td></tr></table></figure><pre><code>(0,1)(1,2)(4,5)</code></pre><p>第三种方法，论坛用户提供的，用了前瞻 前瞻：exp1(?=exp2) 表示exp1后面的内容要匹配exp2,返回exp1（前瞻）, finditer() 匹配aa前面,返回的Match对象中有区间span，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">test = <span class="string">'aaadaa'</span></span><br><span class="line">reg = <span class="string">'aa'</span></span><br><span class="line">m = re.finditer(<span class="string">r'(?=&#123;&#125;)'</span>.format(reg),test)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> m:</span><br><span class="line">    print((<span class="number">-1</span>,<span class="number">-1</span>))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(*[(i.start(),i.end()+<span class="number">1</span>) <span class="keyword">for</span> i <span class="keyword">in</span> m], sep=<span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure><pre><code>(0, 1)(1, 2)(4, 5)</code></pre><h2 id="finderiter-函数"><a href="#finderiter-函数" class="headerlink" title="finderiter() 函数"></a>finderiter() 函数</h2><p>返回string中所有与pattern相匹配的全部字串，返回形式为迭代器。若匹配成功，match()/search()返回的是Match对象，finditer()返回的也是Match对象的迭代器，获取匹配结果需要调用Match对象的group()、groups或group(index)方法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">test = <span class="string">'aaadaa'</span></span><br><span class="line">reg = <span class="string">'aa'</span></span><br><span class="line">m = re.finditer(<span class="string">r'(?=&#123;&#125;)'</span>.format(reg),test)</span><br><span class="line">x = re.findall(<span class="string">r'(?=&#123;&#125;)'</span>.format(reg),test)</span><br><span class="line">print(list(m))</span><br><span class="line">print(x)</span><br></pre></td></tr></table></figure><pre><code>[&lt;_sre.SRE_Match object; span=(0, 0), match=&apos;&apos;&gt;, &lt;_sre.SRE_Match object; span=(1, 1), match=&apos;&apos;&gt;, &lt;_sre.SRE_Match object; span=(4, 4), match=&apos;&apos;&gt;][&apos;&apos;, &apos;&apos;, &apos;&apos;]</code></pre><h1 id="Regex-Substitution"><a href="#Regex-Substitution" class="headerlink" title="Regex Substitution"></a>Regex Substitution</h1><p><a href="https://www.hackerrank.com/challenges/re-sub-regex-substitution/problem" target="_blank" rel="noopener">https://www.hackerrank.com/challenges/re-sub-regex-substitution/problem</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第一次尝试  部分例子失败</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">text = <span class="string">'''</span></span><br><span class="line"><span class="string">a = 1;</span></span><br><span class="line"><span class="string">b = input();</span></span><br><span class="line"><span class="string">if a + b &gt; 0 &amp;&amp; a - b &lt; 0:</span></span><br><span class="line"><span class="string">    start()</span></span><br><span class="line"><span class="string">elif a*b &gt; 10 || a/b &lt; 1:</span></span><br><span class="line"><span class="string">    stop()</span></span><br><span class="line"><span class="string">print set(list(a)) | set(list(b))</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line">pattern = <span class="string">r' &amp;&amp; | \|\| '</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">change</span><span class="params">(match)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> match.group(<span class="number">0</span>) == <span class="string">r' &amp;&amp; '</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">' and '</span></span><br><span class="line">    <span class="keyword">elif</span> match.group(<span class="number">0</span>) == <span class="string">r' || '</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">' or '</span></span><br><span class="line">print(re.sub(pattern,change,text))</span><br><span class="line">print(re.findall(pattern,text))</span><br></pre></td></tr></table></figure><pre><code>a = 1;b = input();if a + b &gt; 0 and a - b &lt; 0:    start()elif a*b &gt; 10 or a/b &lt; 1:    stop()print set(list(a)) | set(list(b))[&apos; &amp;&amp; &apos;, &apos; || &apos;]</code></pre><p>出错的地方在于：如果出现 ‘ || &amp;&amp; ‘, ‘ &amp;&amp; || ‘,’ || || ‘,’ &amp;&amp; &amp;&amp; ‘ 两个连续的字符中间只有一个空格时候，上述代码只会匹配第一个，因为两个字符中间的空格已经消耗掉了，第二个就匹配不成功</p><p>需要运用了前瞻后顾祝贺  (?&lt;=exp2)exp1(?=exp2) </p><p>exp1(?=exp2) 表示exp1后面的内容要匹配exp2,返回exp1（前瞻）</p><p>(?&lt;=exp2)exp1 表示exp1前面的内容要匹配exp2,返回exp1 （后顾）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第二次尝试 失败</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">text = <span class="string">'''</span></span><br><span class="line"><span class="string">a = 1;</span></span><br><span class="line"><span class="string">b = input();</span></span><br><span class="line"><span class="string"> || &amp;&amp;</span></span><br><span class="line"><span class="string">if a + b &gt; 0 &amp;&amp; a - b &lt; 0:</span></span><br><span class="line"><span class="string">    start()</span></span><br><span class="line"><span class="string">elif a*b &gt; 10 || a/b &lt; 1:</span></span><br><span class="line"><span class="string">    stop()</span></span><br><span class="line"><span class="string">  &amp;&amp; || </span></span><br><span class="line"><span class="string">print set(list(a)) | set(list(b))</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#Note do not change &amp;&amp;&amp; or ||| or &amp; or |</span></span><br><span class="line"><span class="string">#Only change those '&amp;&amp;' which have space on both sides.</span></span><br><span class="line"><span class="string">#Only change those '|| which have space on both sides.   </span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line">pattern = <span class="string">r'(?&lt;= )&amp;&amp;|\|\|(?= )'</span>  </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">change</span><span class="params">(match)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> match.group(<span class="number">0</span>) == <span class="string">r'&amp;&amp;'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'and'</span></span><br><span class="line">    <span class="keyword">elif</span> match.group(<span class="number">0</span>) == <span class="string">r'||'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'or'</span></span><br><span class="line">print(re.sub(pattern,change,text))</span><br><span class="line">print(re.findall(pattern,text))</span><br></pre></td></tr></table></figure><pre><code>a = 1;b = input(); or andif a + b &gt; 0 and a - b &lt; 0:    start()elif a*b &gt; 10 or a/b &lt; 1:    stop()  and or print set(list(a)) | set(list(b))#Note do not change and&amp; or |or or &amp; or |#Only change those &apos;&amp;&amp;&apos; which have space on both sides.#Only change those &apos;or which have space on both sides.   [&apos;||&apos;, &apos;&amp;&amp;&apos;, &apos;&amp;&amp;&apos;, &apos;||&apos;, &apos;&amp;&amp;&apos;, &apos;||&apos;, &apos;&amp;&amp;&apos;, &apos;||&apos;, &apos;||&apos;]</code></pre><p>出错的地方在于： 上述代码还成功匹配了’ &amp;&amp;&amp; ‘和’ ||| ‘，原因是 pattern = r’(?&lt;= )&amp;&amp;|||(?= )’  其实分成了两组，第一组 ?&lt;= )&amp;&amp; 和 第二组 ||(?= ),所以这其实可以匹配4种</p><p>‘ || ‘,’ &amp;&amp; ‘,’ &amp;&amp;’,’|| ‘ </p><p>加括号后<br>pattern = r’(?&lt;= )(&amp;&amp;|||)(?= )</p><p>第一种方法 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第三次尝试 成功</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">text = <span class="string">'''</span></span><br><span class="line"><span class="string">a = 1;</span></span><br><span class="line"><span class="string">b = input();</span></span><br><span class="line"><span class="string"> || &amp;&amp; </span></span><br><span class="line"><span class="string">if a + b &gt; 0 &amp;&amp; a - b &lt; 0:</span></span><br><span class="line"><span class="string">    start()</span></span><br><span class="line"><span class="string">elif a*b &gt; 10 || a/b &lt; 1:</span></span><br><span class="line"><span class="string">    stop()</span></span><br><span class="line"><span class="string">  &amp;&amp; || </span></span><br><span class="line"><span class="string">print set(list(a)) | set(list(b))</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#Note do not change &amp;&amp;&amp; or ||| or &amp; or |</span></span><br><span class="line"><span class="string">#Only change those '&amp;&amp;' which have space on both sides.</span></span><br><span class="line"><span class="string">#Only change those '|| which have space on both sides.   </span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line">pattern = <span class="string">r'(?&lt;= )(&amp;&amp;|\|\|)(?= )'</span>  </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">change</span><span class="params">(match)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> match.group(<span class="number">0</span>) == <span class="string">r'&amp;&amp;'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'and'</span></span><br><span class="line">    <span class="keyword">elif</span> match.group(<span class="number">0</span>) == <span class="string">r'||'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'or'</span></span><br><span class="line">print(re.sub(pattern,change,text))</span><br><span class="line">print(re.findall(pattern,text))</span><br></pre></td></tr></table></figure><pre><code>a = 1;b = input(); or and if a + b &gt; 0 and a - b &lt; 0:    start()elif a*b &gt; 10 or a/b &lt; 1:    stop()  and or print set(list(a)) | set(list(b))#Note do not change &amp;&amp;&amp; or ||| or &amp; or |#Only change those &apos;&amp;&amp;&apos; which have space on both sides.#Only change those &apos;|| which have space on both sides.   [&apos;||&apos;, &apos;&amp;&amp;&apos;, &apos;&amp;&amp;&apos;, &apos;||&apos;, &apos;&amp;&amp;&apos;, &apos;||&apos;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">第二种方法 第一种方法简化 用匿名函数替换 change 函数</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">text = <span class="string">'''</span></span><br><span class="line"><span class="string">a = 1;</span></span><br><span class="line"><span class="string">b = input();</span></span><br><span class="line"><span class="string"> || &amp;&amp; </span></span><br><span class="line"><span class="string">if a + b &gt; 0 &amp;&amp; a - b &lt; 0:</span></span><br><span class="line"><span class="string">    start()</span></span><br><span class="line"><span class="string">elif a*b &gt; 10 || a/b &lt; 1:</span></span><br><span class="line"><span class="string">    stop()</span></span><br><span class="line"><span class="string">  &amp;&amp; || </span></span><br><span class="line"><span class="string">print set(list(a)) | set(list(b))</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#Note do not change &amp;&amp;&amp; or ||| or &amp; or |</span></span><br><span class="line"><span class="string">#Only change those '&amp;&amp;' which have space on both sides.</span></span><br><span class="line"><span class="string">#Only change those '|| which have space on both sides.   </span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line">pattern = <span class="string">r'(?&lt;= )(&amp;&amp;|\|\|)(?= )'</span>  </span><br><span class="line"></span><br><span class="line">print(re.sub(pattern,<span class="keyword">lambda</span> m: <span class="string">'and'</span> <span class="keyword">if</span> m.group(<span class="number">0</span>) == <span class="string">'&amp;&amp;'</span> <span class="keyword">else</span> <span class="string">'or'</span> ,text))</span><br></pre></td></tr></table></figure><pre><code>a = 1;b = input(); or and if a + b &gt; 0 and a - b &lt; 0:    start()elif a*b &gt; 10 or a/b &lt; 1:    stop()  and or print set(list(a)) | set(list(b))#Note do not change &amp;&amp;&amp; or ||| or &amp; or |#Only change those &apos;&amp;&amp;&apos; which have space on both sides.#Only change those &apos;|| which have space on both sides.   </code></pre><p>第三种方法 参考方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">text = <span class="string">'''</span></span><br><span class="line"><span class="string">a = 1;</span></span><br><span class="line"><span class="string">b = input();</span></span><br><span class="line"><span class="string"> || &amp;&amp; </span></span><br><span class="line"><span class="string">if a + b &gt; 0 &amp;&amp; a - b &lt; 0:</span></span><br><span class="line"><span class="string">    start()</span></span><br><span class="line"><span class="string">elif a*b &gt; 10 || a/b &lt; 1:</span></span><br><span class="line"><span class="string">    stop()</span></span><br><span class="line"><span class="string">  &amp;&amp; || </span></span><br><span class="line"><span class="string">print set(list(a)) | set(list(b))</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#Note do not change &amp;&amp;&amp; or ||| or &amp; or |</span></span><br><span class="line"><span class="string">#Only change those '&amp;&amp;' which have space on both sides.</span></span><br><span class="line"><span class="string">#Only change those '|| which have space on both sides.   </span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line">text = re.sub(<span class="string">r'(?&lt;= )&amp;&amp;(?= )'</span>,<span class="string">'and'</span>,text)</span><br><span class="line">text = re.sub(<span class="string">r'(?&lt;= )\|\|(?= )'</span>,<span class="string">'or'</span>,text)</span><br><span class="line">print(text)</span><br></pre></td></tr></table></figure><pre><code>a = 1;b = input(); or and if a + b &gt; 0 and a - b &lt; 0:    start()elif a*b &gt; 10 or a/b &lt; 1:    stop()  and or print set(list(a)) | set(list(b))#Note do not change &amp;&amp;&amp; or ||| or &amp; or |#Only change those &apos;&amp;&amp;&apos; which have space on both sides.#Only change those &apos;|| which have space on both sides.   </code></pre><h2 id="re-sub"><a href="#re-sub" class="headerlink" title="re.sub()"></a>re.sub()</h2><p>re.sub(pattern, repl, string, count=0, flags=0)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">test = <span class="string">'hello James, nihao James'</span></span><br><span class="line">replacedtest = re.sub(<span class="string">r'hello (\w+), nihao \1'</span>,<span class="string">'Jamie'</span>,test) <span class="comment"># 匹配到整个字符串，并用Jamie替换掉整个字符串</span></span><br><span class="line">print(replacedtest)</span><br><span class="line"></span><br><span class="line">retest= re.sub(<span class="string">r'hello (\w+), nihao \1'</span>,<span class="string">r'\1'</span>,test) <span class="comment"># 匹配到整个字符串，并用组1替换掉整个字符串</span></span><br><span class="line">print(retest)</span><br></pre></td></tr></table></figure><pre><code>JamieJames</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">s = <span class="string">'hello world ! hello hz !'</span></span><br><span class="line">print(re.findall(<span class="string">r'(\w+) (\w+)'</span>,s)) <span class="comment"># 可以看到匹配到2了项</span></span><br><span class="line">r = re.sub(<span class="string">r'(\w+) (\w+)'</span>,<span class="string">r'\2 \1'</span>,s) <span class="comment"># 每项中的2组位置互换</span></span><br><span class="line">print(r)</span><br></pre></td></tr></table></figure><pre><code>[(&apos;hello&apos;, &apos;world&apos;), (&apos;hello&apos;, &apos;hz&apos;)]world hello ! hz hello !</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">s = <span class="string">'Hello, *world*!'</span></span><br><span class="line">s1 = <span class="string">'Hello, *world* *good* !'</span></span><br><span class="line">pattern = <span class="string">r'\*([^\*]+)\*'</span></span><br><span class="line">print(re.search(pattern,s).group(<span class="number">1</span>)) <span class="comment"># 匹配项中的组1</span></span><br><span class="line">print(re.sub(pattern,<span class="string">r'&lt;em&gt;\1&lt;／em&gt;'</span>,s)) </span><br><span class="line"></span><br><span class="line">print(re.findall(pattern,s1))</span><br><span class="line">print(re.sub(pattern,<span class="string">r'&lt;em&gt;\1&lt;／em&gt;'</span>,s1)) <span class="comment"># 匹配到两项，每项的组1替换匹配项</span></span><br></pre></td></tr></table></figure><pre><code>worldHello, &lt;em&gt;world&lt;／em&gt;![&apos;world&apos;, &apos;good&apos;]Hello, &lt;em&gt;world&lt;／em&gt; &lt;em&gt;good&lt;／em&gt; !</code></pre><h1 id="Validating-Roman-Numerals"><a href="#Validating-Roman-Numerals" class="headerlink" title="Validating Roman Numerals"></a>Validating Roman Numerals</h1><p><a href="https://www.hackerrank.com/challenges/validate-a-roman-number/problem" target="_blank" rel="noopener">https://www.hackerrank.com/challenges/validate-a-roman-number/problem</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">test = <span class="string">'CDXXI'</span></span><br><span class="line">pattern = <span class="string">r'^M&#123;0,3&#125;(CD|CM|D?C&#123;0,3&#125;)(XL|XC|L?X&#123;0,3&#125;)(IV|IX|V?I&#123;0,3&#125;)$'</span></span><br><span class="line">print(re.match(pattern,test))</span><br></pre></td></tr></table></figure><pre><code>&lt;_sre.SRE_Match object; span=(0, 5), match=&apos;CDXXI&apos;&gt;</code></pre><p>分解</p><p>^M{0,4}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})$</p><p>M{0,4}</p><p>This specifies the thousands section and basically restrains it to between 0 and 4000. It’s a relatively simple:</p><p>   0: <empty>  matched by M{0}</empty></p><p>1000: M        matched by M{1}</p><p>2000: MM       matched by M{2}</p><p>3000: MMM      matched by M{3}</p><p>4000: MMMM     matched by M{4}</p><p>(CM|CD|D?C{0,3})</p><p>Slightly more complex, this is for the hundreds section and covers all the possibilities:</p><p>  0: <empty>  matched by D?C{0} (with D not there)</empty></p><p>100: C        matched by D?C{1} (with D not there)</p><p>200: CC       matched by D?C{2} (with D not there)</p><p>300: CCC      matched by D?C{3} (with D not there)</p><p>400: CD       matched by CD</p><p>500: D        matched by D?C{0} (with D there)</p><p>600: DC       matched by D?C{1} (with D there)</p><p>700: DCC      matched by D?C{2} (with D there)</p><p>800: DCCC     matched by D?C{3} (with D there)</p><p>900: CM       matched by CM</p><p>(XC|XL|L?X{0,3})</p><p>Same rules as previous section but for the tens place:</p><p>0: <empty>  matched by L?X{0} (with L not there)</empty></p><p>10: X        matched by L?X{1} (with L not there)</p><p>20: XX       matched by L?X{2} (with L not there)</p><p>30: XXX      matched by L?X{3} (with L not there)</p><p>40: XL       matched by XL</p><p>50: L        matched by L?X{0} (with L there)</p><p>60: LX       matched by L?X{1} (with L there)</p><p>70: LXX      matched by L?X{2} (with L there)</p><p>80: LXXX     matched by L?X{3} (with L there)</p><p>90: XC       matched by XC</p><p>(IX|IV|V?I{0,3})</p><p>This is the units section, handling 0 through 9 and also similar to the previous two sections (Roman numerals, despite their seeming weirdness, follow some logical rules once you figure out what they are):</p><p>0: <empty>  matched by V?I{0} (with V not there)</empty></p><p>1: I        matched by V?I{1} (with V not there)</p><p>2: II       matched by V?I{2} (with V not there)</p><p>3: III      matched by V?I{3} (with V not there)</p><p>4: IV       matched by IV</p><p>5: V        matched by V?I{0} (with V there)</p><p>6: VI       matched by V?I{1} (with V there)</p><p>7: VII      matched by V?I{2} (with V there)</p><p>8: VIII     matched by V?I{3} (with V there)</p><p>9: IX       matched by IX</p><h1 id="Validating-and-Parsing-Email-Addresses"><a href="#Validating-and-Parsing-Email-Addresses" class="headerlink" title="Validating and Parsing Email Addresses"></a>Validating and Parsing Email Addresses</h1><p><a href="https://www.hackerrank.com/challenges/validating-named-email-addresses/problem?h_r=next-challenge&amp;h_v=zen" target="_blank" rel="noopener">https://www.hackerrank.com/challenges/validating-named-email-addresses/problem?h_r=next-challenge&amp;h_v=zen</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> email.utils,re</span><br><span class="line"></span><br><span class="line">e = <span class="string">'DEXTER &lt;dexter@hotmail.com&gt;'</span></span><br><span class="line">pattern = <span class="string">r'^[A-Za-z]+[A-Za-z0-9-\._]+@[A-Za-z]+\.[A-Za-z]&#123;1,3&#125;$'</span></span><br><span class="line">v = email.utils.parseaddr(e)</span><br><span class="line"><span class="keyword">if</span> re.search(pattern,v[<span class="number">-1</span>]):</span><br><span class="line">    print(e)</span><br></pre></td></tr></table></figure><pre><code>DOSHI@hackerrank.com</code></pre><p>参考答案提供的正则表达式</p><p>^[a-zA-Z][\w-.]*@[A-Za-z]+.[a-zA-Z]{1,3}$ </p><p>对比自己写的正则</p><p>^[A-Za-z]+[A-Za-z0-9-._]+@[A-Za-z]+.[A-Za-z]{1,3}$</p><p>\w        等同于[a-z0-9A-Z_]匹配大小写字母、数字和下划线</p><p>* 匹配前面的字符0次或多次（&gt;=0）</p><h1 id="Hex-Color-Code"><a href="#Hex-Color-Code" class="headerlink" title="Hex Color Code"></a>Hex Color Code</h1><p><a href="https://www.hackerrank.com/challenges/hex-color-code/problem?h_r%5B%5D=next-challenge&amp;h_r%5B%5D=next-challenge&amp;h_v%5B%5D=zen&amp;h_v%5B%5D=zen" target="_blank" rel="noopener">https://www.hackerrank.com/challenges/hex-color-code/problem?h_r%5B%5D=next-challenge&amp;h_r%5B%5D=next-challenge&amp;h_v%5B%5D=zen&amp;h_v%5B%5D=zen</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第一种方法</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">pattern = <span class="string">r'.+?(#[0-9A-Fa-f]&#123;6&#125;|#[0-9A-Fa-f]&#123;3&#125;)'</span></span><br><span class="line">    </span><br><span class="line">txt =<span class="string">'''</span></span><br><span class="line"><span class="string">#BED</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    color: #FfFdF8; background-color:#aef;</span></span><br><span class="line"><span class="string">    font-size: 123px;</span></span><br><span class="line"><span class="string">    background: -webkit-linear-gradient(top, #f9f9f9, #fff);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">#Cab</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    background-color: #ABC;</span></span><br><span class="line"><span class="string">    border: 2px dashed #fff;</span></span><br><span class="line"><span class="string">&#125;   </span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">print(re.findall(pattern,txt))</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">css = []</span><br><span class="line">css.extend(re.findall(pattern,txt))</span><br><span class="line">print(*css,sep=<span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure><pre><code>NoneNoneNoneNoneNoneNone[&apos;#FfFdF8&apos;, &apos;#aef&apos;, &apos;#f9f9f9&apos;, &apos;#fff&apos;, &apos;#ABC&apos;, &apos;#fff&apos;]#FfFdF8#aef#f9f9f9#fff#ABC#fff</code></pre><p>对比自己写的</p><p>.+?(#[0-9A-Fa-f]{6}|#[0-9A-Fa-f]{3})</p><p>论坛用户提供的正则表达式</p><p>(?&lt;!^)(#(?:[\da-fA-F]{3}){1,2})</p><p>(?&lt;!exp2)exp1 表示exp1前面的内容不能匹配exp2,返回exp1 （负后顾）</p><p>(?&lt;!^) 不从开头匹配</p><p>(?:) 不作为分组</p><p>([\da-fA-F]{3}){1,2} 表示 [\da-fA-F]{3}或 [\da-fA-F]{6}</p><p>用户提供的另一种正则</p><p>[\s:](#[a-fA-F0-9]{6}|#[a-fA-F0-9]{3})</p><p>[\s:] 匹配空格或冒号</p><h1 id="HTML-Parser-Part-1"><a href="#HTML-Parser-Part-1" class="headerlink" title="HTML Parser - Part 1"></a>HTML Parser - Part 1</h1><p><a href="https://www.hackerrank.com/challenges/html-parser-part-1/problem?h_r=next-challenge&amp;h_r%5B%5D%5B%5D=next-challenge&amp;h_r%5B%5D%5B%5D=next-challenge&amp;h_v=zen&amp;h_v%5B%5D%5B%5D=zen&amp;h_v%5B%5D%5B%5D=zen" target="_blank" rel="noopener">https://www.hackerrank.com/challenges/html-parser-part-1/problem?h_r=next-challenge&amp;h_r%5B%5D%5B%5D=next-challenge&amp;h_r%5B%5D%5B%5D=next-challenge&amp;h_v=zen&amp;h_v%5B%5D%5B%5D=zen&amp;h_v%5B%5D%5B%5D=zen</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> html.parser <span class="keyword">import</span> HTMLParser</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHTMLParser</span><span class="params">(HTMLParser)</span>:</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_starttag</span><span class="params">(self,tag,attrs)</span>:</span></span><br><span class="line">        print(<span class="string">'Start : &#123;&#125;'</span>.format(tag))</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> attrs:</span><br><span class="line">            print(<span class="string">'-&gt; &#123;&#125; &gt; &#123;&#125;'</span>.format(i[<span class="number">0</span>],i[<span class="number">1</span>]))</span><br><span class="line">            </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_endtag</span><span class="params">(self,tag)</span>:</span></span><br><span class="line">        print(<span class="string">'End   : &#123;&#125;'</span>.format(tag))</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_startendtag</span><span class="params">(self,tag,attrs)</span>:</span></span><br><span class="line">        print(<span class="string">'Empty : &#123;&#125;'</span>.format(tag))</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> attrs:</span><br><span class="line">            print(<span class="string">'-&gt; &#123;&#125; &gt; &#123;&#125;'</span>.format(i[<span class="number">0</span>],i[<span class="number">1</span>]))</span><br><span class="line"></span><br><span class="line">code = <span class="string">'\n'</span>.join(input() <span class="keyword">for</span> i <span class="keyword">in</span> range(int(input())))</span><br><span class="line">newcode = re.sub(<span class="string">r'&lt;!--.*?--&gt;'</span>,<span class="string">''</span>,code)</span><br><span class="line">parser = MyHTMLParser()</span><br><span class="line">parser.feed(newcode)</span><br></pre></td></tr></table></figure><pre><code>Start : htmlStart : headStart : titleStart : body-&gt; data-modal-target &gt; None-&gt; class &gt; 1Start : h1Start : br</code></pre><h1 id="HTML-Parser-Part-2"><a href="#HTML-Parser-Part-2" class="headerlink" title="HTML Parser - Part 2"></a>HTML Parser - Part 2</h1><p><a href="https://www.hackerrank.com/challenges/html-parser-part-2/problem?h_r=next-challenge&amp;h_r%5B%5D%5B%5D%5B%5D=next-challenge&amp;h_r%5B%5D%5B%5D%5B%5D=next-challenge&amp;h_v=zen&amp;h_v%5B%5D%5B%5D%5B%5D=zen&amp;h_v%5B%5D%5B%5D%5B%5D=zen" target="_blank" rel="noopener">https://www.hackerrank.com/challenges/html-parser-part-2/problem?h_r=next-challenge&amp;h_r%5B%5D%5B%5D%5B%5D=next-challenge&amp;h_r%5B%5D%5B%5D%5B%5D=next-challenge&amp;h_v=zen&amp;h_v%5B%5D%5B%5D%5B%5D=zen&amp;h_v%5B%5D%5B%5D%5B%5D=zen</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> html.parser <span class="keyword">import</span> HTMLParser</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHTMLParser</span><span class="params">(HTMLParser)</span>:</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_comment</span><span class="params">(self,data)</span>:</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> <span class="string">'\n'</span> <span class="keyword">in</span> data:</span><br><span class="line">            print(<span class="string">'&gt;&gt;&gt; Multi-line Comment\n&#123;&#125;'</span>.format(data))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'&gt;&gt;&gt; Single-line Comment\n&#123;&#125;'</span>.format(data))</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_data</span><span class="params">(self,data)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> data != <span class="string">'\n'</span>:</span><br><span class="line">            print(<span class="string">'&gt;&gt;&gt; Data\n&#123;&#125;'</span>.format(data))</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">text=<span class="string">'''&lt;!--[if IE 9]&gt;IE9-specific content\n&lt;![endif]--&gt;\n&lt;div&gt; Welcome to HackerRank&lt;/div&gt;\n&lt;!--[if IE 9]&gt;IE9-specific content&lt;![endif]--&gt;'''</span></span><br><span class="line"></span><br><span class="line">paser = MyHTMLParser()</span><br><span class="line">paser.feed(text)</span><br></pre></td></tr></table></figure><pre><code>&gt;&gt;&gt; Multi-line Comment[if IE 9]&gt;IE9-specific content&lt;![endif]&gt;&gt;&gt; Data Welcome to HackerRank&gt;&gt;&gt; Single-line Comment[if IE 9]&gt;IE9-specific content&lt;![endif]</code></pre><p>第一次尝试用了正则 </p><p><code>reg = r&#39; &lt;!--.*?&gt;.*&gt;/n.*?&lt;!.*?--&gt; &#39;</code></p><p>re.search(reg,data) 匹配不成功</p><p>但是却可以成功匹配到原文text</p><p>原因是data是tag之间的内容，去掉标签了，所以匹配不到</p><h1 id="Detect-HTML-Tags-Attributes-and-Attribute-Values"><a href="#Detect-HTML-Tags-Attributes-and-Attribute-Values" class="headerlink" title="Detect HTML Tags, Attributes and Attribute Values"></a>Detect HTML Tags, Attributes and Attribute Values</h1><p><a href="https://www.hackerrank.com/challenges/detect-html-tags-attributes-and-attribute-values/problem?h_r=next-challenge&amp;h_r%5B%5D%5B%5D%5B%5D=next-challenge&amp;h_r%5B%5D%5B%5D%5B%5D=next-challenge&amp;h_v=zen&amp;h_v%5B%5D%5B%5D%5B%5D=zen&amp;h_v%5B%5D%5B%5D%5B%5D=zen&amp;h_r=next-challenge&amp;h_v=zen" target="_blank" rel="noopener">https://www.hackerrank.com/challenges/detect-html-tags-attributes-and-attribute-values/problem?h_r=next-challenge&amp;h_r%5B%5D%5B%5D%5B%5D=next-challenge&amp;h_r%5B%5D%5B%5D%5B%5D=next-challenge&amp;h_v=zen&amp;h_v%5B%5D%5B%5D%5B%5D=zen&amp;h_v%5B%5D%5B%5D%5B%5D=zen&amp;h_r=next-challenge&amp;h_v=zen</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> html.parser <span class="keyword">import</span> HTMLParser</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHTMLParser</span><span class="params">(HTMLParser)</span>:</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_starttag</span><span class="params">(self,tag,attrs)</span>:</span></span><br><span class="line">        print(tag)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> attrs:</span><br><span class="line">            print(<span class="string">'-&gt; &#123;&#125; &gt; &#123;&#125;'</span>.format(i[<span class="number">0</span>],i[<span class="number">1</span>]))</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">code=<span class="string">'''&lt;head&gt;</span></span><br><span class="line"><span class="string">&lt;title&gt;HTML&lt;/title&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;object type="application/x-flash" </span></span><br><span class="line"><span class="string">  data="your-file.swf" </span></span><br><span class="line"><span class="string">  width="0" height="0"&gt;</span></span><br><span class="line"><span class="string">  &lt;!-- &lt;param name="movie" value="your-file.swf" /&gt; --&gt;</span></span><br><span class="line"><span class="string">  &lt;param name="quality" value="high"/&gt;</span></span><br><span class="line"><span class="string">&lt;/object&gt;'''</span></span><br><span class="line">newcode = re.sub(<span class="string">r'&lt;!--.*?--&gt;'</span>,<span class="string">''</span>,code)</span><br><span class="line">parser = MyHTMLParser()</span><br><span class="line">parser.feed(newcode)</span><br></pre></td></tr></table></figure><pre><code>headtitleobject-&gt; type &gt; application/x-flash-&gt; data &gt; your-file.swf-&gt; width &gt; 0-&gt; height &gt; 0param-&gt; name &gt; quality-&gt; value &gt; high</code></pre><h1 id="Validating-UID"><a href="#Validating-UID" class="headerlink" title="Validating UID"></a>Validating UID</h1><p><a href="https://www.hackerrank.com/challenges/validating-uid/problem?h_r%5B%5D=next-challenge&amp;h_r%5B%5D=next-challenge&amp;h_r%5B%5D=next-challenge&amp;h_r%5B%5D%5B%5D%5B%5D%5B%5D=next-challenge&amp;h_r%5B%5D%5B%5D%5B%5D%5B%5D=next-challenge&amp;h_v%5B%5D=zen&amp;h_v%5B%5D=zen&amp;h_v%5B%5D=zen&amp;h_v%5B%5D%5B%5D%5B%5D%5B%5D=zen&amp;h_v%5B%5D%5B%5D%5B%5D%5B%5D=zen" target="_blank" rel="noopener">https://www.hackerrank.com/challenges/validating-uid/problem?h_r%5B%5D=next-challenge&amp;h_r%5B%5D=next-challenge&amp;h_r%5B%5D=next-challenge&amp;h_r%5B%5D%5B%5D%5B%5D%5B%5D=next-challenge&amp;h_r%5B%5D%5B%5D%5B%5D%5B%5D=next-challenge&amp;h_v%5B%5D=zen&amp;h_v%5B%5D=zen&amp;h_v%5B%5D=zen&amp;h_v%5B%5D%5B%5D%5B%5D%5B%5D=zen&amp;h_v%5B%5D%5B%5D%5B%5D%5B%5D=zen</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第一种方法 自己写的</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">uid = <span class="string">'B1CD102354'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check_UID</span><span class="params">(UID)</span>:</span></span><br><span class="line">    reg = <span class="string">r'[a-zA-Z0-9]&#123;10&#125;'</span></span><br><span class="line">    upper = <span class="number">0</span></span><br><span class="line">    digits = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> uid:</span><br><span class="line">        <span class="keyword">if</span> i.isupper(): </span><br><span class="line">            upper += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> i.isdigit():</span><br><span class="line">            digits += <span class="number">1</span></span><br><span class="line">            </span><br><span class="line">    <span class="keyword">if</span> (upper&gt;=<span class="number">2</span>) <span class="keyword">and</span> (digits&gt;=<span class="number">3</span>) <span class="keyword">and</span> bool(re.search(reg,uid)) <span class="keyword">and</span> len(set(uid)) == <span class="number">10</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'Valid'</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'Invalid'</span></span><br><span class="line">    </span><br><span class="line">check_UID(uid)</span><br></pre></td></tr></table></figure><pre><code>&apos;Valid&apos;</code></pre><p><strong>思路：</strong></p><p><code>str.isupper()，str.isdigit()</code> 计算大写字母和数字的个数，并判断</p><p><code>len(set(uid)) == 10</code> 用set()去掉重复字符，用len()判断长度</p><p><code>bool(re.search(r&#39;[a-zA-Z0-9]{10}&#39;,uid))</code> 判断是否由字母数字组成</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第二种方法 官方参考答案</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">N = <span class="string">'B1CD102354'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> N.isalnum() <span class="keyword">and</span> len(N) == <span class="number">10</span>:</span><br><span class="line">    <span class="keyword">if</span> bool(re.search(<span class="string">r'(.*[A-Z])&#123;2,&#125;'</span>,N)) <span class="keyword">and</span> bool(re.search(<span class="string">r'(.*[0-9])&#123;3,&#125;'</span>,N)):</span><br><span class="line">        <span class="keyword">if</span> re.search(<span class="string">r'.*(.).*\1+.*'</span>,N):</span><br><span class="line">            print(<span class="string">'Invalid'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'Valid'</span>)   </span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'Invalid'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">     print(<span class="string">'Invalid'</span>)</span><br></pre></td></tr></table></figure><pre><code>Invalid</code></pre><p><strong>知识点</strong></p><p>str.isalnum() 检测字符串是否由字母和数字组成。</p><p>str.islower() 检测字符串是否由小写字母组成。</p><p>str.isupper() 检测字符串中所有的字母是否都为大写。</p><p>str.isdigit() 检测字符串是否只由数字组成。</p><p>str.isalpha() 检测字符串是否只由字母组成。</p><p>str.isspace() 检测字符串是否只由空格组成。</p><p>str.istitle() 检测字符串中所有的单词拼写首字母是否为大写，且其他字母为小写。</p><p><strong>思路</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">uid = <span class="string">'B7D1D02354'</span></span><br><span class="line">reg = <span class="string">r'(.*?[A-Z])'</span></span><br><span class="line">print(re.findall(reg,uid))</span><br><span class="line">reg = <span class="string">r'(.*?[A-Z])&#123;2,&#125;'</span></span><br><span class="line">print(re.search(reg,uid).group())</span><br><span class="line">reg = <span class="string">r'(?:.*?[A-Z])&#123;2,&#125;'</span></span><br><span class="line">print(re.findall(reg,uid))</span><br></pre></td></tr></table></figure><pre><code>[&apos;B&apos;, &apos;7D&apos;, &apos;1D&apos;]B7D1D[&apos;B7D1D&apos;]</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Print-Function&quot;&gt;&lt;a href=&quot;#Print-Function&quot; class=&quot;headerlink&quot; title=&quot;Print Function&quot;&gt;&lt;/a&gt;Print Function&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://www.hackerrank.com/challenges/python-print/problem&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.hackerrank.com/challenges/python-print/problem&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;打印出123…N 之间的整数&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;girk&quot;&gt;方法一&lt;/span&gt; 用 for 循环依次打印出&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;n = &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,n+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(i,end=&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;123
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;span class=&quot;girk&quot;&gt;方法二&lt;/span&gt; 用 print 内置函数的参数&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;n=&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(*range(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, n+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;), sep=&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;123
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Challenges" scheme="http://yoursite.com/categories/Challenges/"/>
    
    
      <category term="Hackerrank" scheme="http://yoursite.com/tags/Hackerrank/"/>
    
  </entry>
  
  <entry>
    <title>How to filter in list,set and dict</title>
    <link href="http://yoursite.com/2018/05/07/filter_in_list_dict_set/"/>
    <id>http://yoursite.com/2018/05/07/filter_in_list_dict_set/</id>
    <published>2018-05-06T16:00:00.000Z</published>
    <updated>2018-05-07T08:46:14.463Z</updated>
    
    <content type="html"><![CDATA[<h2 id="过滤掉列表中的负数【列表的三种方法】"><a href="#过滤掉列表中的负数【列表的三种方法】" class="headerlink" title="过滤掉列表中的负数【列表的三种方法】"></a>过滤掉列表中的负数【列表的三种方法】</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#用列表生成式建立一个10到-10之间随机列表</span></span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line">data = [randint(<span class="number">-10</span>,<span class="number">10</span>) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>)]</span><br><span class="line">print(data)</span><br><span class="line"></span><br><span class="line">&lt;!-- more --&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#方法一：for 循环</span></span><br><span class="line">c = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">    <span class="keyword">if</span> i &gt; <span class="number">0</span>:</span><br><span class="line">        c.append(i)</span><br><span class="line">print(c)</span><br><span class="line"></span><br><span class="line"><span class="comment">#方法二：列表解析</span></span><br><span class="line">d = [i <span class="keyword">for</span> i <span class="keyword">in</span> data <span class="keyword">if</span> i &gt; <span class="number">0</span>]</span><br><span class="line">print(d)</span><br><span class="line"></span><br><span class="line"><span class="comment">#方法三：filter 函数</span></span><br><span class="line">f = filter(<span class="keyword">lambda</span> x:x &gt; <span class="number">0</span>,data)</span><br><span class="line">print(list(f))</span><br></pre></td></tr></table></figure><pre><code>[-6, 0, 4, -6, -7, 2, 9, -10, 2, 4][4, 2, 9, 2, 4][4, 2, 9, 2, 4][4, 2, 9, 2, 4]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#用字典生成式建立一个20人的字典</span></span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line">p = &#123;i:randint(<span class="number">60</span>,<span class="number">100</span>) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">21</span>)&#125;</span><br><span class="line">print(p)</span><br><span class="line">p =&#123;<span class="number">1</span>: <span class="number">88</span>, <span class="number">2</span>: <span class="number">80</span>, <span class="number">3</span>: <span class="number">76</span>, <span class="number">4</span>: <span class="number">92</span>, <span class="number">5</span>: <span class="number">88</span>, <span class="number">6</span>: <span class="number">93</span>, <span class="number">7</span>: <span class="number">91</span>, <span class="number">8</span>: <span class="number">100</span>, <span class="number">9</span>: <span class="number">60</span>, <span class="number">10</span>: <span class="number">68</span>, <span class="number">11</span>: <span class="number">85</span>, <span class="number">12</span>: <span class="number">95</span>, <span class="number">13</span>: <span class="number">73</span>, <span class="number">14</span>: <span class="number">77</span>, <span class="number">15</span>: <span class="number">65</span>, <span class="number">16</span>: <span class="number">82</span>, <span class="number">17</span>: <span class="number">67</span>, <span class="number">18</span>: <span class="number">87</span>, <span class="number">19</span>: <span class="number">89</span>, <span class="number">20</span>: <span class="number">92</span>&#125;</span><br><span class="line"><span class="comment">#筛出字典中值高于90的项</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#方法一：for 循环</span></span><br><span class="line">h = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> k,v <span class="keyword">in</span> p.items():</span><br><span class="line">    <span class="keyword">if</span> v &gt; <span class="number">90</span>:</span><br><span class="line">        h[k] = p[k]</span><br><span class="line">print(h)</span><br><span class="line"></span><br><span class="line"><span class="comment">#方法二：字典解析</span></span><br><span class="line"></span><br><span class="line">g = &#123;k:v <span class="keyword">for</span> k,v <span class="keyword">in</span> p.items() <span class="keyword">if</span> v&gt;<span class="number">90</span>&#125;</span><br><span class="line">print(g)</span><br></pre></td></tr></table></figure><pre><code>{1: 85, 2: 93, 3: 60, 4: 65, 5: 97, 6: 83, 7: 79, 8: 61, 9: 80, 10: 69, 11: 95, 12: 98, 13: 91, 14: 94, 15: 64, 16: 60, 17: 85, 18: 95, 19: 64, 20: 60}{4: 92, 6: 93, 7: 91, 8: 100, 12: 95, 20: 92}{4: 92, 6: 93, 7: 91, 8: 100, 12: 95, 20: 92}</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#用列表生成式建立一个10个数的集合</span></span><br><span class="line">s = set([randint(<span class="number">-10</span>,<span class="number">10</span>) <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>)])</span><br><span class="line">print(s)</span><br><span class="line"></span><br><span class="line"><span class="comment">#筛出集合中能被3整除的元素</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#方法一：for 循环</span></span><br><span class="line">n = set()<span class="comment">#创建空集合</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">    <span class="keyword">if</span> i%<span class="number">3</span> == <span class="number">0</span>:</span><br><span class="line">       n.add(i)</span><br><span class="line">print(n)</span><br><span class="line"></span><br><span class="line"><span class="comment">#方法二：列表解析</span></span><br><span class="line">w = set([i <span class="keyword">for</span> i <span class="keyword">in</span> s <span class="keyword">if</span> i%<span class="number">3</span> == <span class="number">0</span>])</span><br><span class="line">w1 = &#123;i <span class="keyword">for</span> i <span class="keyword">in</span> s <span class="keyword">if</span> i%<span class="number">3</span> == <span class="number">0</span>&#125;<span class="comment">#和字典解析的区别在于前面没有冒号</span></span><br><span class="line">print(w)</span><br><span class="line">print(w1)</span><br></pre></td></tr></table></figure><pre><code>{2, 6, 9, -8, -7, -3, -1}{9, -3, 6}{9, -3, 6}{9, -3, 6}</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;过滤掉列表中的负数【列表的三种方法】&quot;&gt;&lt;a href=&quot;#过滤掉列表中的负数【列表的三种方法】&quot; class=&quot;headerlink&quot; title=&quot;过滤掉列表中的负数【列表的三种方法】&quot;&gt;&lt;/a&gt;过滤掉列表中的负数【列表的三种方法】&lt;/h2&gt;&lt;figure c
      
    
    </summary>
    
      <category term="Skills" scheme="http://yoursite.com/categories/Skills/"/>
    
    
      <category term="filter" scheme="http://yoursite.com/tags/filter/"/>
    
  </entry>
  
  <entry>
    <title>How to get frequency of elements in list</title>
    <link href="http://yoursite.com/2018/05/07/frequency_in_list/"/>
    <id>http://yoursite.com/2018/05/07/frequency_in_list/</id>
    <published>2018-05-06T16:00:00.000Z</published>
    <updated>2018-05-07T08:46:40.407Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建一个随机序列</span></span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line">data = [randint(<span class="number">0</span>,<span class="number">10</span>) <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">20</span>)]</span><br><span class="line">data</span><br></pre></td></tr></table></figure><a id="more"></a><pre><code>[2, 4, 7, 9, 0, 3, 9, 1, 5, 5, 3, 1, 6, 4, 2, 2, 3, 10, 9, 10]</code></pre><h2 id="方法一：统计出现频率-并筛选出现最多的3个元素"><a href="#方法一：统计出现频率-并筛选出现最多的3个元素" class="headerlink" title="方法一：统计出现频率,并筛选出现最多的3个元素"></a>方法一：统计出现频率,并筛选出现最多的3个元素</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方法一：统计出现频率,并筛选出现最多的3个元素</span></span><br><span class="line">data = [<span class="number">2</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#统计频率</span></span><br><span class="line">f = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">    <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> f:</span><br><span class="line">        f[i] = <span class="number">0</span></span><br><span class="line">    f[i] += <span class="number">1</span></span><br><span class="line">print(f)</span><br><span class="line"></span><br><span class="line"><span class="comment">#排序，筛选</span></span><br><span class="line"></span><br><span class="line">rank = sorted(f.items(),key = <span class="keyword">lambda</span> x:x[<span class="number">1</span>],reverse = <span class="keyword">True</span>)</span><br><span class="line">print(rank[:<span class="number">3</span>])</span><br></pre></td></tr></table></figure><pre><code>{2: 3, 4: 2, 7: 1, 9: 3, 0: 1, 3: 3, 1: 2, 5: 2, 6: 1, 10: 2}[(2, 3), (9, 3), (3, 3)]</code></pre><h2 id="方法二：用-Python-字典-fromkeys-函数"><a href="#方法二：用-Python-字典-fromkeys-函数" class="headerlink" title="方法二：用 Python 字典 fromkeys() 函数"></a>方法二：用 Python 字典 fromkeys() 函数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方法二：用 Python 字典 fromkeys() 函数用于创建一个新字典，以序列seq中元素做字典的键，value为字典所有键对应的初始值。</span></span><br><span class="line">d = dict.fromkeys(data,<span class="number">0</span>) </span><br><span class="line">print(d)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">    d[i] += <span class="number">1</span></span><br><span class="line">print(d)</span><br><span class="line"><span class="comment">#使用 collections.Counter, Counter类的目的是用来跟踪值出现的次数。它是一个无序的容器类型，以字典的键值对形式存储，其中元素作为key，其计数作为value。计数值可以是任意的Interger（包括0和负数）</span></span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line">c = Counter(d)</span><br><span class="line">print(c)</span><br><span class="line">m = c.most_common(<span class="number">3</span>) <span class="comment"># Counter.most_common(n)方法得到频率最高的n个元素的列表</span></span><br><span class="line">print(m)</span><br></pre></td></tr></table></figure><pre><code>{2: 0, 4: 0, 7: 0, 9: 0, 0: 0, 3: 0, 1: 0, 5: 0, 6: 0, 10: 0}{2: 3, 4: 2, 7: 1, 9: 3, 0: 1, 3: 3, 1: 2, 5: 2, 6: 1, 10: 2}Counter({2: 3, 9: 3, 3: 3, 4: 2, 1: 2, 5: 2, 10: 2, 7: 1, 0: 1, 6: 1})[(2, 3), (9, 3), (3, 3)]</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#创建一个随机序列&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; random &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; randint&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;data = [randint(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;data&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Skills" scheme="http://yoursite.com/categories/Skills/"/>
    
    
      <category term="frquency" scheme="http://yoursite.com/tags/frquency/"/>
    
  </entry>
  
  <entry>
    <title>is and ==</title>
    <link href="http://yoursite.com/2018/05/07/is_==/"/>
    <id>http://yoursite.com/2018/05/07/is_==/</id>
    <published>2018-05-06T16:00:00.000Z</published>
    <updated>2018-05-07T08:54:33.034Z</updated>
    
    <content type="html"><![CDATA[<h2 id="python中的比较、相等性"><a href="#python中的比较、相等性" class="headerlink" title="python中的比较、相等性"></a>python中的比较、相等性</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">L1 = [<span class="number">1</span>,<span class="number">2</span>,[<span class="string">'A'</span>,<span class="string">'B'</span>]]</span><br><span class="line">L2 = [<span class="number">1</span>,<span class="number">2</span>,[<span class="string">'A'</span>,<span class="string">'B'</span>]]</span><br><span class="line">L3 = L1</span><br><span class="line">print(L1 == L2, L1 <span class="keyword">is</span> L2)</span><br><span class="line">print(L1 == L3, L1 <span class="keyword">is</span> L3)</span><br></pre></td></tr></table></figure><pre><code>True FalseTrue True</code></pre><a id="more"></a><p>==测试两个对象值的相等性，即递归的比较所有内嵌对象；值是否相等</p><p>is 测试两个对象的一致性，即是否是在一个内存空间。内存地址是否一致</p><h2 id="真值问题"><a href="#真值问题" class="headerlink" title="真值问题"></a>真值问题</h2><p>Python把任意的空数据结构视为假，把任何非空数据结构视为真</p><p>使用None，一般都起到一个空的占位符的作用，在真值判断的时候为false</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">L = [<span class="keyword">None</span>] * <span class="number">10</span></span><br><span class="line">print(L)</span><br></pre></td></tr></table></figure><pre><code>[None, None, None, None, None, None, None, None, None, None]</code></pre><p>内置bool函数可以测试一个对象是真还是假</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">print(bool([<span class="number">1</span>,<span class="number">2</span>]))</span><br><span class="line">print(bool())</span><br><span class="line">print(bool(<span class="keyword">True</span>))</span><br><span class="line">print(bool(<span class="keyword">None</span>))</span><br><span class="line">print(bool(<span class="string">'abcde'</span>))</span><br></pre></td></tr></table></figure><pre><code>TrueFalseTrueFalseTrue</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;python中的比较、相等性&quot;&gt;&lt;a href=&quot;#python中的比较、相等性&quot; class=&quot;headerlink&quot; title=&quot;python中的比较、相等性&quot;&gt;&lt;/a&gt;python中的比较、相等性&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;L1 = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,[&lt;span class=&quot;string&quot;&gt;&#39;A&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;B&#39;&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;L2 = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,[&lt;span class=&quot;string&quot;&gt;&#39;A&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;B&#39;&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;L3 = L1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(L1 == L2, L1 &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; L2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(L1 == L3, L1 &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; L3)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;True False
True True
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Topics" scheme="http://yoursite.com/categories/Topics/"/>
    
    
      <category term="is" scheme="http://yoursite.com/tags/is/"/>
    
  </entry>
  
  <entry>
    <title>Module and Package in Python</title>
    <link href="http://yoursite.com/2018/05/07/module_package/"/>
    <id>http://yoursite.com/2018/05/07/module_package/</id>
    <published>2018-05-06T16:00:00.000Z</published>
    <updated>2018-05-07T08:53:08.697Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Module-模块"><a href="#Module-模块" class="headerlink" title="Module 模块"></a>Module 模块</h2><p>模块是一个.py文件</p><p>导入模块的方法以及调用相应模块中的方法（函数），类，属性，如下</p><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#导入模块</span></span><br><span class="line"><span class="keyword">import</span> modname</span><br><span class="line"><span class="comment">#调用</span></span><br><span class="line">modname.itemname</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#导入模块中特定的方法</span></span><br><span class="line"><span class="keyword">from</span> modname <span class="keyword">import</span> itemname</span><br><span class="line"><span class="comment">#调用</span></span><br><span class="line">itemname</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#导入模块中全部方法</span></span><br><span class="line"><span class="keyword">from</span> modname <span class="keyword">import</span> *</span><br><span class="line"><span class="comment">#调用</span></span><br><span class="line">itemname</span><br><span class="line"><span class="comment">#注意：导入所有除了以一个下划线( _ )开头的所有方法)</span></span><br></pre></td></tr></table></figure><p>Pycache 下的 XXX.pyc 编译文件只有在模块中import 或者 from … import 才会保存</p><p>Python XXX.py  运行是不会产生 Pycache!</p><h2 id="模块的搜索路径"><a href="#模块的搜索路径" class="headerlink" title="模块的搜索路径"></a>模块的搜索路径</h2><p>当你导入一个模块，Python 解析器对模块位置的搜索顺序是：</p><p>1、当前目录</p><p>2、如果不在当前目录，Python 则搜索在 shell 变量 PYTHONPATH 下的每个目录。</p><p>3、如果都找不到，Python会察看默认路径。UNIX下，默认路径一般为/usr/local/lib/python/。</p><p>模块搜索路径存储在 system 模块的 sys.path 变量中。变量里包含当前目录，PYTHONPATH和由安装过程决定的默认目录。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">print(sys.path) <span class="comment">#返回的是列表</span></span><br><span class="line">sys.path.append(<span class="string">''</span>) <span class="comment">#添加到搜索路径中</span></span><br></pre></td></tr></table></figure><pre><code>[&apos;&apos;, &apos;c:\\users\\win7\\appdata\\local\\programs\\python\\python36\\python36.zip&apos;, &apos;c:\\users\\win7\\appdata\\local\\programs\\python\\python36\\DLLs&apos;, &apos;c:\\users\\win7\\appdata\\local\\programs\\python\\python36\\lib&apos;, &apos;c:\\users\\win7\\appdata\\local\\programs\\python\\python36&apos;, &apos;c:\\users\\win7\\appdata\\local\\programs\\python\\python36\\lib\\site-packages&apos;, &apos;c:\\users\\win7\\appdata\\local\\programs\\python\\python36\\lib\\site-packages\\IPython\\extensions&apos;, &apos;C:\\Users\\Win7\\.ipython&apos;]</code></pre><h2 id="from-modname-import"><a href="#from-modname-import" class="headerlink" title="from modname import *"></a>from modname import *</h2><p>用用引用模块中所有函数,类,变量</p><p>如果想用*通配符，又不想引用模块中的所有变量，可以在模块中用变量<strong>all</strong>进行限制，添加想引用的函数,类,变量。</p><h2 id="Package-包"><a href="#Package-包" class="headerlink" title="Package 包"></a>Package 包</h2><p>包就目录中包含 <strong>init</strong>.py 文件。</p><p>通常是使用用“圆点模块名”的结构化模块命名空间，例如 A.B模块表示 A包中名为B的子模块</p><p>导入包中模块的方法以及调用相应模块中的方法（函数），类，属性，如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> package.subpackage.modname</span><br><span class="line">package.subpackage.modname.itemname</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> package.subpackage <span class="keyword">import</span> modname</span><br><span class="line">modname.itemname</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> package.subpackage.modname <span class="keyword">import</span> itemname</span><br><span class="line">itemname</span><br></pre></td></tr></table></figure><p>注意</p><p>使用 from package import item 方式导入包时，这个子项（item）既可以是包中的一个子模块（或一个子包），也可以是包中定义的其它命名，像函数、类或变量。</p><p>from package import item<br>(其中，item 可是使一个子包/一个子模块/包中定义的函数，类或变量)</p><p>使用类似 import item.subitem.subsubitem 这样的语法时，这些子项必须是包，最后的子项可以是包或模块，但不能是前面子项中定义的类、函数或变量。</p><p>import item.subitem.subsubitem<br>(其中每一项，除了最后一项，必须是包；<br> 最后一项，可以是模块/包，不可以是前面一项即包中定义的类、函数或变量)</p><h2 id="from-package-import"><a href="#from-package-import" class="headerlink" title="from package import *"></a>from package import *</h2><p>以为会导入所有的子模块，不会，而且会出问题</p><p>所以执行 from package import * 时，在包中的 <strong>init</strong>.py 代码定义一个名为 <strong>all</strong> 的列表，把需要的模块名加入列表，就会按照列表中给出的模块名进行导入。</p><h2 id="包内引用"><a href="#包内引用" class="headerlink" title="包内引用"></a>包内引用</h2><p>如果包中使用了子包结构（就像示例中的 project 包），导入子模块两种方式：绝对导入和相对导入</p><p>在同一个包中，用相对导入更方便<br>在不同包中，用绝对导入更方便，前提是没有很多层子包</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">project/                          <span class="comment">#Top-level package</span></span><br><span class="line">      __init__.py               <span class="comment">#Initialize the package</span></span><br><span class="line">      A/                  <span class="comment">#Subpackage for projcet A</span></span><br><span class="line">              __init__.py</span><br><span class="line">              PA.py</span><br><span class="line">              ...</span><br><span class="line">      B/                  <span class="comment">#Subpackage for project B</span></span><br><span class="line">              __init__.py</span><br><span class="line">              PB.py</span><br><span class="line">              PB2.py</span><br><span class="line">              ...</span><br><span class="line">      C/                  <span class="comment">#Subpackage for project C</span></span><br><span class="line">              __init__.py</span><br><span class="line">              PC.py</span><br><span class="line">              ...</span><br></pre></td></tr></table></figure><p>绝对导入</p><p>在 PB.py 中导入不同包C中的PC.py 模块</p><p>from project.C. import PC</p><p>相对导入</p><p>以 PB.py 为例（基于当前模块的相对位置）</p><p>from . import PB2 (.表示当前包，在 PB.py 中导入同一个包中的 PB2.py 模块)</p><p>from ..C import PC.py(..表示上级包project，..C 表示上级包project下的C包,在 PB.py 中导入不同包C中的PC.py 模块)</p><p>from ..import A (在 PB.py 中导入上级包project包中的子包A)</p><p>前面的知识点<br>from package import item<br>(其中，item 可以是一个子包/一个子模块/包中定义的函数，类或变量)</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Module-模块&quot;&gt;&lt;a href=&quot;#Module-模块&quot; class=&quot;headerlink&quot; title=&quot;Module 模块&quot;&gt;&lt;/a&gt;Module 模块&lt;/h2&gt;&lt;p&gt;模块是一个.py文件&lt;/p&gt;
&lt;p&gt;导入模块的方法以及调用相应模块中的方法（函数），类，属性，如下&lt;/p&gt;
    
    </summary>
    
      <category term="Topics" scheme="http://yoursite.com/categories/Topics/"/>
    
    
      <category term="module" scheme="http://yoursite.com/tags/module/"/>
    
      <category term="package" scheme="http://yoursite.com/tags/package/"/>
    
  </entry>
  
  <entry>
    <title>Python Challenge Solutions</title>
    <link href="http://yoursite.com/2018/05/07/PythonChallenge/"/>
    <id>http://yoursite.com/2018/05/07/PythonChallenge/</id>
    <published>2018-05-06T16:00:00.000Z</published>
    <updated>2018-05-07T08:48:37.212Z</updated>
    
    <content type="html"><![CDATA[<p>The first programming riddle on the net</p><h1 id="Warming-Up"><a href="#Warming-Up" class="headerlink" title="Warming Up"></a>Warming Up</h1><p><a href="http://www.pythonchallenge.com/pc/def/0.html" target="_blank" rel="noopener">http://www.pythonchallenge.com/pc/def/0.html</a></p><p>线索：试着改变URL的地址–&gt;把图片中得到的数字输入到URL中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="number">2</span>**<span class="number">38</span>)</span><br></pre></td></tr></table></figure><pre><code>274877906944</code></pre><a id="more"></a><h1 id="What-about-making-trans"><a href="#What-about-making-trans" class="headerlink" title="What about making trans"></a>What about making trans</h1><p><a href="http://www.pythonchallenge.com/pc/def/map.html" target="_blank" rel="noopener">http://www.pythonchallenge.com/pc/def/map.html</a></p><p>线索：想要解开它，你需要想2次–&gt; K-M,O-Q,E-G 每个字母都往后推了2次</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">transmes</span><span class="params">(mes)</span>:</span></span><br><span class="line">    intab = <span class="string">'abcdefghijklmnopqrstuvwxyz'</span></span><br><span class="line">    outtab =<span class="string">'cdefghijklmnopqrstuvwxyzab'</span></span><br><span class="line">    trantab = str.maketrans(intab,outtab)</span><br><span class="line">    message = mes.translate(trantab) </span><br><span class="line">    print(message)</span><br><span class="line"></span><br><span class="line">message = <span class="string">"g fmnc wms bgblr rpylqjyrc gr zw fylb. rfyrq ufyr amknsrcpq ypc dmp. bmgle gr gl zw fylb gq glcddgagclr ylb rfyr'q ufw rfgq rcvr gq qm jmle. sqgle qrpgle.kyicrpylq() gq pcamkkclbcb. lmu ynnjw ml rfc spj."</span></span><br><span class="line">transmes(message)</span><br><span class="line">url = <span class="string">'map'</span></span><br><span class="line">transmes(url)</span><br></pre></td></tr></table></figure><pre><code>i hope you didnt translate it by hand. thats what computers are for. doing it in by hand is inefficient and that&apos;s why this text is so long. using string.maketrans() is recommended. now apply on the url.ocr</code></pre><p>希望你没有一个一个去推算字母解密这段话，这样的工作应该是由电脑来做。手动推送很费时，所以这段话会如此之长。推荐用 string.maketrans() 方法来解密这道题，现在把它应用在url上。</p><h1 id="ocr"><a href="#ocr" class="headerlink" title="ocr"></a>ocr</h1><p><a href="http://www.pythonchallenge.com/pc/def/ocr.html" target="_blank" rel="noopener">http://www.pythonchallenge.com/pc/def/ocr.html</a></p><p>线索：找出字母。他们可能在书中，可能在页面源码上。–&gt;查看源代码，看注释，在下面这堆乱七八糟的信息中，找到出现次数最少的字母</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br><span class="line">1195</span><br><span class="line">1196</span><br><span class="line">1197</span><br><span class="line">1198</span><br><span class="line">1199</span><br><span class="line">1200</span><br><span class="line">1201</span><br><span class="line">1202</span><br><span class="line">1203</span><br><span class="line">1204</span><br><span class="line">1205</span><br><span class="line">1206</span><br><span class="line">1207</span><br><span class="line">1208</span><br><span class="line">1209</span><br><span class="line">1210</span><br><span class="line">1211</span><br><span class="line">1212</span><br><span class="line">1213</span><br><span class="line">1214</span><br><span class="line">1215</span><br><span class="line">1216</span><br><span class="line">1217</span><br><span class="line">1218</span><br><span class="line">1219</span><br><span class="line">1220</span><br><span class="line">1221</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#网页代码上的信息 page_message </span></span><br><span class="line">page_message = <span class="string">'''%%$@_$^__#)^)&amp;!_+]!*@&amp;^&#125;@[@%]()%+$&amp;[(_@%+%$*^@$^!+]!&amp;_#)_*&#125;&#123;&#125;&#125;!&#125;_]$[%&#125;@[&#123;_@#_^&#123;*</span></span><br><span class="line"><span class="string">@##&amp;&#123;#&amp;&#123;&amp;)*%(]&#123;&#123;([*&#125;@[@&amp;]+!!*&#123;)!&#125;&#123;%+&#123;))])[!^&#125;)+)$]#&#123;*+^((@^@&#125;$[**$&amp;^&#123;$!@#$%)!@(&amp;</span></span><br><span class="line"><span class="string">+^!&#123;%_$&amp;@^!&#125;$_$&#123;)$_#)!(&#123;@!)(^&#125;!*^&amp;!$%_&amp;&amp;&#125;&amp;_#&amp;@&#123;)]&#123;+)%*&#123;&amp;*%*&amp;@%$+]!*__(#!*)&#123;%&amp;@++</span></span><br><span class="line"><span class="string">!_)^$&amp;&amp;%#+)&#125;!@!)&amp;^&#125;**#!_$([$!$&#125;#*^&#125;$+&amp;#[&#123;*&#123;&#125;&#123;((#$]&#123;[$[$$()_#&#125;!@&#125;^@_&amp;%^*!)&#123;*^^_$^</span></span><br><span class="line"><span class="string">]@&#125;#%[%!^[^_&#125;)+@&amp;&#125;&#123;@*!(@$%$^)&#125;[_!&#125;(*&#125;#&#125;#___&#125;!](@_&#123;&#123;(*#%!%%+*)^+#%&#125;$+_]#&#125;%!**#!^_</span></span><br><span class="line"><span class="string">)@)$%%^&#123;_%!@(&amp;&#123;!&#125;$_$[)*!^&amp;&#123;&#125;*#&#123;!)@&#125;)!*&#123;^&amp;[&amp;$#@)*@#@_@^_#*!@_#&#125;)+[^&amp;!@*&#125;^)&#123;%%&#123;&amp;#@</span></span><br><span class="line"><span class="string">@&#123;%(&amp;&#123;+(#^&#123;@&#123;)%_$[+&#125;]$]^&#123;^#(*&#125;%)@$@&#125;(#&#123;_&amp;]#%#]&#123;_*(&#123;(])$%[!&#125;#@@&amp;_)([*]&#125;$&#125;&amp;$&#123;^&#125;@(%</span></span><br><span class="line"><span class="string">(%[@%!&#125;%*$&#125;(*@)&#125;)&#123;+@(%@*$&amp;]*^*&#125;*]&amp;$[&#125;*]%]+*&#125;^!&#125;*$^^_()#$^]++@__)&#123;&amp;&amp;+((#%+(&amp;+)&#123;)$</span></span><br><span class="line"><span class="string">%&amp;&amp;#($[[+##*%$&#123;)_!+&#123;_[&#125;)%++)$#))]]]$]@]@($+&#123;&amp;%&amp;%+!!!@]_]+])^*@$(@#$&#123;&#125;&#125;#&#125;&#123;%&#125;#+&#123;(@</span></span><br><span class="line"><span class="string">#__+&#123;&#123;]$&#123;]!&#123;(%$&#123;%%^)(_*_@+)$]$#_@$)]](&#125;&#123;&#125;$(&#125;*%+!&#125;#+)$%$&#125;+#@*&amp;^&#123;##&#125;+@(%[*@_&#125;&#123;(^]^</span></span><br><span class="line"><span class="string">+_*&#123;@+[$!!@%$+&#123;_&amp;(#^(([&amp;[][[&amp;@#+&#125;_]&amp;&amp;]&#125;^*&amp;$&amp;)#_^$@$((%)&#125;+&#123;&#125;$#+&#123;+^&#125;&amp;[#[#_+$&#123;#[#]&#123;</span></span><br><span class="line"><span class="string">(@@[%&#125;[&#125;$%+*#$+[%(**!$+@$@&amp;+$_$#!_&amp;&amp;&amp;&amp;&#123;***+)&#125;][&#125;#^!%#&amp;$*)$!%&#125;*&amp;#&#125;&#125;##(^_%^]&#123;+]&amp;&amp;]</span></span><br><span class="line"><span class="string">&#125;^]#^(&#125;@]&amp;$]*_][])$]&#123;_+&#125;)^_&#125;]))()^&amp;)(!*![!&amp;&#125;&#123;][(]&#125;)[(*^&#125;$&amp;$_@^$)#$&#123;%[$_]!^]&#125;&#125;&#125;*+</span></span><br><span class="line"><span class="string">*^_(+&#125;^)(%(&#125;&#123;&amp;)[&#125;!$$&amp;&amp;+&#125;&amp;[&#123;%&#125;^+#$]@)^&amp;*%&#123;@&#125;]&amp;!%*%$*&amp;][&#125;&amp;&#123;$&amp;*@&#123;@#]$*_[]%%[#]#*%)@</span></span><br><span class="line"><span class="string">$_^#%$!&#123;#]^$&#125;%^@^+&#123;($!^($%)]+&amp;&#125;+$@[$*)*&amp;)*%!_!!+@&amp;^*&#123;&#125;%#&amp;&#123;&#125;$!(*^*@]@@&#125;)[($!)]]&#125;)</span></span><br><span class="line"><span class="string">&#125;)(&amp;+##]##%&amp;##$&#125;@&#123;#_])*%(*(@$)&#125;[+(+_)!&#123;&#123;#^&#123;_@)!&amp;)$&#125;@^^^[$#__+$^!*#%%]_!#$]$&amp;+^&#125;%</span></span><br><span class="line"><span class="string">@])])%&#125;]#$((^+&#123;&#123;@++^])$^*#[$&#125;*]&#125;&#125;&#123;)@+)[_&#125;*@^%#]]#+()+)(]_[!!!)+)$+&amp;@@])!&#125;+*%]$[]</span></span><br><span class="line"><span class="string">&amp;&amp;[@+$_&amp;#[$!$$&#123;&#125;&#123;%[]#+@)*!#)*!&#123;$#*$%&#125;[(&amp;@$&amp;_@($$]]]_[+(#@&#125;&amp;_&#125;+]@$#_+](&#125;^&#125;)!@@&#125;@)</span></span><br><span class="line"><span class="string">&#125;^]^]*&#125;]+&amp;(@@!!](*@#(++*)]!(^$&#125;)&amp;_^@+]&#123;#_@*%^[$[%&amp;_%@%_![&amp;&amp;]&amp;_@*#_&#125;[&#123;&#123;])^$[_$_&amp;_</span></span><br><span class="line"><span class="string">@%%[@#[@_[&amp;+]&#125;[+)!_#_+++%)[@%$(&amp;$[&#123;#@(&#125;$*![#^#&#123;&#125;_)[$^_$$&#123;_@&amp;&#125;*![#*#_+%[@&#123;*^$)&#123;)#</span></span><br><span class="line"><span class="string">#%&#125;]&#123;+((*^]+&#123;&#125;)&amp;#$!#(*%(&#123;_!^*[&#123;%@_&amp;#)&#123;![&amp;]@$#[#(!&#123;*#^*%)]!%(#]%$&#123;*_^&#123;+&#125;(@&#125;&#123;_^(](</span></span><br><span class="line"><span class="string">_+!_)^&amp;&#125;!#([(+&amp;[@])[_(]@]@&amp;@&#123;#@(%[@+[^@%@+]*_[&#123;]$[_(_@[!]]^%+@#(@$&#125;]@(^**+]%^)^(</span></span><br><span class="line"><span class="string">@&#125;^[]@@[@[@&#125;^(^!]%*_]&amp;$!!^^#*[#*[*_&#125;+[$#(_#%@](+[^+&#125;%&#123;_*#]+*(]&#125;!$(%@%#^)&#125;]_&amp;]&#123;$&#123;</span></span><br><span class="line"><span class="string">&#125;$[*&#123;+&amp;+&amp;&#125;[#_#&#125;_(&#125;)&#123;^#&#123;[_%*!$+[#)%]@&amp;&amp;_&#123;)#[+*&amp;+#!&amp;)%)%++$_&#125;)&#123;%%*@!*&amp;%__(_!]#$*(_</span></span><br><span class="line"><span class="string">$^!@@&#125;_())%(&amp;$%]]&#123;&#123;&#123;@+!&amp;%@(^!+*&#123;%[*[!])&#123;(#$@)(^&#123;]%[&amp;*(&amp;!&#123;&amp;&#125;!%*$)*]]$%(__[&#125;_+&amp;)!(</span></span><br><span class="line"><span class="string">^_&amp;*]*+#@&#123;@[_(&#123;$*&amp;&#125;][(*!+$+#%&amp;![%^)^#(#&#125;+*+(@)&amp;&amp;!(&#123;^^_*($^+)&amp;&#123;)%$@%)&amp;!$$&amp;&amp;^+#[)$</span></span><br><span class="line"><span class="string">+!$^]*!%^_$&#125;$+!!&amp;%_&amp;)&#123;$%&#123;((&amp;^&#123;&#123;(&amp;_&amp;_]&#123;^&#125;@[$^+]&#125;]^&#123;@!^@_%_&#123;^@*)+^*#$#!+*&#125;#)&#125;@(&#125;!]</span></span><br><span class="line"><span class="string">_*)&#125;$**@&#125;[^_&amp;*^)*+#()]&amp;&#123;&#123;]*+#$&#123;@&amp;&#125;#)$[]_+(^_@^][]_)*^*+_!&#123;&amp;$##]((](&#125;&#125;&#123;[!$#_&#123;&amp;&#123;)&#123;</span></span><br><span class="line"><span class="string">*_&#123;^&#125;$#!+]&#123;[^&amp;++*#!]*)]%$!&#123;#^&amp;%(%^*&#125;@^+__])_$@_^#[&#123;&#123;&#125;)&#125;$*]#%]&#123;&#125;&#123;][@^!@)_[&#125;&#123;())%)</span></span><br><span class="line"><span class="string">())&amp;#@*[#&#125;+#^&#125;#%!![#&amp;*&#125;^&#123;^((&#123;+#*[!&#123;!&#125;)&#123;(!*@!+@[_(*^+*]$]+@+*_##)&amp;)^(@$^]e@][#&amp;)(</span></span><br><span class="line"><span class="string">%%&#123;&#125;)+^$))[&#123;))&#125;&amp;$(^+&#123;&amp;(#%*@&amp;*(^&amp;&#123;&#125;+!&#125;_!^($&#125;!(&#125;_@@++$)(%&#125;&#123;!&#123;_]%&#125;$!)&#123;%^%%@^%&amp;#([+[</span></span><br><span class="line"><span class="string">_+%)&#123;&#123;&#125;(#_&#125;&amp;&#123;&amp;++!@_)(_+&#125;%_#+]&amp;^)+]_[@]+$!+&#123;@&#125;$^!&amp;)#%#^&amp;+$@[+&amp;+&#123;^&#123;*[@]#!&#123;_*[)(#[[</span></span><br><span class="line"><span class="string">]*!*&#125;&#125;*_(+&amp;%&#123;&amp;#$&amp;+*_]#+#]!&amp;*@&#125;$%)!&#125;)@&amp;)*&#125;#(@&#125;!^(]^@&#125;]#&amp;%)![^!$*)&amp;_]^%&#123;&#123;&#125;(!)_&amp;&#123;_&#123;</span></span><br><span class="line"><span class="string">+[_*+&#125;]$_[#@_^]*^*#@&#123;&amp;%&#125;)*&#123;&amp;**&#125;&#125;&#125;!_!+&#123;&amp;^)__)@_#$#%&#123;+)^!&#123;&#125;^@[$+^&#125;&amp;(%%)&amp;!+^_^#&#125;^(&#123;</span></span><br><span class="line"><span class="string">*%]&amp;@&#123;]++&#125;@$$)&#125;#]&#123;)!+@[^)!#[%@^!!+&#123;(@&amp;+++_&#123;!$&#125;&#123;]_%_#^#%&amp;&#123;!_(#$%%&amp;@[&#125;)]+_@!(*[_@[</span></span><br><span class="line"><span class="string">*_&amp;+][^][&#125;^@&#125;])!(&amp;^*[_%+(&#125;!!&#123;!!^*@!(&#123;%]#[_&amp;()$]!$]@&#125;*][)#()&#125;)[*^[^&#125;]#(((_^#%%]@&#125;</span></span><br><span class="line"><span class="string">^###%!&#123;(@+]$%*^&#125;(![$@*]_&#123;#*!$*@%*(^+#!)$&amp;]*%$&amp;*@$[)_$!&amp;+_[$)%_*((%+##*]@+#*[$$)^</span></span><br><span class="line"><span class="string">@)]&#125;!)$^%+%&amp;_#+]&amp;&amp;_!(&#125;+^*#)$%%^+&amp;%^_]@*%^^_#]%&#123;%[&amp;(*_(%(*&#123;^@[@&amp;+!@&amp;[+[++$&#125;)$!*&#125;+</span></span><br><span class="line"><span class="string">(_^%%*&#125;^&#123;+&#125;(+]]_][_(@&#125;^#_&#123;_&#125;*)&#123;*)&#125;+*)%#%++&#125;&#123;&#125;__%$$$[%%*&#125;)_#*!_!%&amp;*$!]!&#125;&#123;*+&#123;^()$&#125;</span></span><br><span class="line"><span class="string">*$%*$]][&#123;@+*]_*&amp;!^]_*!_&#123;_@(&#125;+%#$+@&#125;_]#@$#^%((#$%+++]])#*@)&amp;([^#]_$%$)[#))&#123;(&#123;%@_^</span></span><br><span class="line"><span class="string">@#&#125;@*!!()[]%$*+*&#123;*$%@**!&#125;&amp;#[*#[[&#123;(@&amp;_)&#123;&#123;!&#125;!)++@*&#123;&#123;(&#123;_!#^]&#125;+&#123;&#123;#]&#123;$^)&amp;]%&#125;&#125;)^@&amp;$%@$</span></span><br><span class="line"><span class="string">$!_+!&#123;]*^_+@&amp;@)&#123;#*!_#+&#123;[@$^(__&#125;*[^$&amp;&#123;&amp;]!(&amp;+++_@+)&amp;&#125;))$%]$&#123;+*!(#@(&#125;&amp;&amp;&amp;!)!_!$&amp;@&amp;&#123;[</span></span><br><span class="line"><span class="string">[@!#!]]#%)(_^!&#123;*[&#123;^&#123;]&#125;)$)^&amp;(*)%&#125;#]#()^#+&#125;!&#123;_&#125;*+&#123;@&amp;_^)+%@!%%$&#123;$&amp;%&#125;(%*_!)%$((+$&amp;^^</span></span><br><span class="line"><span class="string">&#125;#[@%+)&amp;^!](]%+_&#123;&#123;]&#125;@]+^]&#123;(!_*&amp;@][]@_%&#125;%(%&amp;)&#125;)&amp;!#)[_]^+$)[(%*%(&#123;]$[(#+&amp;+[@[*([$#</span></span><br><span class="line"><span class="string">^*!@&#123;]]#![[&#123;_]#^@])_[[+%]#[%[+_&#123;)^+([^&#125;[]_[&#125;])*^!_+$&#125;^+_)+*@$$^&#125;(&amp;[)_^[+&#125;)^]&amp;)))</span></span><br><span class="line"><span class="string">&#125;*+&#125;%)&#123;@_)]_)&amp;)!@)*#^_%&#123;&#125;(]]$)+^@+&#125;+$_*&amp;)]%^@&amp;)![!@$[@)@&#125;%!)@$((^![&#123;(%([+#&amp;&#123;$+#[</span></span><br><span class="line"><span class="string">#&amp;)!+&#123;)__]+%)![*%^&amp;*^)*#[&amp;(_%*)^_%*^&#123;&amp;_[@%%@^%_&#125;&amp;*@($[@$$#](&#125;&amp;$*&amp;$$((!!&#125;&#123;%!^^$&#125;!</span></span><br><span class="line"><span class="string">&#123;]][(!_(+&#125;$%*_]*&amp;$!_[@$&#125;)#@)]*%#]*&#123;)$@*!^#[]**+]&amp;])$@*@]&#123;$_+]]^_*+*+)%!_!&#125;#&#125;^@*[</span></span><br><span class="line"><span class="string">$[##&amp;_^+&amp;)((_$#!]&#125;[_*]_$^_*&#123;[^$#[&#123;@$[()+*@_$((+&#125;*^!])&#123;][_&#125;!)%&#123;&#125;&#123;&amp;#@[&amp;#$(&#125;#&#125;%%&#123;!_</span></span><br><span class="line"><span class="string">@)[($&#125;&amp;+&amp;$&#125;&#125;%[)@[&#123;^_+%+[)[^[*&#123;&#123;^#]*__$^%^&#125;#]&#125;*&#123;^+&#123;!@#(+*]$)^(*!^^]^)[&#125;@&#123;%(($(+_#</span></span><br><span class="line"><span class="string">*)&#123;@&#125;]+&#125;&amp;)[(^^(*$&amp;_$@#[#_$)^_()&#125;&#123;[]]&#123;^@*)_!&#123;@)(!))^_+_]&#123;+_&#125;$%(@#+&#123;*+%@!$&#123;*&amp;&amp;@$&#123;]</span></span><br><span class="line"><span class="string">(&#125;&amp;($(^*&#123;^$])*&#125;$(#&#125;%&#125;#)_@^*&#125;#!)$)&amp;$*__+!!+[&amp;&#125;])*_&#123;+$&#125;!@)*^&#123;&#123;(&#123;@&#125;&#123;@&#125;+@#$&#123;$^*@^^&#125;(</span></span><br><span class="line"><span class="string">[)!^)&#123;!+@%(^_)[]@(]+&amp;^_@[*(_@^*##*&amp;*$!&#123;^&#123;!&amp;#@(%&amp;(@!]^[](&#123;!+(]+^&#125;&amp;&amp;$&#123;&#123;]^!+#^*#&amp;%&#123;</span></span><br><span class="line"><span class="string">$[&#125;@&amp;(]^&amp;^@*#[&amp;&amp;&#125;^[!%+#(+(%+&amp;)&#123;_@_&amp;%&amp;!$&#125;&amp;)[$]%_^]*@^]&amp;_&#125;&amp;^^^(&amp;($&#123;%#^(#[&#125;&#125;&#123;%))&amp;&#125;&#123;</span></span><br><span class="line"><span class="string">%&amp;___*&amp;*((!#&amp;(^)&#125;%**$+_[!#&#123;&amp;_&#123;$_))[$&#123;$*([&amp;*%^!$%%&amp;&#125;$&amp;_))&#125;&#123;(_]!+&#123;&#125;@+%&#123;^*_[[@@)%&#125;%</span></span><br><span class="line"><span class="string">@)%*(&#125;($$)^!#&#125;+&#125;#$]@&#125;)+]&amp;@^!*&#123;@_**&#123;_^&#123;@(^(@++&amp;)!#](&amp;#*[)+!!%&#123;]_*$*(]%+&amp;_^%)$$$*$</span></span><br><span class="line"><span class="string">&amp;]@&#125;!&amp;&#123;@[&#123;(+**#)&#125;$&#123;[*@$(+%__&#123;&#123;&#125;#!&#125;@(%^+*)$+&amp;)&#123;^(_*&amp;&#125;&amp;__]^*)&#125;]^!!%&amp;$#[)$)+_&#123;!$%@)</span></span><br><span class="line"><span class="string">_##)#^*%#&#125;&#123;$&#125;$[!!__$)&#125;(%+[^(^$(%_)#!$[$@+]$&#123;$(&#123;)[^$+&amp;$($]*!+$^&#123;_(_%&#125;(^)(!_))![*^</span></span><br><span class="line"><span class="string">^%^&amp;&#125;)[@#&#125;#_%$*&#125;&amp;#!_)!))&#123;*&#125;!@&amp;]*(@^_&amp;[)]!*$&amp;_[@&amp;]($&#125;!]!&#123;)[)[&#123;&#123;_&#123;#(+_!_#&#123;]_(_($&#123;&#125;</span></span><br><span class="line"><span class="string">%*+[&#125;#&#123;)@]&amp;@($+&amp;!^[&#125;![&#125;&amp;$&#125;*^[!)#^_#**$&#123;+(!+!#)!^%_#%[][(@(!!&#125;&amp;)_*&#123;%@_^!)_!_@!^!(</span></span><br><span class="line"><span class="string">&#123;^](#%%&amp;@#))$&amp;#_&amp;[[#&amp;^&amp;^&#125;))([]&amp;^+^@($!&#125;&#123;+^+*&#123;%[&#125;_*+_*^+$)+%^(&#125;&amp;[_%)$+&#123;&#125;&#123;[*]+$]&#125;&amp;</span></span><br><span class="line"><span class="string">@&#125;_]_[%&amp;)[@+&#125;&#123;+&amp;^!#@_&#123;!__!^%[(]@!+*%[!+)!&#123;+_]*&amp;+@*[_(*%+&#125;*@+@&amp;$!+_@+*&amp;[#@%###&#125;^^</span></span><br><span class="line"><span class="string">%_@)$[&amp;)&#123;&amp;#&amp;$!&amp;&#125;&#123;@&amp;&amp;*[&amp;!!!(&#123;)&amp;&#123;)+]^*&amp;)]+[+^%^[_&amp;+^$!$!+!+_(&#125;+^&#125;+&amp;#*_&amp;*(+_+[[)$!&#125;</span></span><br><span class="line"><span class="string">^$]&#125;%](]]#_&#125;[(&amp;$&#123;&#123;+((][_*%!)(##[@*&amp;(^!_]**&#125;[&#125;&#123;[%]*!$])[_))&amp;(^$)%))&amp;(+^@$&amp;$&#123;_@![!</span></span><br><span class="line"><span class="string">#(&#125;_&#123;$(&amp;_&amp;[_]%*&amp;*@]&#125;]&#125;[&#123;!&amp;*&#125;&#123;&#123;&amp;+*$@%%&#125;$+^[&#125;&#123;&amp;$^%%^]#%&#123;#](_)&#123;[()@@)[@]!#!%)&amp;*+]_&#125;</span></span><br><span class="line"><span class="string">&#125;[([#&#125;[&#125;&amp;&amp;&#125;+&#123;@!@+&#125;])&#123;_)%_+(&#123;&#123;!]*&#125;&#125;^(!])#*^)(#&amp;!)_#$[%_#&#123;!##%%+)@&#123;**)%+&amp;*[*#[+*$)</span></span><br><span class="line"><span class="string">@(!%)*)^]![_^%#)&#125;*#!_@_@)(#)(_(]!%@)!_+_)]!*@&#123;&amp;!^%_+*(%%$!!_^&#125;@^^&#123;[@#*&amp;+[(%#[&#123;(&#123;</span></span><br><span class="line"><span class="string">+)&amp;+_$!$&#123;]+&#125;^$[!]_#&#123;&#123;#]!&#123;[&amp;[$@*^]&#125;@]&#125;+&#123;)_#&#125;@_^%%$^&#123;+($*[###@))]&#125;@!@]]&#123;^[_@)!@&#123;@&#125;</span></span><br><span class="line"><span class="string">*+^(_]*$!_^_+[#))$$]*+%&#125;&#123;[&amp;([&amp;)@#&#123;#)*%)])!_^+%%*#(+!&#125;+&#123;[#+#%%]@((]!_#@*%&amp;(@[(@@#</span></span><br><span class="line"><span class="string">^#&#125;@&#125;[*@&#125;)&amp;$)@#+*!&#125;^^()[^#^])+$$*%^*@^^!^$^#_!@^^(_&amp;&amp;][)@(%([[]&amp;]]&#123;[^&#125;!@^[+$&#123;*%#</span></span><br><span class="line"><span class="string">&#123;[!(&#123;&amp;_(_!+$]@&#125;@!))$[[+#+&#123;(@&amp;@^&#123;]]*][]&#125;_$$$)##&amp;&amp;^#_&#123;&#125;&#125;#[*%(+&amp;]@%&#123;@)!&amp;&#123;+&#123;*^_#_$*^</span></span><br><span class="line"><span class="string">[]&#125;+^+*&#123;[)&#125;![&#125;@[#$)&#125;_^&#125;#$!#%&#123;([*_^+!#&#125;$@&#123;&#123;&amp;)!#*$#*@&amp;)@&amp;]^&#125;!+&#123;!&#125;&#123;)%&#125;^[&#125;]&#125;[$&amp;)^$)$</span></span><br><span class="line"><span class="string">+)&#123;@)%$*[$_#))[(&#123;)&amp;()[_^&amp;^+#&#125;%#((+@@[$+!^[%*_&#123;]*+)&#125;#$$&#123;+!@_)@@)@%**]_]))$$^&amp;**!_</span></span><br><span class="line"><span class="string">&#123;!]^*+#]$!@+!$)^%)!&amp;[$*[@!(_)[![)(&#125;$&#125;*)$(&amp;%%&amp;+^&#125;+^%%&amp;^_&#125;]!(&amp;]#+$*__*))#*&#123;_&amp;*]&#123;*@</span></span><br><span class="line"><span class="string">&#125;_&#123;%]]$)(#@![!(_]!)+&amp;$&amp;^()&#123;$%_(_%+&#125;%*%&amp;%!!^^)(_*@&#123;^#())[&#123;^&amp;@&#125;#&#123;&#123;^_$[*()*$&amp;%^_&#123;)%</span></span><br><span class="line"><span class="string">#@#&#123;%]_&#123;%#^)@(]#]&#125;&#125;)#)*%)[&#123;_^%[&#125;][]^]^**]]&#125;]@+%_&#125;(])#+*^&amp;]$^[$$%]$&amp;+(&#123;!^&#123;^@+]&#123;(&#125;</span></span><br><span class="line"><span class="string">&amp;^$@[$#(&amp;+_%&#123;*+%%(][%*+*&#123;[)*$#%&#123;(&#123;#@]_(#[&#123;*(*$&#125;&#123;$^&#125;[]&#123;%]&amp;&#123;@#@^]&#123;[)(&#123;%[)%!*$$&#125;@&amp;&amp;</span></span><br><span class="line"><span class="string">_+&amp;_&#125;@!^$&#125;!$@_+^^]&#125;@&#125;%&#125;%#+&amp;($)]*+[%^#*@+_[((#!&#125;%[+])[&#125;[^)!(&amp;*^&#125;*+])&#123;$#&amp;&#125;&amp;*&#123;)%^&amp;!</span></span><br><span class="line"><span class="string">]@][(&amp;@)#&#123;#_*^[@]$[(]&#123;()*&#125;$[&#125;*&#123;^]&amp;]$!%)*!&#125;&#125;()^^(]+*!]^*[^&amp;+$(&#123;]%!@)]^#$(^&#123;@^!(&#125;]</span></span><br><span class="line"><span class="string">&amp;*^_(+_&amp;++_]])&amp;]#%@^#%$^^_[+[&amp;*[*^^&#125;_**!&#125;*&#125;_%&amp;([%^$%_$]]](_@$*%!)(&#123;&amp;##([&amp;%((&#125;$*%</span></span><br><span class="line"><span class="string">]*_$&#123;+(#^+^*!@@@![&amp;&amp;!&#125;$)]%^@)#%_]&amp;(])_@+&#123;*#(&#125;*_(!(&#125;$[(_^_^]_&#125;!&amp;_&amp;()(@+&amp;_*^+)&#125;#&#125;[</span></span><br><span class="line"><span class="string">+[[%)&#123;#[#()#_$(]!(^]&#123;@(_%&#125;$[))&#125;*)(]@@#+@[+$[))[%*#%@&#125;*_$)*@@@&#125;&#123;&amp;^#@!&#125;&#123;+&#123;^&amp;))+&#125;#]</span></span><br><span class="line"><span class="string">%&#123;%&#123;&amp;#(*]$&#125;&#125;&#123;&#125;&amp;]$*%(&#125;]&#123;#*(+#%(@]&amp;[^!&#123;&amp;&#125;(^*[@)$^!^+$*]&amp;])@##@*+![&amp;+%_&#123;+_)[[)+)(#_</span></span><br><span class="line"><span class="string">&amp;&#123;^#&#125;!!]_]&#125;&#125;&#125;][@&#123;^[%&#123;*+!!!(&amp;*$@^!_)^*$^@][+[&#123;&amp;#%!!_^$&amp;&#123;(_(^!&#125;*@%([@^&#123;%^%(+()(+%^</span></span><br><span class="line"><span class="string">])*_)^$&#125;_&#125;&#125;*&#123;[[*&#123;+[+*@%&#125;!%#%%$!]]&#125;&#125;(^@@^!*)%^+(+!&#125;!#$_&amp;&#125;_&#125;_*#^&amp;^)[(&amp;^&amp;&#125;#$*&#125;*#&#125;*^</span></span><br><span class="line"><span class="string">&amp;&#123;%&#123;[&#125;!&#123;_$_[]^&amp;%&#125;&#125;)!&#125;]%$+@!@(%)@[&#125;%_@]]%!+$*_)%&#125;#$[&amp;_])&#125;][@%[^_$#$((%]+&#125;)%#$)]@#</span></span><br><span class="line"><span class="string">]@(!@#)[&#123;$@^!]&#123;#^&amp;+)[**[&#125;%#)+(%]#*$*&amp;&#125;&#125;_%%]]&amp;!&amp;$[)]@&#123;+@*#_!&#123;@&#123;#&#123;_$%[!+&amp;$[&#125;+((_]&#125;</span></span><br><span class="line"><span class="string">^&#125;[[+![&#125;)&amp;+^&amp;@_)&#123;(&amp;_^&amp;&amp;]#&amp;&amp;))@@%[&#123;%$+%&#125;)!_&amp;[[$&#125;&amp;_@[+%&#125;&amp;*]$)&#125;$]&amp;^@&#123;^&#125;)))_#@*@&#123;([+</span></span><br><span class="line"><span class="string">+%&#125;^&#123;]&#123;]]]+&#125;$&#123;$!^)]#()&#125;#&#123;_^+__&amp;#*^&amp;+&#123;!&#123;&amp;&#125;&amp;&amp;@&#123;#&amp;(_%#^*#+_$&#123;&#125;!]##]*[(%])[&#123;(+!((&#125;&amp;]</span></span><br><span class="line"><span class="string">)!(&#125;##&#123;+%#_[%([&#125;*&#125;]!_(!^[&#123;[&#125;^&#123;@*(&#125;&#123;@+&amp;$)$)&#123;!^@]&#123;](@&#123;)#[_!*_*[#!$@)!&#125;@&#125;]_&#125;[*#(&#125;@#</span></span><br><span class="line"><span class="string">%@^&#125;&amp;[^]$^(%(&amp;&amp;+!&#123;^!)!#%&#123;[^&amp;+@[+*!])&#125;^])+[&amp;[)&#125;!&#125;&#123;$)&#125;!)^#)^+&#125;+$&#123;][!%_%$%&amp;%$))&#123;*_&amp;</span></span><br><span class="line"><span class="string">*+@!&#125;+$&#123;()&#125;&#123;(&amp;$^_)&amp;+#&#123;)[^$*[!$]_$%)]^]@[$!#%((_&amp;&amp;[%]!&#125;$%$$[$*&#125;$(*(+&amp;!#^^#][*&#123;(^$</span></span><br><span class="line"><span class="string">]&#123;!(&#125;#])#%&#123;&amp;!)+((&#123;#&#123;#*_+&#123;[%[!#&amp;%*])_&amp;*)_&#125;+@&#123;&amp;&#125;#*&amp;#[(!&amp;]]*)#%](#^^&amp;%]@(*]+^&#123;@&#123;#!*</span></span><br><span class="line"><span class="string">](%$()%!]+&#125;_([](@[^&amp;@&#123;][%])*]&#123;^@@&#123;#$*&#123;!^#)$&amp;!)!%_&#125;&amp;[(*#[[&amp;^_&amp;!_&amp;!@#_$*__@&#123;_#%&amp;#&#125;</span></span><br><span class="line"><span class="string">@@+[+&amp;%&amp;$[%[@@(@!_&amp;&amp;%#__!@&#123;$#&amp;@[*($]*](&amp;&amp;&#123;&#125;#!^^$[%&amp;&#123;+%&#125;]_&#125;!#([&#125;^&#123;&#123;**@*($[[#[%&#125;*#</span></span><br><span class="line"><span class="string">*^^[%)%@[&amp;%&#125;!+&amp;!&#125;*&amp;*!)_$[^^#]$$&#125;@(*)&amp;)&#125;@&#125;^+@@!!&#125;&amp;%[]*#$&#125;+&#125;+#!&amp;+&#125;]&amp;&amp;#^))(*_][@!*&#123;</span></span><br><span class="line"><span class="string">!&#125;*#^()_^*+((&amp;+($]!!$)&#123;@$#$&#125;*][]]&amp;&#125;(^&#123;&#123;]_]+^$+)[^##)&#125;)@^+$[[%[(_+@$$*#&amp;%%_]+&#125;[!$</span></span><br><span class="line"><span class="string">@])(])&#123;)#_$_)[$!(&#123;@#$#^#_&amp;^(_%(*&#125;^%$]+$%&amp;%&#123;&#123;!&#123;]&#125;]$*@_&amp;%(&amp;&amp;&#123;)*]^&#125;&amp;&#125;^&amp;[@)++]!(#[([</span></span><br><span class="line"><span class="string">@^#^$&amp;&#125;#)&#125;#*@)*#&amp;[^]&#123;)#*@(%(%[$&#125;!&#123;$&#125;_&#125;#(_&#125;#^^+[(#]_&#125;#&#125;__&amp;^&#123;&#123;@$+^!#&#125;&#125;[#&#123;!+#&amp;_^!_$</span></span><br><span class="line"><span class="string">+)]#%*&#123;+((*_+_]+&#123;]*)#*]*_!+_*$(!^%%#%*%^$%&#123;*@@[+[((*(!([&#125;_]&#125;@^^+(_)@&#123;[(&#123;_^]^)@&amp;!</span></span><br><span class="line"><span class="string">!+]^]#%]^!&#123;(!#)&#123;_!![(&#123;)+@&#123;&amp;^&#125;*[&#125;%&#125;(&#125;%_%*&amp;]+*)_!#+&#123;^)$##_]*&#125;@$^#()]*)@%&#125;[^_)!%++!</span></span><br><span class="line"><span class="string">_(#(&amp;&#125;#@%!)]$#^@&amp;]%[[#!)(&#125;)&#123;&#125;&#125;([)+%&#125;@[![^%_**@[]@%]*)])$+_[%]#@!$^]&amp;&#125;*!(&#125;(^&#125;+)(%</span></span><br><span class="line"><span class="string">&#125;)!&#123;^^)#+%%#[^!&#123;&#123;&amp;#_&#125;^*^@@&#125;#&#125;$(!&amp;#((_*_]_)$[(%&#125;[+^(@&#125;&#123;+&#123;&#125;][#^_&#123;]]^)!##$#&amp;!@@%@%&#125;</span></span><br><span class="line"><span class="string">&#125;_!@[##$@%)&#125;&amp;+!!@#&amp;&#125;$[]+%+(&#123;()@+&#125;]#+%_#_&#123;$_^&#125;^&#125;!&amp;[^*^[&amp;@@@^*[@&#125;&#123;+[[%^+]&#123;@@&#125;&amp;+]](</span></span><br><span class="line"><span class="string">*$**&amp;+&#123;%$@[%^]+#@]&#125;@[*%*]]@*!*%[^+(&amp;_!&#123;[%)&#125;&#125;]&amp;$^[[+_[%@!!&#125;_@!])*@^+*&amp;+&amp;!#(*]!&#125;%(</span></span><br><span class="line"><span class="string">^![%$&amp;[+*#]&#125;&amp;$&#125;&amp;_%^&amp;&#125;*!*^&amp;_[@&amp;#&#123;^%]$^[*#]^@&#123;#%)%&#123;)@&#123;)*]]!]@((![[(($$[%&#123;(!#^^%!__</span></span><br><span class="line"><span class="string">&#123;^*!*%^[&#125;&amp;]_&#125;#]&#123;_(_&amp;((([(]!&#125;@(]^!+]#+!&amp;&#125;_@&#125;@_)$$)&#125;()]&#123;_(&amp;&#125;(%%^&#125;_^+[+[$&#125;[__&#123;(*$+^</span></span><br><span class="line"><span class="string">!%$&#123;[&amp;&#123;@#%&#125;^#_*$^+%&amp;+&#123;%)]^%##+&#123;^@$[&amp;_&#123;++)_@_&#125;#[[(_+!&#123;&amp;@[!%@*&#123;_*][$$$###[!&#125;%%&amp;@(!</span></span><br><span class="line"><span class="string">@+&#125;&#123;&#123;$#%^(#@&amp;(!!_]*$[#(&amp;)^&amp;$$%#&#123;&#123;#_*^&#123;&#125;@&amp;&#123;*@$!_(+*@]@$(+&#125;+@%&#125;*+]()_&amp;_(]%)@]&#123;(_#_</span></span><br><span class="line"><span class="string">$*@]%($&#125;&#125;*&#125;$&#125;[$(!+(&amp;@+]!#+&#123;@@%%[[)#(+]&#123;&#125;+%@%+_+*+&#123;#&amp;(]$&#125;&#125;)^!*%_][@&#123;&#123;!@)&amp;%&#123;@$^&#125;!(</span></span><br><span class="line"><span class="string">&#125;&amp;]&amp;&amp;[*^@#&#125;&amp;++#&#123;]%*^@%)&#125;@)]+(_^!&#125;*^]_@#__#^#[&amp;]&amp;%]&#123;_(_&#123;)&#125;&amp;&#125;&#125;(_&#123;&#125;+(]&amp;&#123;^))&#125;$&#123;&#125;%]_]</span></span><br><span class="line"><span class="string">%)[*+_[)^]+(+&#123;#&amp;_([^)^&#125;!_*&#125;#&#125;^]&#125;^]&#125;^@&amp;($@[!&amp;#]&#123;$%$&#125;_#(^^[%@]%_&#125;]+%&amp;&amp;%$&#125;])&#123;@&#125;&#125;]&#123;@</span></span><br><span class="line"><span class="string">]!%_$&#125;&amp;#]&amp;+_](*_(*)*][]%%$#+!!^((&#125;)+&#123;&#125;%]@@_+&#125;&amp;_&amp;[&#123;]&#125;**^$^)[&amp;&#125;]^%$_#&#123;&#125;%)]+!%@!*)&#125;</span></span><br><span class="line"><span class="string">!!&#123;[&#123;*!+_^+[&amp;(_&amp;@&#123;]@+]&#123;%_+%%+][*]*&#125;&#123;^](%*)_]!$#]#@%&#125;!+&amp;][!@%[$((&#125;@[[#&amp;&#123;!^)%#&amp;+*+</span></span><br><span class="line"><span class="string">*#*&#123;@)^[&#123;_][&#123;]!*$[#@^+#&#123;)#%_^&amp;*&#123;)&#123;+[^(!^%$(&amp;$&amp;[&#123;(^!%)]^&#123;]%&#125;&#125;%&#125;#)(#&#125;#&#123;_&#125;!$$**&#123;%#)</span></span><br><span class="line"><span class="string">+&#125;***@+[!)@&#123;[+^[+[##&#125;*%$[!!%_!!@[#@#@&amp;#![%]@())_&#125;!##%+#&#123;&#125;#(+_&amp;&#123;&#125;!%_@)^&#125;++^*!%)!_</span></span><br><span class="line"><span class="string">&#123;($#[#+_%&#125;^)_^!#%*&amp;#[_#_)_[#+&amp;%_!*&#123;[!**@&#125;($!+(!__(^&#125;%#&#123;)^%&#125;[)[)&#123;^!*&#123;@&#125;]!+&#123;])&#123;]*_</span></span><br><span class="line"><span class="string">_[&#123;!_%[!#^*[&#123;#[!&#125;&#123;!($%+^$]]&#123;]*)&amp;@&amp;#&amp;+(&#125;!*&amp;])[%()*]&#125;^_+@[^+%*]%^!$&#123;@*[&#123;])&#125;)&#123;&#125;^$(_</span></span><br><span class="line"><span class="string">!(+]&#123;%(((&amp;+!*%@[#*&#125;^)_(@+*@*&amp;()&#123;&#123;@&#125;+]]+^*)(&#123;&#123;%#&#125;)&amp;(*$]&#123;&amp;$#_&#123;&#123;&#123;[@](*$[!%!@%!*&amp;!+&amp;</span></span><br><span class="line"><span class="string">^@[_&amp;$&amp;[_*&amp;^&#125;+__&amp;%[#+#+&#125;)[+#!$*#^&#125;[#&amp;*&#125;(+(]+!*]*(+(^_#_+^%]]@!][@%!+&#123;&#123;_%_*$!@&#123;!^</span></span><br><span class="line"><span class="string">$^%**@$[$^]@%+%__*&#125;+$)*(*]&#123;[$](]#)!)#@&#125;_]+**)@!%##*^#(!*!+&#125;^&#123;!)&#123;&#125;$^@_^!_%$&#125;*&amp;[#&#125;</span></span><br><span class="line"><span class="string">*^**&#123;%*#@!&#125;#+%@[&amp;##]]%+$*@[+&amp;%@)&#123;$%&#123;&#125;&#125;$^]&#125;&amp;**%$(^%%@[$&amp;)_&#125;*)*(#_#%_+@%)]*&#123;&#123;!&#123;&#123;*&#125;</span></span><br><span class="line"><span class="string">$^(_*$_$&amp;&amp;%](_@&#125;]&amp;(&amp;&#125;@$+]_%+@!++_*@*@%&amp;[*%]@&#123;)#%_]@_@&amp;&#123;#!%]+^^$*&#123;]#@[+[)^)&amp;%&#123;@$&amp;</span></span><br><span class="line"><span class="string">#++$+!#&#123;([%%+)&#125;+&#125;_+$)&#123;&#123;#++&amp;%((^^@%!&#125;^&amp;^$($#%&#125;+$&#125;([]][@^_@&#125;##&amp;_)$##[&#123;&#123;@)%&#123;+*&#125;]&#123;&amp;^</span></span><br><span class="line"><span class="string">)$%!#&#125;@!*_[_%!^+[)&#125;!#&#123;&#125;&#123;)*]!@#)%&#123;&amp;*#(&amp;_[$)&amp;)@[_+][($&#123;%%((&#125;#+[)!+[*@+$$[^$[!]_!#&amp;</span></span><br><span class="line"><span class="string">&amp;)^^@@[*^^_%_@*#$!&#125;_&amp;**&#125;@_@__%_$*&#125;^][(($$[(*%)&#125;+*$((&#125;$&#123;@^$_)$#@]!(&#125;&#123;^&#125;]!%%!&#125;&#125;^#(</span></span><br><span class="line"><span class="string">&#125;!_($(^%^]&#125;][&#123;(^]@+&#123;+%&#125;+]!&#123;%&#125;%!@&#125;&amp;[&#125;[&amp;&amp;^+!#$)]_&#123;#$[]_@&#125;_$$&#123;^%^^($%*]&#125;$*_]^&#123;%+$$_</span></span><br><span class="line"><span class="string">[!+@@)^]_&amp;&amp;[&#123;)+@!%[)+^![_))&amp;_^!(^$((!_&#125;@$+)!@]!]+$&#123;#_@^@@+_*$([##)@^^*#[]@$&#125;^@)&#123;</span></span><br><span class="line"><span class="string">*&#125;)($_()()[*!!@#(&amp;&amp;&#125;]&#123;]+&#123;[*+&#125;%_$(@(&#125;&amp;&#123;]*$!$]_]+&amp;!%+&#123;&#125;$&#125;+_**!@]_+(&amp;[$&#125;__@&amp;[!&#125;&#123;#&amp;_</span></span><br><span class="line"><span class="string">)(&#125;(+(&amp;#$($$@$))&#123;&amp;*#($]&amp;(@&#123;+*+@)&#125;+(_]()^)&#125;@$^&amp;]+&#125;#**+(%+]_*]+&#125;_&#125;$%]%)]&#125;&#123;[$*&amp;&#123;$_^</span></span><br><span class="line"><span class="string">()(]]#^*)#(*_^&#125;&#125;_(*!&amp;&#123;@%($+[](*$+&#125;_!))*$#@@^!#*$**%!!)+@+%!^)_[&#125;&#123;*@&#123;(_^#&#125;&#125;+_&#125;))[</span></span><br><span class="line"><span class="string">]&amp;[]&#123;&#123;](&#125;*#^%(!@%$@)&amp;&#125;)+#[@[(&#125;%+&amp;)_*&#125;#!)+]*&amp;&#125;+%](++**]!(([#[$*])&#125;&#123;&#123;!+_*])$$&#123;!]&amp;%</span></span><br><span class="line"><span class="string">[%]@@++#$@^_^[(+)@%_^_%+^^^*![@&#123;+%_&#123;[(([]@][)&amp;^^*#&amp;[@*^+&#125;&amp;$+@*_!!^&#125;&#123;)&amp;_!!$]@^))]</span></span><br><span class="line"><span class="string">+^]+^&#125;&amp;@@$!$&#123;*([&#125;&#125;&#123;&amp;&#123;&#125;_&amp;]#&amp;)!&#123;*#&#125;_*]_&#123;@%&#125;_]%#%@**&#125;$[#%*%([$#+)^(*^^#)%&#125;[)!+[&#125;])[</span></span><br><span class="line"><span class="string">[&#123;)_[)*@_#*($(%$&#123;[)$[%^@+%&amp;!&#125;]_&amp;(^()#()_&#123;_&amp;_&amp;*&amp;[&#125;+!$^$!]++*&#125;])$$]!&#125;[+@%&#123;!]*^&#125;(%]</span></span><br><span class="line"><span class="string">&amp;+!]]!&amp;^&#123;(*+[!&amp;]$%%_#&amp;]+&#125;*$_%!#&amp;^]*!*($_@+#(#&amp;&amp;)#)&amp;+![%[^&#123;^%&amp;&#125;@&#123;(&amp;#^^^&amp;&amp;#@]&#123;!!@^</span></span><br><span class="line"><span class="string">&#123;@(*_&#123;*[&#125;+$&#123;(!$]%![*&#125;!#*%&amp;)^&amp;&amp;@#&#123;#&amp;^&#123;)#@_(%&amp;&#125;^[!@_^+__&#123;_&#123;)&#123;$_)&amp;#(&#125;(*+)%[)@+)&#125;[&#125;#</span></span><br><span class="line"><span class="string">[%[!*@$$&#123;[&amp;^[&amp;@%&amp;]%#+_&#125;%##%$&#123;$)]&#125;@&amp;&amp;)_)*#%#$&#123;_+&#125;+&#123;*^&#123;&#123;&#123;$&amp;$^[@%[[]$@]%&#125;#$)_[^!__]</span></span><br><span class="line"><span class="string">$*]&amp;[[+([&amp;&#123;!&#125;&#125;&#125;%[&#123;&#125;#@&#125;!!&#125;^_(&#125;@&#123;&#123;$_##%&#125;&#123;]][!!@^[&amp;)#*(%^_!!%^*_][_%&#125;^%&#125;[&#125;]&#125;()]&#125;_%)</span></span><br><span class="line"><span class="string">!@_&#125;^&#123;*!$)@)&#123;#)_*&#123;&#125;@&amp;]&amp;(@()!&amp;!#%_(]^[@$*&#123;&#123;&#123;[#)*@%!@&#125;^&#125;+%^$!]+&#125;$*(_&amp;&#125;&#125;&#123;(+)%(&amp;&#123;!!_</span></span><br><span class="line"><span class="string">(%$#!^%&#123;[)##^]**@+]*+]_&amp;#&#123;&#123;&amp;%^&amp;#%)^#&#125;^)*$*&amp;)[]**!#^*@(^*^&#123;[$$$+$+&#125;+[%&amp;*%[_]^#@$(</span></span><br><span class="line"><span class="string">@)*&#125;*&#125;(+#%&#123;^(+@&amp;!@%^#$&amp;^&#125;&amp;&#125;&amp;&#125;%&#123;#&#125;+!)!^&#125;#&#123;^_&#125;_(%&amp;(#_$+!%+$*@#)%#&#123;&#125;(($!&amp;^%&amp;&#125;+&amp;@%]!</span></span><br><span class="line"><span class="string">%&amp;*&amp;)*$!##)%[&amp;)(_)&amp;&#125;*&#123;%&#123;]@[#[$@^]&amp;*&amp;@&#123;+&#123;)&#123;*^^)@&#125;$%#&amp;)%^)@+##_]$@_&#123;&#123;&#125;(&#123;+$#&#123;[@_&#125;()</span></span><br><span class="line"><span class="string">^+@])!%&#125;%^[)^)[(_$^@&#123;**&#123;(^%_[^&#123;$)&amp;*$^&#123;^#%@)](&#125;!^_#_[)!_%&#123;[%]&#123;#&amp;*(^^[[&#123;(+&#125;^%+##]@</span></span><br><span class="line"><span class="string">+^_$@&#123;^+_&#123;[+^#@)&amp;+%_+)[^&#125;&#125;*&#123;$)![#][!^@&#123;&#125;&amp;[^]&amp;@&#125;@&#123;%+@&#125;&#123;+([&#123;(](&#125;&amp;%&#125;%+&amp;^]+(&#125;&#123;][_[&amp;@</span></span><br><span class="line"><span class="string">#_#^$$[!%&#125;#@[@+&amp;%&amp;*(&amp;&amp;[&#125;@)^!@[@&amp;&#123;*&amp;&#123;[&#123;@+%)$!#!!]&#123;@(@@&amp;+)++&amp;_+)[_(@&#123;&amp;[_@&amp;&amp;#&#125;)%[+@</span></span><br><span class="line"><span class="string">^[$&#123;+![&#125;[&amp;][)(@+[+*+#&#123;*!(^&amp;()&amp;#_^(%@]]&amp;(+^)](&amp;^]@@)%[@#*[_&#125;$$]*][@(())#)@%*&#123;&amp;&#123;!+</span></span><br><span class="line"><span class="string">_[(^$@!+**!!*!#*]$*]@&#123;%&#123;$*$]*&#123;#%)*^&#125;)*$[&#123;$&amp;^(^@)%!_!&#125;(&#123;@#)%&amp;$(+(^&#123;+[%&#125;++#]&#123;[((^@</span></span><br><span class="line"><span class="string">&amp;])(^+$%@+$&amp;)](](^]@^^]&#125;%[%[**#^_$+$!_[&#123;&#125;#_&#123;)]!$@]@$&#125;+(]_&#125;^#&#123;%#$(!%+&amp;*!_&amp;%!@]*^^</span></span><br><span class="line"><span class="string">($&amp;*#*&amp;)&#123;+@&#123;$#@[()[*!&#123;&#125;_)!&amp;$%%^@!%!&amp;@$!&amp;^$_&#125;!]&amp;!]+[_*(^)_^]&#125;**&#125;&amp;%)&#125;[&amp;#&amp;[[)$]!&amp;(&#123;</span></span><br><span class="line"><span class="string">&#125;#@]_#@&#125;@$#__%#&#125;*&#125;&#123;++![#[&#125;[+@($())&#123;#^)(#$!^!&amp;@&#125;@*@&#123;&#123;+#(&#125;@+^$[&amp;&amp;%!&#123;_$&#123;$#@])&amp;_[]#)</span></span><br><span class="line"><span class="string">]@)+##@]^@&#125;@[&amp;#%_!*@]#]$+&amp;+[%+!*&#125;*+&#125;_&#125;]*^#+^#&#125;!)#!&#125;&amp;#%(&#123;@[&#123;#@$!)@!)!+%$&amp;&#123;[&#123;(_$$!</span></span><br><span class="line"><span class="string">(&#125;)$]&#123;&#125;^+_%(*]*&amp;&amp;))[])+(+]&#125;@*%!%&#123;]%@*%$_#)%(&amp;(&amp;%!#(&amp;^_*&amp;*&amp;#]&#123;]^][!(%&amp;&#125;(@&amp;&#123;[[]+$)</span></span><br><span class="line"><span class="string">&amp;%(*@@#+!_[&#125;&amp;^$)&#125;%[$%([$)!##&#123;@))^_&#125;_&#123;*@+^)[&amp;&#125;]*@^&#123;*^(#!(&amp;^@&#123;)*$&amp;&#123;(]**$*+)%$($!@!</span></span><br><span class="line"><span class="string">[*]!]_*%[]#__+_&#125;&#125;__)[&#123;$!&amp;&amp;(&#123;)[#&#123;#_&amp;()$@&#123;)+)#+&#125;#&amp;&#123;^^&#123;#^##_*&amp;#&#125;*+*%&amp;&#125;%@]_!&#125;&#125;!#**&amp;%</span></span><br><span class="line"><span class="string">$&amp;@&#123;$*]%[!@*&amp;%+%&amp;&amp;)#_+!_&amp;^^%+$&#123;!+++)+$#@[$)+%%!&#123;#(&amp;&#123;]&amp;)&#123;!&amp;@$*#%&amp;&#125;[+^&#123;!#+$&#125;++$#(&#125;</span></span><br><span class="line"><span class="string">#%$(%$&amp;#@$!))*#!_]#^@%%&amp;!*&#125;!)%+&amp;@+*$#_[__^[%+(*!*)^&amp;))(_(%&amp;&#123;&#125;#%&amp;[)+_]&#123;#+&amp;!#]](%!</span></span><br><span class="line"><span class="string">($@&amp;^&#125;_@^+%$($_$&#123;$[+@]#*#[&#125;]&amp;#!!&#123;&amp;@!&amp;@(!&amp;#&#123;[+]#*)@)[&amp;[&#125;))^[[@#!*&#125;+(&amp;)(*_*%%#!(]_</span></span><br><span class="line"><span class="string">!_&amp;!&amp;_&#123;[)%@&#123;_)&#123;_&#123;**!@[[$]__^([)^++_+&#123;+^_&amp;!&amp;$&#125;![#&#125;$$]]@[(_)^&#125;_(&amp;+_]&#123;&amp;&#125;&#125;&#125;&#123;_[][##+#</span></span><br><span class="line"><span class="string">&#123;@^&#123;+)_*%&#125;@%*(_&#123;^+&amp;)[]&amp;&#123;*(&#125;]]$&#125;&#125;^@$!&amp;[^@@^__]&#125;[^[((@*+%_%%@])&amp;&#123;^_&amp;$]#)!+!_&#125;&#123;[(&amp;(</span></span><br><span class="line"><span class="string">#&#125;&#123;&amp;^)&#123;&#123;!#(+#!&#125;[)+&#125;]$+^&#123;)#!_%_[@&#125;(]&#125;%&#125;#&amp;&amp;!][[%@&#125;^]@))+!))]#!+]*[)]_]*&#123;][$!+*@&#123;#&#123;</span></span><br><span class="line"><span class="string">&amp;)&amp;&amp;^+_*!&#125;!%(&#123;)&#125;^)))$[&amp;_%@#]]!]@)&amp;$(^&#123;@&amp;@[^_#)@@+#%(]&amp;)+!)&#123;$]&#125;])&#123;_&#123;&#125;@#%%*%#!)[]_</span></span><br><span class="line"><span class="string">_[#@@$&#125;&#125;&#123;^&amp;&amp;$^_&#123;&#125;%]&#123;]&amp;#(@_!]%_)^$$!#*@##^!($+*&amp;$+&amp;__@***][!@$]$)*$^[&#125;$^&amp;&#123;&#125;([+&#123;&#125;&amp;</span></span><br><span class="line"><span class="string">_[$[&amp;&amp;*#@[[@&amp;&#123;_$%!&#123;)[)&amp;[^[+^^^&#123;#$&amp;$_*&#123;*^&amp;)(+(&amp;$&#125;^)%+(#[%*#[*[([+[]$&#123;&amp;(&#123;%@!](&amp;]*[</span></span><br><span class="line"><span class="string">+_^[^[#&amp;)^[@$*+@@[!&#125;&amp;)&#123;&#125;&#123;^+@[)^&amp;*$]]%^_!^$+%&amp;)_&#125;&#125;([&#123;$$_][(*]$&amp;]]&#123;^)&amp;(^#[]%*%&amp;&#125;&#125;#</span></span><br><span class="line"><span class="string">+*[[@)_&#123;&#125;&amp;%&#125;_+#)!^&#123;(&#125;*^[@)&#125;@(+[#+#*&#123;$)&amp;_!&#125;[#[*+)!#%&#123;%*)#@++&amp;^]$[$&amp;#$@&#125;&#125;_)*&amp;]))#^</span></span><br><span class="line"><span class="string">(&#123;^(](&#125;+#&amp;[][%+]&#125;^(#^*+&amp;[&#123;&#123;$_$$@^(!%#^*&#123;()%&amp;$))#]&#123;(@%*&#125;&#125;))@+^&amp;)+%$^)&amp;[(]&#123;&#125;^]&#125;&#125;*+</span></span><br><span class="line"><span class="string">^%&amp;@)!_[$&#123;!)&amp;%#)^*)#&#123;)&#125;)@*_])&#123;&#123;&#123;[$@$#&#123;!@&#125;_^&#123;&#123;!_$&amp;$]+[[[))_]@)[&#123;#)$_*(&#125;*]#$#%@+]@</span></span><br><span class="line"><span class="string">$(^_[[^&#125;^&amp;%+)([#_!*&#125;)%%)![_#%&amp;%!@_^+*$*#]($(!^&amp;)%)^!#%)]&amp;!@^&#125;#_!)[*@*[&#123;!(_&#125;&#123;&#123;^^&#125;</span></span><br><span class="line"><span class="string">]@*&#123;*)!!(@+]__*@$[&#125;&amp;($[)#&#123;*[&#125;(@@%!&#125;%[&#123;$]&amp;^%)@&amp;(@][+&#123;&#125;*&#123;%++&#125;$&amp;+!&amp;[^^%]+%_(_!#)++(</span></span><br><span class="line"><span class="string">]+)($[#]@(#$+%]+$!^_&amp;&#125;+[!$)][)(&#125;((+!@&#123;^^^*&#123;[#$_@&#125;$!@%&#123;(]&#123;+^(!$*!@@*&#125;^+*!]])$!)*[</span></span><br><span class="line"><span class="string">^%[(&amp;[&#123;#@&#125;*!*$_#@@+&#123;_&amp;&amp;$@(#*_]#@$&#125;[_)*][$][_!_(_++$+)$_&#125;^++_]$+(*+!%[&#125;&#125;*_^&#125;(&#123;&amp;[_</span></span><br><span class="line"><span class="string">$[]]@@+!(_$$([#_%_$#(%!#[+)[_&amp;!_*]+!&amp;%&#125;&amp;*[&#123;]*+[!!]+_&#125;)[)]))(&#125;_$+&#123;&#123;)&#123;[#&#125;^+[&#123;@$[![</span></span><br><span class="line"><span class="string">+*!)@](%[%)!_^]&amp;@](^!&amp;**^@[^($_&#123;%&#123;++[@[@%^[#(*[+([&#123;&#125;+[&#123;%#+&#125;&#123;_+(%#*[&amp;^&amp;!)*_*+[#&amp;)</span></span><br><span class="line"><span class="string">_&#125;_^$%#(&amp;+_!#$($*^)@(#%&#125;+^($**][&#125;)&#123;+(#&#123;&#125;*&amp;^!(@#&amp;][&amp;*$#!&#123;_!*%$)*(&amp;@]^_*+^^#$&#125;^&#123;&#125;(</span></span><br><span class="line"><span class="string">+)%&amp;!)^&#123;^$*&#123;!$$[+&#123;])%_^^%!*&amp;@[%#*+##&#123;#^+^(_])$(]_!&#123;*+_)#]&#125;%]^&amp;*&#123;)(+$!_#[*^)[@&amp;@+</span></span><br><span class="line"><span class="string">^&amp;[(__+_#&#125;)_*))#%#!)(]@%&#123;^&#123;#^&amp;][_[+!^&amp;++$++_#$*(&amp;$]))@_#+&amp;#&#123;!)[%!^+&#123;%#&#123;+(&amp;$^_)&amp;]</span></span><br><span class="line"><span class="string">#^+%&amp;&amp;#(#!$&#125;#((*_+&amp;$_![+&#125;+)[!!+*]@^!_#%^)&#125;%+(&#123;![]_%@*[+(&#125;@!$%$(@)+(#)%]&#125;&#125;@]#_%$@</span></span><br><span class="line"><span class="string">_]^*+&#125;!$+]&#123;&#123;*[&#123;&#123;]%$^)[]_@&#125;#+@*[+@]^%)##[&#123;^^(&#125;_^(@&#125;&#123;*!(+&#125;]#&#123;+(@@@@@&#123;+@(&#125;*(*(%%*!@</span></span><br><span class="line"><span class="string">)@^$%#+]!&amp;^$*$#%*!+%]#$&#125;^)[@_#%*_!&amp;]&amp;!&#123;$#)$**[[*]+%#!&#123;]^@&amp;]#&#125;^^%(%!*%#&#123;@(*)![*(+</span></span><br><span class="line"><span class="string">[@(++&amp;]#!&#123;_(&#123;%+@)&#125;](&amp;*^*!&#123;$^_&#123;)]&#125;&#125;[^+)&amp;&#123;##*!++_([&#125;^&#125;)[]__@!]]&amp;^&#123;^]#&#125;@++&#123;&amp;&amp;&#123;)][[[</span></span><br><span class="line"><span class="string">&#125;[&#125;&#125;*&#123;)%&amp;]&#125;&#125;+*!$%$[&#125;[@[&#125;%*^&#123;%(^])&amp;&amp;_[*)+%*!%^[*()[)#%_!&#123;]&#125;%@)_&amp;@#$%&amp;(*+)#(]$&amp;!_*</span></span><br><span class="line"><span class="string">[#)&#123;*%+&#125;(+#@*[[_!)^%*%&amp;_#_(%^^$&#125;*(_)(@+(#+*!+*+_^$&amp;($+$&amp;&#123;@[@]&#123;%*!*_&#123;&#125;^%$%^@%%&amp;+&#125;</span></span><br><span class="line"><span class="string">((^+@&#123;$&#125;(^$$&#125;%()(&#123;&#123;^#&#123;]]&#123;&#123;#)&#123;&amp;%[!+*[)#%$&#125;*]+&#125;+%&#123;))[((##__$^*%&#123;#_$#(^))&#123;%&#125;*@#(%**</span></span><br><span class="line"><span class="string">&#123;!]^!@[$)++%@&#125;+]]&#123;]+@#!*]&#123;)+!&#125;!+_@&#123;*@__##]&amp;$)#%&#123;[#![&#123;%+_)&amp;_#**]#$]_#!*@]*&amp;(@&#125;)(]</span></span><br><span class="line"><span class="string">^_+#+$(&#123;&#125;@%&#123;^%*#()(^@%$^%%]#&#125;&amp;^)_&#123;%(!$)]&#123;@(#)*@&#125;$&amp;()&#123;*%+](_+&#125;#)(_!@*$@$]$)@%&#123;*%$</span></span><br><span class="line"><span class="string">$*!&#123;&amp;$$@$@+&amp;)#&#125;&#125;&#125;[&#123;)&#123;&#125;([+__+_+](_)@++^%[!*)(+(%&#125;&#125;+%@%!)#$*[$@)$+)&#123;_!@*&#125;!]]&#123;&#123;++[&#125;</span></span><br><span class="line"><span class="string">&amp;@&amp;&amp;(%*#$!^)*_(&#123;))]*(^)_^_%_@%(@)]]!_!)&amp;%&#123;[(]*+^+#*#^%)*[]#[[&#125;@$%#&#123;&#123;^#_+[[@+)@+)</span></span><br><span class="line"><span class="string">+!+__#[]&#123;*)^#%&#125;()]&#125;**$!%[$!*(+[&#125;!)&#125;+(_($@)[#(&#125;*(]#&#123;&#125;&#123;[!&#123;)^@*%*[!!&amp;$$&amp;(&#123;%)+&#123;#@]&#125;&#125;</span></span><br><span class="line"><span class="string">%[)[&amp;(*%[)!)&#125;$&amp;$%@&#123;*#$&#123;&#123;%&amp;[#&#125;%@#&#125;@!!*@*)(%(!_*(+]^&amp;&#123;_&#123;_(@&#125;#)[&#125;#%%^*%](_)+*@^&#123;&amp;&#123;@</span></span><br><span class="line"><span class="string">!&#123;!_*#*[*^(*%_@&amp;_^]^^#!((!*#&#123;#]#(%!&#123;)]#++@@_&amp;&#125;&amp;@+_&#125;+&amp;!#$$&#123;^^_(^%_+&amp;)!@*[(])])&amp;+_</span></span><br><span class="line"><span class="string">[(&#123;*%&amp;[%!@&amp;&amp;&amp;_*#_@&#123;_*]@&amp;$+)&#125;(&amp;)+(#]^&#125;&#123;#%&amp;([^^%&#123;^&#125;)&#123;$#](^##^%*%&amp;#%#$#&#125;*@#!$#&#125;+]!!</span></span><br><span class="line"><span class="string">&amp;*+!^%@]^&amp;&amp;++[[$&#125;+@_%)]$_&#125;*@*[%&amp;*$&#125;%&amp;$)*#*%[^@!#@%!)&#125;_![_%(&#125;!$(*_$!*]+)@]&#125;@(@&#123;#^</span></span><br><span class="line"><span class="string">[&#125;+&#123;[]#@)@^&#123;!(@_]][#&#125;+@&amp;$$#)$*_!_[@**&#123;^(+$$)!!$!](&#125;!)+)^!&#125;](+_&#123;(&#123;!&#123;[&#123;&#125;+%)$)@$%$[</span></span><br><span class="line"><span class="string">$(@^*)@!^^!&#125;#*@]%!^(@&#123;&#125;_!@]&amp;^#(&#123;&#125;&#123;](*)&#123;+&#125;[_&#125;_($+@&#125;+]@[^*!@]++_%*&#123;^*&amp;+[%*&#123;&#125;)%_+&amp;&amp;</span></span><br><span class="line"><span class="string">@&#123;@!+%*#)@^%#$&amp;&#125;^)&#123;[)&#123;]&#125;]%*&#123;+)&amp;+)#&#125;*#![())@&amp;#+!*))]%@[$$^+%#&#125;+_!&#125;&#123;#((&#125;@+]]%$)%#%</span></span><br><span class="line"><span class="string">$]&amp;]&#123;&amp;%^&#125;^(&amp;[&#125;%]#!][&#125;_]+$)$&#123;^%[#&#123;)#&amp;$+!^%@%%_]%_*&amp;*!_!]&#123;%+@]&amp;%(*[_^(_[!$]!)&#123;!*[+</span></span><br><span class="line"><span class="string">#$!(&#125;$)#&amp;&#125;^](%!(^_$]*_@!^&#123;]+)_(*^&#123;^&#123;&amp;@(_#(!+!&#125;+%$&#123;+_)&#123;%!@%++_&amp;)&#125;@&#125;^_)+___*&amp;](!&#125;[</span></span><br><span class="line"><span class="string">!&#125;(%%@_+&#125;&#123;(]$+@[+%_+$%)&#123;#[&#123;[++&amp;)&amp;&amp;^&amp;@&amp;*%&amp;&amp;&#125;@@&#123;^!*^((@]^^&#123;&#125;($&#125;_$_]@[&amp;]%++$[^#]&#123;]^</span></span><br><span class="line"><span class="string">^&#123;_@%#__%&#123;&amp;%]%_&#123;&#125;++!_]&#125;_][$+@**$^^&#123;_@])&#123;@)&#125;[)!__@_$&#125;%_$&#125;^&amp;!&#125;^@%%+&#123;&amp;^][&#125;)@*%(]+([</span></span><br><span class="line"><span class="string">[!!)&#123;[&#123;]]@^_)*!!%@(&#125;&#125;^^&#125;!@$^_$&#123;#*_@]]&#125;@&#125;&amp;[*&amp;@%[#*$]_(*%++&amp;$+))&#125;_&#125;+&#123;_!^@&amp;)$&#123;%*&#125;&#123;)</span></span><br><span class="line"><span class="string">@)]+#(&#125;(*_!*]%$@)_][)]_%#&#123;$[!%$_@)]#@]*$$&#125;[#$&amp;+&amp;%$[&#123;*@^$_%$@([$&#125;[%%_(_&amp;!^$#((!(^</span></span><br><span class="line"><span class="string">&#123;!!+!^+&#123;@$(^^@#(]$($#]_]!%[*#%&amp;_[%]]]*@^(&#125;))&#123;!_@_#(*![@&#125;&#125;&#125;$[$]^@_%%&#125;&#123;(&amp;[&#125;)!!#&#125;!)</span></span><br><span class="line"><span class="string">]*%!]!&amp;&#123;%+%@&#123;_&#125;*#_@$)^&#123;&#123;]&amp;&amp;^]&#123;+)@(&amp;+!&amp;@_*@&#125;^@&#125;%(]@$&#125;$&#123;_&#125;&#123;#*)!@!*)@%(%$*&#125;(]#&amp;&amp;&#123;&amp;+</span></span><br><span class="line"><span class="string">&#125;!(*+[)!&#125;&#125;_*_$*@($+]+#+&#123;)%_!&#123;%^!&#123;]^]_&#123;([*))!^&amp;))@&amp;&#125;*!_#^++&#123;)]$#)&#125;(#)%))+)+$&#125;)#(+</span></span><br><span class="line"><span class="string">^&#123;+))%$_%]$&amp;&#123;#+(+!+_&amp;!&#123;^(@]&#125;(@)^$$@@+_$#@^_)&#123;%)#*]+][$&amp;(&amp;&amp;&amp;*$_*&#123;*$#(*^&amp;*(_%%^*++</span></span><br><span class="line"><span class="string">$(&amp;#[&#123;@*#&#123;]_@!(&#125;#$&#123;)(!#@+#&#123;^@_^$&#123;[+]*(![$(_&#123;$%+(!+(!&#125;[&amp;)((((*^)^@%+![!_&#123;][#%++*_</span></span><br><span class="line"><span class="string">&amp;[&amp;%)$![(]#$+@@*#_&#125;@]&amp;^@@%+&#123;%(+(+![@))#&#123;$*]&#123;&#125;+&#123;[*!(^_^&#125;]%#]%+[@*_&amp;&amp;+#&#125;^[@[&amp;$_]@&#125;</span></span><br><span class="line"><span class="string">^[&#125;)![*(&amp;&#123;#&#123;&amp;+&#125;(^[)&amp;_%[@*_)(@()!(^)^(((&#123;&#125;)^&#125;_&amp;]*#[*^[@^+&#123;$&amp;#[&#123;[^%&amp;_&amp;)*&#123;[+!^(&amp;&#123;*@</span></span><br><span class="line"><span class="string">!)%&amp;&#125;&#123;^&amp;[&#123;&#123;!%&#123;&#125;([+](!*$]#&amp;+++%+($*[(&#123;_$&#125;!*^_[%&#123;*(+###^^&#123;(_$&#125;(&amp;&#125;@&#125;&#125;(@)]*%)!&amp;_%^[)</span></span><br><span class="line"><span class="string">#^+%]#*%&#123;#[%@*@]&#123;$*_$*!&#125;^)&#125;%!&#123;)[))+@[%&#125;$_#@+!_+^!&#125;&#123;&#123;#^!)[+!&amp;($![!@#!^&#125;&#125;&#123;^@*$[]#!</span></span><br><span class="line"><span class="string">%+&#123;+*)+#@@&amp;([[((@)##%@)!^[$^&#125;(##[&#125;))%%([^*+$&#123;)(@[&#125;$[&amp;)%@[$])](!]]&#123;@+)(&amp;*#*@&amp;]+[^</span></span><br><span class="line"><span class="string">)]&#123;$%$$&#125;^^&#125;&amp;&amp;^]&amp;(%@*!)%[!&#125;)&amp;(!_^]%*[&amp;)#&amp;!^+@(#%+@+&#123;*%&#125;^]$!)]&#123;&#125;]&#123;&amp;@]]$]#$_[$&#123;*@%&#123;</span></span><br><span class="line"><span class="string">(^$][(@))(!&#123;(#))%+&#123;&#123;&#123;+#&#123;]&#123;^&#125;&amp;#&amp;+%_@#$%]_&amp;($[!!&#125;]++&#123;%%(#%^(%+*_#^#[*!+&amp;$!]_(@%^_]</span></span><br><span class="line"><span class="string">$!^#)&#123;]%&#125;*_%&amp;@$$[*[&amp;&#123;*@[^&#125;+&amp;)_&#123;+])&#125;][]))%%([[[&#125;[_%&#125;!&#125;[^(&#125;^&#123;&#123;%![@+]][*+&#123;^[&#125;+++![(</span></span><br><span class="line"><span class="string">)$&amp;]_+#[+&#125;(&#123;#+&#125;*&#123;)[+[[([@&#125;)+^&#123;^&#123;*%[#&#123;^$@#@]][&#125;&#123;&#123;%&amp;]#_&#123;(%#@$&#123;)]]*(&#125;(]$&#125;&amp;&amp;@*&amp;+@](#</span></span><br><span class="line"><span class="string">_^(&#123;%+&amp;^&amp;&#125;((_#$&#123;+](+]&#125;@!]&#125;#($$&#123;&#123;!&#125;[&#125;&#125;$[&#125;&#123;$&#125;#*((&#125;%[)&#123;*%+^&#125;]%+](&#125;&amp;&amp;%][!#$]#[+@&amp;&amp;&#123;_</span></span><br><span class="line"><span class="string">*&#125;&amp;!)%)%%*&#123;#%%@__[_+%^@&amp;$#@(%*+^$_[)%(&#123;*$()(]@*[^_*%&#125;*%]%[%+#_))^@(+$#_+&amp;(_@]$&amp;@</span></span><br><span class="line"><span class="string">*&#123;&#125;_^@)&#123;)*((](@$&#123;&#125;[%!)_+!!%^*&amp;$&#123;([^+$**^_&#123;*](&amp;(&#123;^%![&amp;_$%!]&amp;%%[@]&#125;&#125;%!^^$%@&#125;]@%(!*</span></span><br><span class="line"><span class="string">+%(*$[&amp;@]*(&amp;@[#&#123;_%!^&#123;)!*!@_]^[(&#125;*]&#125;(!]__&#123;)!**&#125;(!&#125;++[$+([!]*()$&#123;)&#123;+%_(!&amp;[&#123;*]])#]&amp;</span></span><br><span class="line"><span class="string">++(_$%_!])$))((_^+[_&amp;++@_$&#125;%*!&amp;&#125;&amp;[%@@_&#125;)@%)[&#123;&#125;)^&#123;*%@]$]!#%*#%%*%+*&amp;&#123;^*&amp;](^&#125;#*!*_</span></span><br><span class="line"><span class="string">#_%@([]^*][%!&#123;@)#&#125;[])($[]*()_*[@)^&amp;!%+]%%]&amp;&#123;(^&#123;&#123;%[!!!!_#+!@$]&amp;#((&#123;!_*]]+&#123;#**^*&amp;)</span></span><br><span class="line"><span class="string">$!$(#[*&#125;+&#125;*__$]!])#$!&#125;]&amp;&#123;]_&amp;#*_[^&amp;&#125;(@*[##^*!&#123;)[+[(&#125;_&amp;@+&amp;+&amp;_(#@[&#123;^*[]&#125;$&#123;^*&#123;!@+$^$</span></span><br><span class="line"><span class="string">#^]$&#125;((&amp;)&#123;#@^*&#125;_#]##&amp;@@![@$[#^@&#123;&#123;#@](+^+^[)&#125;^@%)@&#125;&#123;*_&#123;&amp;+[&amp;&#125;&#125;&#123;@+(#+&#123;#]@#^!(%&#125;))&#125;^</span></span><br><span class="line"><span class="string">&#123;__&amp;(]&amp;#$@&amp;!@(($&#123;))_^!][$)%@&amp;%(&amp;_]]^)$@$(]&#125;&amp;$)&#125;&#125;$)(([&amp;&#123;)&#123;%&#123;%&#123;^#!%+)*&#125;#@_%&#123;%*#@[@</span></span><br><span class="line"><span class="string">(%&#123;^&#125;(@$$(^_]($)]_*&#125;&amp;+&#123;^$%!%@$)!#$+(!*^&#125;&amp;(*!(+!$_^#&#125;!*&amp;@_%%&#123;#!$+)]@&#123;&#125;((__$&#125;&#123;[!(@</span></span><br><span class="line"><span class="string">#[](]$!_#%&#125;&amp;][!!&amp;***(#(@(!@!+)&amp;!&amp;(*$+@#$&amp;]@^_&#125;&#123;((^!@!_[^)##@([&amp;]()[&#125;()+!(+!]#@[&amp;</span></span><br><span class="line"><span class="string">&#125;[&#125;*(+)[*$*@_&#125;[+&amp;&amp;&#125;**_+]+]+#*$(%)%&#125;[+&#123;)*[&#123;)^#%$]&#125;&#125;(^[&#123;%]%#+[$%&amp;*#][++&#125;&amp;)@^^]&amp;([(</span></span><br><span class="line"><span class="string">*&#125;]#!_@(!$)@)]&amp;^[_@&#123;+%@($&amp;#&#123;$%@&#123;#!(&#125;(@[^[#__[!]&#125;$+#__*&amp;#^+[#]&amp;%(&#123;@_(%&#125;^[]!)$&amp;&#125;]$</span></span><br><span class="line"><span class="string">&amp;&amp;*&amp;()&#123;[+#%($]^&amp;[($(@$^*[^%](*#[$_*&#123;&amp;&#123;!_#*&#125;$&amp;]&amp;&#125;^&#125;_[&#125;&#123;@*(!@**^!()]#%$[^&#125;&amp;]%&#125;&#125;^%&#125;</span></span><br><span class="line"><span class="string">^^$*[$+*![%++(&#123;&amp;^^_@&#123;[)_([@*#)&amp;_+$&amp;&#123;[&#123;(+[&#125;^_!_^#&#125;++*$$+^)&#125;%]@*#(&#125;%^!)^&amp;)_&#123;)&amp;&amp;@][</span></span><br><span class="line"><span class="string">@@&amp;&#125;&#125;![+!%&#123;+*#&#125;(#[%*#@)&amp;$(@(_$(]&#125;]&#123;%&amp;]^)&amp;&#125;]_#$@(_&#125;)$$^]**&amp;$_%!!##)+(%($([!&amp;$[@$&#125;</span></span><br><span class="line"><span class="string">(^][&amp;&#125;$]##(&#123;[)^$[*&#125;@*)(^]$+($$+]+[]&amp;!&amp;*(&#125;$]&amp;[&#125;&#123;_^&#125;#]*+!!&#125;&#123;__^+$&#123;%%!*&#123;*&#125;&#125;)&amp;](+^&#123;^</span></span><br><span class="line"><span class="string">_(*#*^&#125;*&#125;&#123;]++_([##$%&amp;[$%]**#$!&#125;%[)&amp;(](!((*_(&amp;_]][(_!&#123;_@]!%@+_)&#123;+)]@&amp;[&#123;[(_$()&amp;)[#</span></span><br><span class="line"><span class="string">[_(*@*_)([_&amp;![+&#125;&amp;&amp;&amp;)!($@*&amp;[&amp;#$&#125;$&amp;(&amp;!&#123;(^&amp;*[^+!+&amp;$&#123;&#125;*!(*+*^&amp;(&#123;+%*(&#123;+@_[*+$![^!!^[+</span></span><br><span class="line"><span class="string">&#125;)$(*@&#123;](%***+@&amp;!_&#125;*]#!&#125;(^%!$%$()&amp;&#123;$)@@[&#125;*&amp;+!(##^+#*$#*)(&#125;&#123;(_]@%!@!)!%%[%%$*$$#(</span></span><br><span class="line"><span class="string">&#125;!_+*!(^!@[$)_&#123;[@&#123;@&#125;%%@^##$*[#++_(]#&#125;!)!^_%%][[&#125;#&#123;&#125;*[[$#!&#123;*(+)$$&#125;@^&#123;^$$$+]^]$&#125;$%</span></span><br><span class="line"><span class="string">))@[&#125;@][_((_%@+#_&#123;@)#_*)_*]@%$)!!&amp;!_)&amp;%(&#125;&#123;[#++*&#125;!]&#123;)_$[&amp;([!^[)&#123;&#123;&#123;+]%@%[)&amp;@](^&#125;(%</span></span><br><span class="line"><span class="string">[(@(**__*&#123;$$%&#125;&#125;!#@+@&amp;$!_#!@]@)]&#123;+]&amp;))(^_&#125;[%&#125;#@^&amp;&#123;&amp;_(&#123;+_[_()()&#125;__+##+_^+!)%!#[!![</span></span><br><span class="line"><span class="string">@$*]^]!^&#125;[)#%!]+$@%[^**&#123;*+!*@&#123;&#125;$!]%[(*(]+)+!)&#125;[^&#123;+&amp;&#123;[&#123;%&#123;+$))(]^%(@%]&#125;&amp;_(%@$)_$+)</span></span><br><span class="line"><span class="string">&#123;($#%_!%!&amp;%!@^$@)&#125;&#125;%[_%@&#125;$@!^*!%$^%+%)!]_[)&#125;*&#123;&amp;%^$$)&#125;+^!_][^&#125;@##%#$&#125;*!&amp;*@%&#125;*&#123;&#123;%#</span></span><br><span class="line"><span class="string">$**!_$!#&amp;+%@^@@#@%!#__(#[&#125;)^(&#125;@&#123;(]$%!@&amp;&amp;@*++)((@#[@]]+@@&#123;*++$$(%&#125;&amp;_[*%#(](_!*&#125;[#</span></span><br><span class="line"><span class="string">$]#%&#123;%$&#123;!!#^!#&#123;&#125;@)]$[%$(&amp;[!&amp;#![&amp;+([@*&amp;@]!&#125;[[*+)%][*&#125;@&amp;!$*]_*+++&#123;!!*!_+%&#123;*++#*^#&#125;</span></span><br><span class="line"><span class="string">(&amp;!@!+!#($@%+[))*&amp;]*&amp;%)$+_**%^]&amp;%&#125;)+]&#123;&#123;&#123;(#&#123;$$[$[[*&#125;$%!]!+(*%*$[[+_(&#125;[&#125;+&#125;*&#123;$)^]&amp;*</span></span><br><span class="line"><span class="string">!#%^%^(@*&amp;$(!$#$^(&#125;+[&amp;##(&#125;)$+#!(*]!]#!^&#123;+%$(&amp;**#^&#123;!+_#&#125;&amp;%^&#123;]$+[!&amp;&#125;^@@+*#_+#)@]$$</span></span><br><span class="line"><span class="string">]&#123;%]&#123;%&amp;^#!@@)&#125;*)(]_&#123;&#123;@^&amp;)&amp;(@%&#123;@&#123;++&#125;_^&#123;)]#+*)_&#125;@)[&amp;[(^&amp;!&#125;_^&amp;)&amp;@&#125;*((%]][$$#$[&amp;!&#125;$@</span></span><br><span class="line"><span class="string">!#&amp;^^^&#125;_^&amp;!#%#$![)(]_)^&#125;@[&#123;[)*&#125;[#@(*&amp;#^*%*[_&#123;)([&#123;[(](+&#123;^)@#&amp;_%_&amp;+&#125;@^]$_@(&amp;(_@![)</span></span><br><span class="line"><span class="string">#_!&amp;_)^[[#$(^#+&#125;@#&amp;[!##_&#123;!^![&#125;@#+))&amp;**$((*^[#]^!%^]_(_#$+^[]&#123;)*+]!%@+@&amp;+$++&#125;((]]</span></span><br><span class="line"><span class="string">]+)%])&#123;($)$]&amp;*$*]_)(&#123;#&#125;))!]&#123;[*+&amp;%[$!#^^%#[($^*$_#^(+)^#&#123;!#&#125;%&amp;*#^]&#123;$)%!](*$$*%+]%</span></span><br><span class="line"><span class="string">##*_&#123;)^+@(]&#123;_#))+*[+$#^@]+)@!*#%&amp;)[&#123;&#123;&#123;&amp;&amp;*_%&#125;%]*(+]&#125;[#$$)*$$$&#125;!&#125;*&#123;@%!+)^]%((&#123;+&#125;&amp;&amp;</span></span><br><span class="line"><span class="string">[__$#)(%##*^&amp;&#123;($#+!&#123;&#125;)#^&amp;#!%^$*#]+*]*[&#123;[*$*!^&#123;&amp;+#(@@##($!#_^*_+($$_%@[^%^[)$_$&amp;&#123;</span></span><br><span class="line"><span class="string">%!&amp;#*&#123;*[&amp;&#125;](*&amp;)*)!(%%#$%)[&amp;_&amp;]@&#123;*%+@%@%**&#125;&amp;+]+!*][&amp;^)%_^@@&#125;#%%&amp;]#$$&#123;%&#125;_[@(%!+&#125;))</span></span><br><span class="line"><span class="string">(+[#_&amp;[$#%%__+&#123;+[[([)@[&#125;(&amp;^(_$)#[&amp;!)_##*&#123;__@&amp;!^@+[!_&#123;(*%]!+^](&amp;@&amp;!&#123;]&#123;^^$)(#]%+@@</span></span><br><span class="line"><span class="string">!&#123;_]#@]&amp;%((+&amp;+*@^@$&amp;&amp;$*&#123;+##_&#125;&amp;_(!%(^&#125;%)#&amp;_^$][]#(^@@(@+&amp;(%![(&#123;&#125;[$&#125;_$%*]!)$#&#123;$@[#</span></span><br><span class="line"><span class="string">(%%]@&#123;$(^&#123;$(*$(*#[^]&#125;%%(@%@)&#125;@[^+)$+![%[(!&amp;+&amp;(_*@^@_$(]_@]_[]#&#123;^@%_!%&#123;+][]$&#125;__!#</span></span><br><span class="line"><span class="string">*[(!]&#123;*&#123;[^)*(%[%*!(]&#125;%*^_&#125;&amp;[)+(*_+(#((]]&#125;$![@%&#125;)[+__!&#123;(#+&#123;%!&#125;#&amp;&amp;^%+*%(*$%&#125;+_#&amp;&amp;*</span></span><br><span class="line"><span class="string">^@_)&#125;+$(^&#125;(([^$&amp;^((*+*!&#123;%_[&#123;))$$+]%_&amp;%!]#&#123;&amp;!#^^%(^$_#&amp;!^@]&amp;*#]&amp;))$])+$^](^^]))+@</span></span><br><span class="line"><span class="string">&amp;[($&amp;&#125;#]__%(&#125;&amp;_&amp;()*(&amp;#*&amp;)))(%+]&amp;_(*#^_&#123;%&#125;$@[$#*&amp;]+&amp;%&#125;+^)^&#123;&#125;]*]_@]_&amp;&amp;%@!&#123;%$^&#125;$##$</span></span><br><span class="line"><span class="string">)*^))+(&#125;#^!(&amp;([$$](*_%)$&amp;(#!__%+)^@)$**%(%_]&#123;)^)+@^!))+$@#&amp;^!&amp;@!^&#123;&#123;)##%&#125;_&#123;%&#125;%[^$</span></span><br><span class="line"><span class="string">&amp;!]&#125;(&#125;]&#123;#^##&#125;#@[!)&#123;*!%^()!&#123;_@&#123;*+%_$+#*&#123;@&#125;]_]^&#125;[]*[#%_!%&#123;*(*(&#123;!)+]&#123;&#125;)!&#123;[!&#123;[!#&#125;@)&#125;</span></span><br><span class="line"><span class="string">!*#)[)%(]_&amp;)#%&#125;(_&amp;(*&amp;$&#125;%*$&#125;%))&#125;(%]]@*_&#125;@+%]&#123;@##(!@_+(^%&amp;^]]#_(!#&amp;+@(+^)^*[[!&amp;+&amp;*</span></span><br><span class="line"><span class="string">^&amp;&amp;+[!_$*)&#125;&#123;]&#123;!&#125;_@_]*__*)]&#125;(]_(]#_!_)#^!!$#**#^](!++*[)(]+(&amp;*(!_^@*#]&#123;!!&#125;^$(_#(_</span></span><br><span class="line"><span class="string">]!__!^%&#125;&#125;+%)+$]_*#&amp;++]##*&amp;!$]&#125;+^_*!]%])(++&#125;)!#&amp;$()##!%^&amp;&#125;][)[_&#123;&amp;]]]@%(&#125;][(]%&amp;*%]</span></span><br><span class="line"><span class="string">!)@]&#123;##&amp;&#125;#!][%!(^)#)]!#^!%!#_(#%]&#123;_&#125;%(&#123;)&#125;%+&#125;]()$$)$(((&#125;*&#123;]!_])$!)%[#&#123;%)!&#125;&#123;%!@#)&amp;</span></span><br><span class="line"><span class="string">&#125;$&#123;&#125;$[@$]&amp;)^@**($][&amp;[&#123;&#123;!)+@#&#125;+[$$(+*[_&#125;&amp;@*^%]&#125;&#123;_[$(#&#123;$[_!)##$&#123;[(*(^($@(^_##&#123;#&#125;[]</span></span><br><span class="line"><span class="string">%(+%&#123;!$&#125;(&amp;$!)])&#125;!]]))]!^)*&amp;^@[%)*%&#125;*(^&#123;&#123;)+_&amp;%_%$$(!$$&amp;(&#123;[&amp;&amp;)^_&#125;#!)%$$]*))_!+]]&#123;&#123;</span></span><br><span class="line"><span class="string">]&amp;@&#125;^&amp;[)&amp;)!&#125;!+_[$)%!!)%($)*!^[^+]&amp;*[))+)^(#&amp;%^+&#123;@][(@%$!^#$^]_[(((&#125;(&#125;)*@])@)%&amp;[[</span></span><br><span class="line"><span class="string">+@]&#123;%%!&amp;&#125;%#[_^_#+)[&amp;%$&#123;)[_^@&#123;&#125;]^&amp;&amp;&amp;^@(&#123;#$+]]]*#[%)[_&#123;!)%)]![[##*!]_+_(+$&#123;[@^&#125;!#(</span></span><br><span class="line"><span class="string">^^*(&#125;&amp;$]&#123;*()!#]([%$^$[)+)!%&#123;(__!&#123;$$&amp;%&#125;+!*(&#125;%#[[+&#125;]+$$%[]*_&#123;(^@&#125;&amp;@%@+((*!@[%+[+)#</span></span><br><span class="line"><span class="string">!!_$@@+%@*%]&amp;#+@%%&#125;[*&amp;+!]&#123;+&amp;&#123;&#125;_[#_%^&amp;)]&#123;^[&#125;^&amp;+[&#125;&#125;^&amp;&#125;+*[[&#123;&amp;&#125;[^&amp;&#123;[&#125;!+[(_%)!)&#123;(^__(</span></span><br><span class="line"><span class="string">^%&amp;@%@#!%@$*(*([([&amp;&#125;$_&#123;+**%&amp;%%&amp;^![#]^[_&#125;#[]%@]+[]&amp;[&#125;@&#123;!^&#125;%#%&#123;]^#@&#125;#&#125;)@$_&#125;&#125;&#123;&#123;&#125;#]&#123;</span></span><br><span class="line"><span class="string">*^^[^+&#125;(*&amp;&amp;^&#123;*&#123;[_&amp;[]+^[(**&#125;$^)+**(&#125;]^@^&#123;$*(]%])##+[!(_&#125;+&#123;($[+*@&#125;&#125;*[$*_@)&#123;_&#123;_%!#)</span></span><br><span class="line"><span class="string">$&#125;&#123;@[#!(@+@^&#125;#&#125;(^($#&#123;[()%&amp;*%_#@&amp;$[^[(@&#125;%*$^*_%&#123;)[](@+$*&#123;(+![]&#123;$%%&amp;[(]__+)]^$*_^]</span></span><br><span class="line"><span class="string">&#123;@[]$*(&#123;$&#123;#(%&amp;+!)$^(#!&#125;_&#125;&#125;%%@&#125;^]((%&#123;)*$&#123;([_+@^+]$&#123;)&amp;+%(@)!&#123;[(+*&#123;[__*&#125;*%)$&amp;^$%[$)</span></span><br><span class="line"><span class="string">_[[%]!(&amp;&#123;(&#123;])*][&#123;!%_)@%!%_&amp;)_+(@!*)(]^&#123;)$)^*)*&#123;[+$#(&#125;_]_%_*+^[_)*&#125;(]&#123;)&#125;^+[&amp;[@$&amp;&#123;</span></span><br><span class="line"><span class="string">#^)%(+@@+#(]**[#^[!($_]^@&#125;+]_$[!(%![$$^!#+&amp;$&amp;#[*&#123;]&#123;$!@&#123;&#123;]!![&amp;^%&#125;[&#123;(_)[@**_]&amp;())^</span></span><br><span class="line"><span class="string">*+^_)(#!$%#&#123;)^$%(_[^%%*(&#125;&amp;!&#123;@#^@#)](]++%%]$^*)@+]&amp;_^(^@!&#123;%%(&#123;[([$]&#123;&#125;%]^*+%^*$(%^</span></span><br><span class="line"><span class="string">$]_!&amp;++!)*+%*)@#&#125;!)@)_*]&amp;&#123;)[**)*[@[%&#123;(%#)%$!*&#125;&amp;%[^]*_+&#123;(!+&amp;%(_]&#123;#(!#)#!]]&#125;*^+[&#125;+</span></span><br><span class="line"><span class="string">[&#123;(%!&#123;(*_)_[@^&amp;_+&amp;&#125;@&#123;#+^$^*$[+!+(!@+*[@!+%]_^&#123;[][#^)([&#125;&amp;!_@_#_&amp;_)!+*&#123;$[&#123;#^_$&amp;&amp;+&amp;</span></span><br><span class="line"><span class="string">#(*+##$%$+&#125;$]%&amp;]&amp;(+!+&#125;)$]![]%_]]+&#125;@&#125;^*^[!])@(!_[]+$*&#125;@][!&amp;)%@^_!#%^[@&amp;$(^_(&amp;&#125;)%&#125;</span></span><br><span class="line"><span class="string">(@%@[]+%&#123;)+([!(!@)&#123;!^_$]&amp;*(+@#]#]&#123;#)#+][#*#![[_)&amp;@(&amp;+$#*!_*[&#123;&amp;)](&#125;!%+$&amp;&#123;#$&#123;&#125;]^&#123;+</span></span><br><span class="line"><span class="string">)!&#123;^&amp;@[@$%^[!^@#*#@!%!]&#125;$^&#123;&amp;$$*][(%$]^]&amp;]@_&amp;$!$[&amp;&amp;[^*&amp;![$^&#125;$+&#123;_&amp;!@%[%(_)]&amp;^!!*_&#125;</span></span><br><span class="line"><span class="string">*[^]&#125;&#123;&#123;_@^^!&#123;##%&amp;]$(*_)#+&#123;&#123;[$++]%%+(&amp;^$#!#$^&amp;)&#123;!_+!@[_$@_+](%#*#!&#125;[&amp;$&amp;#[&#123;)$+#@+)</span></span><br><span class="line"><span class="string">%[)[+$$*&#125;#[*$&#123;$)[%$!$)*(]([%@%#)!(^#!)[]@]&#123;)&#125;*(#()&#123;^%)@$&#123;$#&#125;])@^(@#!&#125;^(&amp;]%_]^@@$</span></span><br><span class="line"><span class="string">_%+[%&amp;&#123;_(($+[_!#)]+*)[^&amp;*%$*^]!^+&#123;&amp;*%&#123;^(%))[(]&#125;$&amp;&#125;)($&amp;@((%#[)_%^]_#&#123;**&#125;+&amp;[**_&amp;[[</span></span><br><span class="line"><span class="string">](+]&amp;&#125;&amp;#[!#[)^^&#125;@^)+&amp;(&amp;@[&amp;!!)$]*&#123;&#123;$**)^(*[)$#&#125;*)_&#123;@(&#125;&amp;^$#([((*_]&amp;^[!+()(&amp;)(^]#*%</span></span><br><span class="line"><span class="string">]&#123;(&amp;!!%+#^^!#&#125;@@&amp;+[&#123;@@$^&#123;+%%&#123;&#123;!&#125;**%!*+_#!_([(!*%!@)(!@)[+*!!*_+_[%_&#125;]&amp;)$^&#123;!)+!*]</span></span><br><span class="line"><span class="string">)_)&amp;*]!&#123;]($&amp;[&amp;*(*##&#123;^%*_#!&amp;&#125;&#125;&#123;)%#&#125;^@#@%$&amp;]($(_@[&#123;##&#125;)^(%+%)$(_[#@_)[)&#123;@[@)+)#]+^</span></span><br><span class="line"><span class="string">%&#123;[!])]^]_[%%]&#123;&amp;%#&#123;!*_$[%@&#125;@^]@)!#(&amp;#&#123;(#(_&#123;([+@)%!@(@[$$_$_!@_$&amp;[))*&#125;)&#123;+(]&#125;(*^[)</span></span><br><span class="line"><span class="string">%!@!!!%&#123;[(&#125;&#123;$$@%$&#125;+#)*[^$&#125;(&#123;)*&#123;(@*(%]&amp;%#%)&amp;+[+$[]*&#123;%)$$##)+&#125;&#125;!+@!%_$#+#!)[&amp;%&#123;*!@</span></span><br><span class="line"><span class="string">#&amp;&amp;&#123;&#123;^+[&#125;@$$)]*&#123;!_]#&#125;+^&#123;&#125;*%*$[$)@@^_!*^#*(+&#125;_()$@%$#)&#123;_!&#123;_%!$&#123;_^!&#125;&#125;!^$#_]$)^]*)]</span></span><br><span class="line"><span class="string">]&#123;++&#125;(!&#125;&#125;%@*[!&#123;**_+^#^!(+%[^)&#123;_&amp;&amp;($!(!!@*)&#123;_)[]$($&#125;@[&amp;$!![_#+&#125;[&#125;%#@&amp;+%%&#125;*&#123;[@#&amp;)(</span></span><br><span class="line"><span class="string">]#!_][+&#123;[^![_([&amp;&#123;&#125;)$*(&#123;**@+#]+%#(&#125;(^!+@&amp;&#125;]$[&#123;*#++&#123;&amp;^@&#125;&amp;@!)_^&#123;%[&#125;)))%%&amp;((#&#125;&#123;#]@*%</span></span><br><span class="line"><span class="string">@+$%_[(((!&amp;&#123;@^#[$#$@@)_&#125;^)&#123;&#125;%_**)&#123;^$+)*$+[%!)^%#&#125;&amp;)(@^_&#125;&#125;[+_[&#125;&amp;@#!*$+!&amp;&#125;[_&#125;)*[_)</span></span><br><span class="line"><span class="string">+*(&#123;&#125;&#123;*&amp;($(&#125;)@]+#_&#123;!!@*%^_$+#($(&#125;%&#125;&amp;[!*&#125;[$^&#123;(*#[#%+&#125;%$&#123;&#125;^*[#&amp;&#123;!&amp;@(%^^&#123;+_&#125;@&#123;*[%!!</span></span><br><span class="line"><span class="string">]_]&#123;&#125;&#123;*&amp;%([)&#123;$@*$_$+^&amp;!_()&#125;&#125;[!$&#123;^&#123;&#125;@&amp;+&#125;#(*!&#125;@+[*[*(*[%!^*+$]^[)$&#123;*@#]_@(+%[)$#!]</span></span><br><span class="line"><span class="string">&#125;#%&#125;+))(&#125;+$)]@$^*$^$+^[#$&#123;*#%]&#123;)@$@(_@%(@#+$]+((&#123;@!#$__&amp;*[[*&#125;[!!+#%%%*(*%&#125;%*&#125;(*+</span></span><br><span class="line"><span class="string">@^+(&#125;&#123;)#_&#125;^)[$%&#125;+]^&#125;$()@#%#&#123;!*&#123;!(%%[!(&amp;_![_#)_]&#123;((!]%+^(#@[!]%&#125;]%+@[)^@^]#&#125;[&#123;$(_</span></span><br><span class="line"><span class="string">#_&#123;+[)^&#125;))%%#!*&#123;+[+&#125;&amp;%_$@!_)@$)*&#123;]*[&amp;^!&#123;&amp;&#125;$%([$]+)&#125;#$@#]&#125;&amp;*@$+_($])#_(#+[+@*$&#123;*^</span></span><br><span class="line"><span class="string">!%!!^&amp;*^+&#123;*(*@$((]_$_*+]!&#123;%^$)#__]*+@(__$%&amp;#]@#]%(&#125;$*)#*!(^#_]&amp;&amp;))(+]@%(_&#123;__+%)!</span></span><br><span class="line"><span class="string">+&#125;&amp;(%*!]][!&amp;)$&#125;([)$@&#123;*&#123;&#123;##+&amp;&amp;@_]%(*+(&amp;@_@)*$&#125;^#[+!@%_$@&#123;&amp;!]+&amp;)&#123;&#123;(&amp;&#123;]#&amp;*!@&#125;*[%[@+</span></span><br><span class="line"><span class="string">&#125;[+]](]_(#*&#123;#*&amp;%_*@$!_)^!*%#^+$*](*&#123;$!&#123;#)]^!&#125;&#123;+)^&#125;][^%(%@(&#123;)&#125;&amp;_&#125;+]!&#125;%)&#125;&#123;&#125;&amp;$%$&amp;&#123;^</span></span><br><span class="line"><span class="string">&#123;+[@#@$)@[])__$^&amp;++]+(%*[#]%#@([#](&#123;#%&amp;%%^+&amp;+(](@&#125;@&#123;@*([$)%%&#125;&amp;$%[+[[(@![#@!)(!*_</span></span><br><span class="line"><span class="string">[](&amp;#^!(@$]**_&amp;*#!_[$]#__+$_$!$&#125;[](!(&#123;&#123;&#125;%[^@&amp;&amp;&#123;+&#123;&#125;&#125;%+(%%%#)#]*!][_][&#125;$+[)#)$&amp;**)</span></span><br><span class="line"><span class="string">)[*#&amp;#(***+@&#123;&#125;^@$$!]&amp;+%&amp;&amp;$]##!@)%@#!&#125;&#125;%%_*%[^)]%&#123;%)%^[&#125;&#125;[+&#125;#+*(&#123;_*%*!](&#123;#&#125;+!*_)#</span></span><br><span class="line"><span class="string">*]([*$@+!_#&amp;@#)&#125;&amp;!(%)&#125;&#123;(+!)]&#123;_^#&#123;+%&#125;&#123;[!^(+@!++$)&#125;&#123;[_@[)$]_)%#*+&#123;)&#125;)($**&#123;&#123;]&amp;^*_^%</span></span><br><span class="line"><span class="string">[)@#!&#125;%!+$&amp;@]@_&amp;+*$[$_(&amp;(&#125;@)()_^([%!^^*_+*&#125;^))#))$!!]$&#125;^(#&amp;#$$[&#125;^_!])&#123;^%[]^&amp;_(**</span></span><br><span class="line"><span class="string">^!&#123;_!!%])[__^)^%&#125;_^))_($@&amp;$*#&amp;+#)!&#125;[@%+%(&amp;&amp;$$%#++%^%&#125;+$_%%!_(@(+!@$[&#125;^]]!*^&#125;#_&#123;&#123;</span></span><br><span class="line"><span class="string">*&#123;*&amp;$&#125;$+@[!@&amp;)])[&#123;%]^($]%&amp;#^+&amp;&#123;[[(&amp;^]#&#123;&#125;&#123;&#125;*!&#123;_!*+_&amp;)(]%_&amp;__$@&#123;]_)^#_+&#123;*[+[^($^[@</span></span><br><span class="line"><span class="string">)(+%_&amp;($]$)&#123;!#_%$!)$(^$%)^[_*$$*#&#123;([^$_]%&#123;%%+@]^&#123;)&#125;]+%$^%[)@^+(+&#125;_+)$#)##][&amp;&#123;^$^</span></span><br><span class="line"><span class="string">#&#125;@&#125;%]+*&#125;&#123;^)*$)^!#)%()#)]$*@*(&amp;&#125;$#%&amp;%]#*%&#123;##^_(*(][$[_$@$&#123;#&amp;%)#%%&amp;&#125;]^_%*_@!)&amp;%&#125;_</span></span><br><span class="line"><span class="string">(%*@!&#125;&#123;%@@)^&#125;#&amp;&#125;&amp;&#123;%__&#123;@^*&#125;#)([+![]&amp;_%@#$%^![&#125;](_%]$_&#125;*&amp;^&#125;$)*)&#125;&#125;&#123;$[@+&#123;^%*(@#[&amp;[!^</span></span><br><span class="line"><span class="string">(*+%&#125;(^(%!%^!+)!!)[#+_^+&#123;+)]+^$%&#125;&#123;_]^@*@%#*#*%[^)&#123;([*[__##$)&amp;&#123;&amp;+_)%$^&#125;_@&#123;^__)%[)</span></span><br><span class="line"><span class="string">+^_[)!$]^#(+^)%(&#125;!]&amp;__[]^!@&#125;&#125;@&#123;*+!*!_*+%($^$&#125;&#125;[()]_!)(*)[&amp;(+!(([#)+[%^(&amp;&#125;$&amp;_&#125;[&#123;&#125;</span></span><br><span class="line"><span class="string">(%*!+[+[^[#][&#125;@+!^*^%[&#125;$]@!%%(%[[(#_+&#123;#(&#123;@&#123;&amp;[$_%)+$%&#125;@&#123;_+[&#123;&#125;+]![&#125;@]+[#&#123;&#123;]))&#125;+#[*</span></span><br><span class="line"><span class="string">#]**@$@@+_@)[&amp;[#$+]&amp;]&amp;*$()[#^&#125;)()$$#^*+^+%]&#125;^]]&amp;%(#&#125;&amp;(+!%]%]](!#+&#125;$%^_^^@&#123;&#125;+*&amp;&#125;_</span></span><br><span class="line"><span class="string">_%&#123;#*!&#123;!@]@$&#123;%!_$&#125;#_@_#(!(^!#_*#_$&amp;@(@^]_@%)!^&amp;^&amp;&#123;%)(&#123;+&#125;&#125;_&#123;%%]%^&#123;&amp;&amp;^@_@&amp;&amp;^[](&#125;(]</span></span><br><span class="line"><span class="string">_&amp;&amp;^(#_])*)+_]!+&amp;)$%+[]()&#123;)+_#*_#[[[%$!^#!!$(_^&#125;(#%(&#123;%$!_&#125;$&#125;(()$]!&amp;]&#125;^^)+&amp;+!@%$@</span></span><br><span class="line"><span class="string">#[_$%!(&amp;[!]@[#]&#123;&#123;*]*(@&#123;+&amp;#_^*[!&amp;)#$_)%[!&amp;!))%@&amp;&#123;[)@![[^[+&#125;&amp;#*$*&#125;+!*&amp;&#123;@(%&amp;&#125;[$^&amp;%_</span></span><br><span class="line"><span class="string">!!!$+]&amp;@&#125;)%%[@[&amp;%!($_)@[&#125;(&#123;_[$#&#125;^&#125;@)(%%^^*&amp;&amp;+]%]&amp;$_#^!$!(_$%&#125;*_$_!#!_@^^)$&#123;*)%+!</span></span><br><span class="line"><span class="string">$&#125;)&amp;&#125;*&#125;#&amp;([[+^[)*#&amp;%&#125;+[*_+!!&amp;_@%!^##&amp;&amp;&#123;#%@&#123;&#123;*%_+%_&#123;(&amp;#+&#123;[[[*$(%&amp;&#125;(()#)[!%)%@&amp;&#123;[#</span></span><br><span class="line"><span class="string">+_%(()!!$&amp;(+&#123;&#123;@*(!*!&amp;^#^!(&#125;+&#123;[@^&#125;*%)]#%(!^!]@]!&#123;!&#123;_%!!)#@!_*_#$$&#125;)&#125;%&amp;[)[!&amp;*&#123;@]_!</span></span><br><span class="line"><span class="string">+&#123;%_+]+(+&#125;%#_[)+#%%$+@&#123;([]#^_$#@(&#125;%$]#&amp;^#%%&amp;$%(+()+_&#125;!&amp;&#125;^&amp;*)&#125;]*+]]]*_&#123;%(!][&#125;[_&#123;&#125;</span></span><br><span class="line"><span class="string">&#123;&#123;(^[!&amp;&#123;!]$&amp;(]]+%^%%&#123;@&#125;_&#123;%@+%+[(^&#125;&amp;@#+^^@^])&amp;!@&#125;])$+$&#125;[)![^%$@_[&#125;(%@$![!+&#125;#@+&#123;&amp;)</span></span><br><span class="line"><span class="string">^*&amp;_^%+&#123;^&#123;$+$[^_*)*++%^++#%#%*^$*@+$&#123;!+%@!&#125;^q(%!(&#123;@]%@]]@&amp;#^$[&amp;![(**$&#123;)]*^))[$&#125;#</span></span><br><span class="line"><span class="string">_*^&#125;[&#125;+]&#123;_([#_*)@&#125;&#123;#)@$__!_(^_!&#123;]++$(&amp;)*(&#125;&#123;&#125;_!^*!!++&#125;(_+&#125;$()@%&amp;#&#123;]]+_!$&amp;+#&amp;[&#123;$^$</span></span><br><span class="line"><span class="string">)^]()@$!(#_!((@&amp;**)*_[@^)#&#125;$%(&#125;&amp;)()+))&amp;[[!%&amp;&#125;&#123;&amp;&#123;[+](#&amp;+_#((&#123;*#]^(#]))#&#125;&#125;@_*&#123;^%+^</span></span><br><span class="line"><span class="string">%!!%&amp;((&amp;&amp;)@*!*!!^+^#*&#125;#!&amp;!*!+$)$!_%^+&amp;[_+%&#123;&#125;)(@[*&#123;$$_)&#125;)[!*((_(++_@($&#123;*#](#_]!&#123;&#123;</span></span><br><span class="line"><span class="string">]]])(^)*%[_*&#123;!@##&#125;[%#(&amp;%%$[#+#&#123;]+&#125;@*+&#125;&#125;!($_&#125;$&#125;^[%_&#123;][%&#123;]@]_[$(_&#123;#&amp;)_![@)^*%&#123;*#&amp;$</span></span><br><span class="line"><span class="string">&#125;_+#&#123;)@^$]_*$@+@][%^*%+&amp;&amp;[*^[[(*)(#!+]()$#$_@*+__)!&amp;!+*@(&amp;_^*[)$&#123;$+^$&amp;]))_(&#123;@+[*</span></span><br><span class="line"><span class="string">_!_&amp;&#125;*$#%_&amp;[@^^%&#123;&amp;&amp;&amp;$&#123;&#125;!&#125;&#123;&#125;&#123;]&#123;]&#125;&#123;]]_&amp;%+![+!]_&#125;[$[%[&amp;*(_[_!@(+%_@(&#123;*_]+^*(_@##_&amp;&#123;</span></span><br><span class="line"><span class="string">*&amp;&#125;@&amp;^#&#125;%%!^)!&#123;&#125;))!%[$^_^&#123;@%*#!_[_&amp;&amp;!!^)[]@!&#123;[+!^+([+%+*@[]&#125;*^$$^#$]&amp;$%$&#125;@_[[[&#125;!</span></span><br><span class="line"><span class="string">$(+$*@!*&amp;^[!&#123;+@[&#125;$#&amp;&#123;&#125;[+&amp;^)&#125;&amp;*[]&#125;*^#]$*]%^&#125;&amp;@)]$&#123;)$@@%[*$((_)[*@[%%&amp;^&amp;^&#125;*&#123;#^&#125;&amp;@&#125;</span></span><br><span class="line"><span class="string">)*)_*^&#125;%+_!&#123;(_!#@@__&amp;]*&amp;_&#125;_+*)(%_@]_@)&amp;]&#123;@(]*+&amp;+@&#125;)@(__#&#125;%$($[@)@$@&#125;*&#125;*#)%((($&#123;!</span></span><br><span class="line"><span class="string">&#125;&#123;[(+#&#125;^&#123;&#125;@((^]%@&#125;(&#123;)%&amp;(&amp;[&#125;(!&amp;!!$^+_%^&#125;_&#123;&amp;&#125;!__)&#123;+$(&#125;*)[![#%&amp;%^&amp;^__]&amp;[!+&#123;_!)$&#123;))*</span></span><br><span class="line"><span class="string">]]]^_&#125;#%!]_!*^&#125;&#125;!(%&#123;)&#125;($_&amp;@^&#125;]&amp;]^#@)[^@(@)%_($!)[&#125;*!^@#_^]^(^&#125;(_(+%*)&#125;&amp;^][@^]&#125;(&#125;</span></span><br><span class="line"><span class="string">&#125;&#123;)&#125;][[*]&#123;#(+(@)[_]$$_&amp;[]_&amp;#$)_(&amp;&#125;][&amp;&#125;&amp;%#)@%!)+!]&#123;%*)^%&#123;([!&amp;^%)&#125;+*)%&amp;&amp;(@*$$[&#123;@$&amp;</span></span><br><span class="line"><span class="string">]^_!_@&amp;@(*$)[*^)*()$(&#123;!!_)[((!*]&#123;+[_&#123;*+(#&#123;%]%!(%!(^[&#123;@&#125;(]&amp;$(%^%#^$$*[^#!_(&amp;]$&#125;!&#123;</span></span><br><span class="line"><span class="string">!^&amp;&amp;^*$!@*&#123;&#125;[*&#123;&#123;&#123;_&amp;(+#&amp;+$%!^_^[($&amp;+#_&amp;@&amp;]&#125;[%&#125;^&#123;&#123;$&amp;!)&#125;_[&#125;()&#123;[)%)$$_#_$&#125;+$^()[%_]_</span></span><br><span class="line"><span class="string">]])![(]_(*@!)_!&amp;&#123;@__%&#123;$[)]&amp;!*$@()+_][@&#125;&amp;#_*)+%_%^&amp;#$&#123;^]$$@+$&amp;]&amp;(%][&amp;[@[^&#123;*%@#+$&#123;</span></span><br><span class="line"><span class="string">&#125;^!_&#125;&#123;)_&#123;$]_@&#123;%*_&amp;^_+&#123;$[__]^&amp;*[&amp;*$&#123;&#123;#[$%*&amp;#&amp;&#123;_^$_[)!)%]^+(%&#125;[$_@[$^_*_!&#123;_&#123;#&amp;&#123;()]</span></span><br><span class="line"><span class="string">&#125;*_)@(&amp;*[@%$$&amp;))()&#125;]!^+[&#123;##@%+**)$)]&amp;_]&#123;^([&amp;*&amp;#$*&amp;(]&#123;([+&amp;&amp;^&#125;*^$!_&amp;%&#125;&amp;&#125;!(&#125;!__$[&#123;&amp;</span></span><br><span class="line"><span class="string">@*#(*&amp;!_)%&amp;__%#+%^[&#125;!^![&#125;@&#123;&#125;())%]!]!@*+))&#123;!&#123;&amp;*+_&#125;]&#123;&#125;&#123;!^^$)@_)#_(!@^+^%@+(%]!&#123;*+&#125;</span></span><br><span class="line"><span class="string">*$]$*%&#125;&amp;__!&#123;%)+)@)%&amp;!]&#125;!#&amp;[*&amp;#&amp;+@(^&#123;[$**$^#+)&amp;&#125;#)[][&#125;$&#125;*@_@!%&amp;&#123;&#123;@!_#%]&amp;]_]^%][(&#123;</span></span><br><span class="line"><span class="string">_]*!]&#125;@@+&#123;&#123;]%_($(^^^&amp;#@[[%*]_@[#]&#123;*+&#123;_&#125;!&#123;&amp;)+^@@$#)()&#123;[!])$#[$&amp;@)#+@][]&#123;^](&#125;%)+#%</span></span><br><span class="line"><span class="string">&amp;[$%*#!&#125;+_@$)_&#125;[+^[^&#123;&#125;)!&#125;]_#(&amp;&#125;+[!)!&#125;&#125;*&#125;&#125;[_^((![#*_+[$$[*)(_&#123;+&amp;&#123;@^*&#125;()@@&amp;$]^#+^&amp;</span></span><br><span class="line"><span class="string">#&amp;@&#123;[^@)(&#125;#[@@&amp;$)]!%@)+*&#125;)[&#123;%#&#123;%^*&#125;&#125;&#123;&#123;&#125;]&amp;_$&amp;&amp;$()&amp;#_&#123;!&#125;@(+$%@!*@]*$+&amp;_()&amp;!#&#125;@@&#123;+!</span></span><br><span class="line"><span class="string">(^&amp;!^*@)&#123;%)@@)+*]!@$!#](%&amp;&#125;$_+&#125;+@)&#125;&#125;[+&amp;_+#!*[$$+[(&amp;&#123;!^&#123;)[@_%[])@+)@&amp;&amp;(!!#$&amp;+_+)*</span></span><br><span class="line"><span class="string">]#&amp;*^&#125;&amp;*&#125;%+#()%()[+&#125;([!$]#&#123;%%+@@@&#123;^^_#*]()^*^%]&#123;+&#123;$(][$])@&#125;]&#123;%]+]+*!!&#125;^![#@*[@)+</span></span><br><span class="line"><span class="string">+($&amp;&#125;]#^]%%(&#125;)$&#123;&amp;&amp;!&amp;@@]$_+$[&amp;@%&#125;)!*$]&#123;_!_(^+%&amp;_(*(+**%(_&#125;)[]$))%+([!&#123;]#**)()([*)</span></span><br><span class="line"><span class="string">]%+(&#123;^)(+#(&amp;*#%#]^^**+^&#125;&#125;+[$_(+&amp;!_&#123;%&amp;&#123;(@&amp;*^[%[_]*]@#@&amp;)$#+!$&#123;!_$[#@!)@&#125;&#125;+_^#%&#123;&#125;#</span></span><br><span class="line"><span class="string">#(&#123;@)[&amp;[&#125;)[+(&#123;_!+^+)]#[#[$_^((^@%&#125;&#123;[^_*$^!]*!*(^&#123;@^&#125;&#125;*&#123;&#123;&amp;*@+&#125;![_#%^%[$&amp;+&amp;&#123;@_%@#&#125;</span></span><br><span class="line"><span class="string">^^!([)]]^((@!_[#[^#+^+&amp;)#[$#&#123;&#125;$+$]()!__$$#(#!#+[*#)@#_&#125;_]@%#&amp;$!@)]$&amp;]##&#123;*(&amp;&#125;&#125;&#125;[@</span></span><br><span class="line"><span class="string">$&amp;&amp;]#@($%&#123;(![$((^&amp;*#(^@$&#125;+[%_[&#125;[]!!*%&amp;]![%!*)[[%)[$(&#123;%[@[%]_!)&#123;!*]$&#125;(@((#&#125;[$^&#123;@(</span></span><br><span class="line"><span class="string">%&#123;#@!)++)&amp;&#125;$%)_^&#125;[@$_&#125;&amp;)*#^$_)&amp;@&#125;[![+%+&#123;@!$]*&#125;[!!!([[^&#123;&#125;!&#123;&amp;$*)*@**^]_@&amp;_%](*_[*(</span></span><br><span class="line"><span class="string">^!@(*&amp;_)$[$]@]!^*]*!^)@(*]&#123;@[)]&#125;&amp;+!%[][(#$_[$&#125;!!+&#123;*](((([#@!($(_$@*&amp;^#)&amp;+*%&#123;_&amp;%$</span></span><br><span class="line"><span class="string">&#125;&#125;&amp;&amp;[(%*]*[_]])$%&#125;^)!#!*&amp;_@(%$@_[_]$*)+)&#125;+*+]#!^)_@#%(&amp;(#&#125;&amp;([[$&#123;(+_&#123;&#123;!&#125;#]+$@^]&#123;&#125;</span></span><br><span class="line"><span class="string">(@_&#123;^%*]##*^!!)(&#125;#&#123;@*&amp;#_&#125;[[$)&#125;[#&amp;[)@&#125;!_*&#125;]#@+&amp;!&#125;&#123;^@!*&#125;&#123;+$#&#125;$]&#125;([&#123;&amp;@+]+++*+[+@+&amp;(</span></span><br><span class="line"><span class="string">[+$&#123;^!)&#125;($[!#$&amp;(^!&#123;^])(&#123;%%@&#123;+$)!)[#$@!](&#123;(&#125;&amp;$$&amp;&#123;]](@+@)*$&amp;$[&amp;(!!(^**[*#!)&#123;+!!)$$</span></span><br><span class="line"><span class="string">_&#123;%&#123;&#125;!&amp;+]*&amp;[$&#125;_!@_&amp;&#123;+%&#123;+(&#123;(!]&#125;&#125;&amp;_^_!@![)]&#125;##)+!]^_#@%@[#^*+!*^$&#123;*)($_#___[*_)+)$</span></span><br><span class="line"><span class="string">*!&#125;^^+^$++&amp;++*%]#$$$#^*^$!]]^%$%&amp;*%@&#123;#+)&amp;)_](__#^]^&amp;%!+(!#[&#125;@[*_+^+_^)&amp;%!&amp;&#125;#&#123;*#(</span></span><br><span class="line"><span class="string">&#123;&#125;+$&#123;&amp;@&#123;&#125;]]$%[^%%!(![&#125;]&#125;[)@(_%+&amp;[&#125;^#(@[^#&amp;[[(+)&#123;+$[)(&#125;*+&#123;&amp;&#125;%&#123;+_#_]#+&#125;([^*&#125;!$)&amp;^!</span></span><br><span class="line"><span class="string">+!&amp;&#125;^%)%&#125;)#&amp;*&#123;]&#123;%&#125;^)^$+&#125;)*[&amp;#$*&amp;!]_]&#123;$#)+&amp;[(]$)@(+)&amp;))^_&#123;[_&amp;&amp;@%#&#123;%&#125;&#125;_!++#!@&#123;)&#125;$&#125;</span></span><br><span class="line"><span class="string">&#123;)(*(]+##$[&amp;(&#123;&#123;_][$[*)#[[#!]&#123;&amp;)$&#123;&amp;(*[*&#125;%++&amp;**&amp;&amp;%#&#125;^&#125;^]*(#!]*@&#123;)#[_&#123;&#125;$[[#&amp;&#123;#@!%]+</span></span><br><span class="line"><span class="string">&#123;^&#123;]&#123;@*(%##[#$[$&amp;^][_&#125;]&#125;!&amp;&#123;_!&amp;[^&amp;)[%&amp;+*[+#_*)*+$]**%$]&#123;_%**#+&#123;]+&#125;^_)@&#123;&#123;&#125;]&#125;&#123;[+&amp;@&amp;</span></span><br><span class="line"><span class="string">#@^@@[*(^)[_#&#125;&#123;]](])!$&amp;&#123;&#125;&amp;*&#123;&#125;&amp;)(**&#125;*[@+&#125;$]][)@&#125;[&amp;[#%$@)&#123;[^@%&amp;&#123;+&#125;&#123;&#123;#*]_&amp;[%#&amp;]+$&amp;_</span></span><br><span class="line"><span class="string">]^&#123;(&#125;+#^][(__#]&#125;(&#125;$&#123;)@(*)$(^*^!_!!&#123;(!#&#123;)#_]&#125;[*_&#123;_]](*@&amp;&amp;_]_&#123;&#123;]&#125;]%&#123;$_$&#123;!]]+$@][@$</span></span><br><span class="line"><span class="string">$^&amp;*(+$(*&#123;$$%)%+]#_&amp;#&#125;*+@%[(__$&#125;$(@_]&#123;)&amp;%&amp;$_^%])(]$()(^#]_(!^@&#123;&#123;))&amp;^$_(&#123;^)@()#%+</span></span><br><span class="line"><span class="string">&#123;%&amp;((#)&#125;&#125;[#&amp;$(&#125;]+&#123;^@&#123;+&#125;@]&#125;+#&#125;&#123;(&#125;+]!&#123;*!![)&#125;&#125;+$&amp;_%%*]*(!)$+#^$]&#125;+*#*!(^^*_&#123;)+]%)!*</span></span><br><span class="line"><span class="string">&#125;^&#123;)[)%])$$&amp;&amp;(]&#123;&amp;&#123;@&amp;#$*&#123;@)%@+!%*#%%((@@[#*_@%($##!&amp;!#$!#&#123;$&amp;^()]]($%]&#125;#(_]!(!_%!_</span></span><br><span class="line"><span class="string">]$^%^&amp;$#%%())_)!_&#123;&#125;]&#123;@#&#123;&amp;&#125;)]$_!]%%]]&#125;&#125;[&#123;[_)&#125;&#125;^((^^[!&amp;*)&amp;+)#&amp;&#125;%*($%+[@$[+&#125;&amp;#@[$(!</span></span><br><span class="line"><span class="string">@&#125;&#123;[!&amp;_%]&#123;_&#123;*+$#&amp;#*$%!@]&#125;[$]!!^#^&amp;)#&#125;#__[@$#(&#125;)(_!((*#)&#123;)$#+%_%[&#123;+#_+&amp;@&#125;[&#125;^*%$&amp;#</span></span><br><span class="line"><span class="string">@&#123;[&#125;^#&#123;@&#125;!@%&#125;(*&amp;@(!)]@)_@&#125;%+!%&#125;]%$&amp;%][#$$)[#&#123;)[^%]+&#123;&#123;*^&amp;^&#125;&#125;^@%^]^&#123;)[[)][])_+##*@</span></span><br><span class="line"><span class="string">($!^(#[+$#@[]&#123;*([!@]]&#125;%$^+@#(%[^&#125;@_&amp;@(!&amp;&#123;_)^%&amp;$@^$[&amp;!+^(%+]&#125;@_]%!&amp;(&amp;&#123;^$&#123;%*(&#123;_&#125;%$</span></span><br><span class="line"><span class="string">_%&#125;)%@__@$_@+)#+(^@^&#123;^@_!](*]%_^^**@_#(*]_)$^]&amp;&#125;_**(+!&#125;@&#125;&#125;&#125;+@*]])&amp;^_[$!!_*&amp;)$)^[</span></span><br><span class="line"><span class="string">&#123;@@*!!&#125;*_&amp;)#[&amp;&#123;)]**$!_!_*&amp;)+![&amp;+)&amp;^[$#&amp;&amp;!%])@]$_+&amp;+)))!&amp;@&#125;[$+!&amp;**%&amp;*!+(^&amp;[%!*&#125;@$</span></span><br><span class="line"><span class="string">&amp;[@&#125;]_[)[())^&amp;%#+$#(&#125;^]*&#125;&#125;_[#*_$#&#123;(_+#&#125;&amp;&amp;+%%&#125;&#123;+)[&#125;))*^#^_+!+))&amp;_]#(&#123;)@+*%_$_)&#125;!&amp;</span></span><br><span class="line"><span class="string">&#123;&amp;&amp;%!$)&amp;@%!&#125;(&amp;(]]]%!))#&#123;@*@$&amp;&#123;_[%&#125;)!(@]@)$&#123;&#125;&#123;[_*^(&#123;&amp;!_#&amp;&amp;^#!*&#123;_&#123;&amp;!^+!%&#123;&#125;+&#123;&#123;&amp;%@&amp;[</span></span><br><span class="line"><span class="string">!(%*(@[^+$@_&amp;&#125;#&#125;#[&#125;&#123;^#(&#123;^&#125;!)&#125;*$$&#125;(_(+)*!+)[]#+@(%&amp;&#125;&#125;!)&#125;!]$$^(%_)_&amp;[&amp;_%*#(^%)@[#)</span></span><br><span class="line"><span class="string">+$(_&#125;^&#125;&#125;&#123;]@_&amp;+&#125;_&#123;&#125;&amp;#[**)#(!#!%_&amp;&amp;_!^!(+_@&#125;%)#[&amp;^)])_#_)#]&#123;#!([$%%&#123;+&#123;&amp;%$^!+_@%(]&#123;</span></span><br><span class="line"><span class="string">&#125;)]#](&#123;][*%)_&amp;^+&#125;]!@&amp;]&amp;_&#123;($^($*!%&amp;#&amp;[!(^@+@!&#125;%]&#123;@_@&#125;[_$_@@^_&amp;![@$+^+^^$!*#*&#123;$[]!</span></span><br><span class="line"><span class="string">^(!+[&#125;&amp;&amp;@##_*!$%_&#123;+)^%+_)@*][&#123;!]$]#%&#123;[%#(*(+$@&#123;^*&#123;+@#+#&amp;#&amp;+&#125;)*+%&#125;[^+_$@@&amp;@$+&amp;&#125;@*</span></span><br><span class="line"><span class="string">#&#125;@%*&#125;^&amp;_@%)[&amp;@]^&#123;(!^&#125;#_^(&#125;(+&#123;_&#125;$&amp;#!]&#123;%@_^&#123;&#125;^#_#!]*@%))&#123;*[$@&amp;%]_)%&#125;$&#123;+_(!*[^&#123;&#125;)$</span></span><br><span class="line"><span class="string">]!*])&amp;&#125;[%&amp;)*&amp;#&#125;&#125;(][]&amp;&#123;+@)(+&amp;^[(#&#125;^*]#+&amp;&#125;]#![@*&#125;()($#&#123;&#125;+_(#[&#123;&amp;&#125;*&#123;$_&amp;[$^%%[$*[&#123;%^)</span></span><br><span class="line"><span class="string">!#%**!^!&amp;^@&#125;!*@)[&amp;[!__]]^(#&amp;$%#&amp;(@&amp;#+&#123;$&#123;%(+##$$[%%%^&#125;@%+]!^)+#%&#123;%%!+&#123;[#&#125;&#125;+!)+#%[</span></span><br><span class="line"><span class="string">!$$&#123;](]&#125;_!&amp;_(^^(_!&#123;#*^&#123;*#&#125;&#123;^[!#)&amp;)!$_!@*^@^^)]@!&#123;&#123;&#123;^[!!)])]@%+(&#123;*![@%#%^&#125;))!$&#123;)]</span></span><br><span class="line"><span class="string">#))_&amp;*]@^!!+@)&#123;[)][&#125;$%!^+)%#$&amp;]%_&#125;(]$#&#125;*&amp;^_&amp;)&#123;+%[)]&#125;&#125;[$*^_+&#125;)(%+&amp;]^*$@[&amp;!#&#125;%&#125;&#125;(#</span></span><br><span class="line"><span class="string">&#125;&amp;]#)&amp;]^$&amp;[^%[*)^&amp;(]&#125;&amp;+$@%^]@)+!+)&amp;_&#125;)*%(_+]*_)#+#&amp;_^&#123;#+!!)(_#]*[%&#125;]*!!@)%()![%+</span></span><br><span class="line"><span class="string">&#123;&#123;%$^)#^+[+^&#125;#+^&amp;&#125;&#125;&#123;%%+*(+&#125;(&amp;%&#125;%&#125;)&#123;_&amp;$]+)+)^#^*+@[@^[!^&amp;)^!@(&#125;&#123;$*&#123;*&amp;_&#123;@$&amp;@!@#&#123;!&#123;</span></span><br><span class="line"><span class="string">$)#![*]%+#*@$_^^!+&amp;!]#)(#*$*%*@*+(*#_^!@&amp;*]+&#123;](*[+#_@]%&#123;#[&#125;^^%&#125;[_&#125;$+(&#123;!%+@@]]+&amp;^</span></span><br><span class="line"><span class="string">(*^(_@]_%(]+%_)@]&amp;!&#123;]@$[__)@[+$)%$!^&#123;%^!)&#125;]&#123;[[(+*[&amp;*(_^*&#123;*^&#125;])&#123;[_))!(%!&#125;$![#^$+&amp;</span></span><br><span class="line"><span class="string">**$&#123;*+&#123;$!^$$]*_%+@&#125;&#123;&#123;(+_&amp;$+*)]*@&amp;!$#)*]&#125;@@%!(#+)&#123;[!!+&amp;)$$)&#123;#_@&amp;%](^#]#&#125;$)^*&#125;!]&amp;+</span></span><br><span class="line"><span class="string">]!%![_)]&#125;)&#123;&#125;&amp;_$]%!_[_&#123;%])#!#&#125;%^&#123;&#123;@*$_@@%_&amp;)%&#123;)*&#125;+$#&#123;!($!&#123;&#123;[!@_+(@_+!$]#][]&#125;&#123;&#123;%_(</span></span><br><span class="line"><span class="string">(!_*$%^&#123;@@^#&#123;[[!_[&amp;!)&#125;!&amp;%#$[+#]&#123;](&amp;^*%^@&amp;&#125;)_)*[([%($^$^#*&amp;%_*&amp;%+$)&#125;@^@+^#@%^&amp;+^*</span></span><br><span class="line"><span class="string">+&amp;#@%&amp;](*@&#125;&amp;&#125;#[&#123;@@]+))&amp;^#%!#*&#125;#[+&#123;!^]*+&amp;&#123;^)&amp;&#125;&#123;#+&#125;@+!]$@(&amp;(##)_]$%#_+![&#125;_&#125;&#125;&#125;(($*[</span></span><br><span class="line"><span class="string">)^#^*)_]%&amp;%)^]_)!(+&#123;^&#125;&#123;#^^]&#123;@^_&amp;#[^^&amp;!#+_#]#&amp;]((]]&#125;@!#()$*!)&#123;*((%+^]+]_&amp;&amp;&#125;&#125;&#123;(]&#123;@</span></span><br><span class="line"><span class="string">&#125;$^##]+^$(*_&#123;@%&#123;(&#123;($&amp;!_])*#(_]&amp;(^!!)@&#123;[^%$_&#123;]^_^_[)%_]#&amp;&#123;&#123;_#$&amp;&#125;&#123;]#%)&#123;_&amp;&#123;_%!&amp;[@)]</span></span><br><span class="line"><span class="string">!_$&#123;]*[+]&#125;&amp;$&#125;@[[_&#125;&#123;#_^*#&amp;&#125;!+^&#123;&#125;#+)^%]&#123;*+($(&#123;&#125;^*^]#$+%+]#&#125;(&#123;]&#123;&#123;*&#125;&#123;]&amp;#_@&amp;+[+]$&#123;)&#125;)</span></span><br><span class="line"><span class="string">)&amp;@*+@])](_%^#!))@#%)+!(!^@%[&#125;&#123;&#123;(^&#125;&#123;&#125;%&amp;[$[+&amp;$+&#125;]!$%_[$!*]!&#123;]^#@)+))$)#)@^^&amp;]+#[^</span></span><br><span class="line"><span class="string">@%_%*%)(&#125;&amp;%!%]%]$)&amp;!]!&#125;+)*(^&amp;+&amp;&#125;@&#125;&#125;+]&#123;^@^]^!$)+&#123;!&#123;(@]&#125;]$@&#125;])&#125;&#125;&#123;%^@]#*&amp;!!!%^&amp;_&amp;@@</span></span><br><span class="line"><span class="string">&amp;)&#125;$*(!_*&amp;!!(&#125;)(+)([]!]*^&amp;+^^#&#123;@*++&#125;*+&amp;+@!##&#125;[$^_&amp;_%(%&amp;&#125;*!]@&#125;$]&#125;]+))(!@@+^+&#123;]!)%</span></span><br><span class="line"><span class="string">^$^&#125;@!!_$@&#123;_&#123;(&#125;($%%&#123;&amp;@&#125;_][#@$&#123;&#125;&amp;&#125;*_)&#125;@%)!&#125;&amp;&#123;&#125;*&#125;@@(*&amp;&#123;+)%**&amp;%]^&#125;&amp;(!_&amp;]#$(&#125;[#^[)#^</span></span><br><span class="line"><span class="string">&#123;@@#$&amp;]][(@&amp;]&#123;_&amp;[&#125;&amp;*$+[(^][&amp;^][%*&#125;+!]#%&#123;!##$*&#123;&#125;++&#125;+&#123;!(#![@^()&#125;!+)&amp;**&#123;&#123;[**&amp;&amp;$!@%%</span></span><br><span class="line"><span class="string">)_#$&amp;()$+[((_&#125;]*!!_[*&#123;*%[%+&amp;$!&#125;@(&#123;#%@%[%!%[!*](]%^&#125;##@(*)]&#123;@%@^@^#(]^[&#123;_&amp;&amp;**)^+!</span></span><br><span class="line"><span class="string">*@($&amp;!+@$]@_]&amp;!(##@]&amp;#]+*%[&#125;(_@_@+!+^+$&amp;(_!(&#123;++[#@!#(+_^)($&amp;^*%(^&amp;#_^!^^(+&#125;$+_&#123;)</span></span><br><span class="line"><span class="string">)_&#123;^%%$]_!]$+@^[*&#125;^*]+_$$&amp;]^^+&#123;&amp;&amp;&amp;(&#125;[&#123;*^^@%%+)[^+$&amp;@&amp;)^%&amp;($&#125;*!&amp;%#!*&amp;$[%(]_&#123;$])*[</span></span><br><span class="line"><span class="string">*@&#125;@*(!_[]&#123;)@*]][(^%(##]&#123;+&amp;+$&amp;($&amp;^@&#123;@^[%*+((%]$])(#$[%)#(*_#&amp;^*$*+_[#&#123;&#123;&#123;%&#123;&#125;&amp;(&#123;+$</span></span><br><span class="line"><span class="string">#$)&amp;$!]!^**[)^!!@(][^$$$(*@*(*&#123;(&amp;##%_%&#125;]%^)*^%#$_($_@(&amp;+#@&#123;)&#123;&#123;&#123;_^!#!!*#$#$_]&#125;*^#</span></span><br><span class="line"><span class="string">!&#123;&amp;++#^(&#123;&#123;@$$@#)&amp;*%[!]$&amp;&#123;^!%$+)&#125;]_@+&#123;*_]@)]&#123;*]@+^]$&#125;&#125;]&amp;)]#!_)&#125;]@$@_[&amp;_*)+(_&#125;%#u(</span></span><br><span class="line"><span class="string">)^(())()&#123;+@]&amp;+_)&#123;(_%!&#123;^^*^!)$+&#123;+^#!&#125;&#125;]_[&#125;^**(&#125;*%($(+_%]))$&#123;)_*%&amp;&amp;]$!%^))&amp;#(&#123;]$^$</span></span><br><span class="line"><span class="string">_&amp;**[_&amp;[(%@%**)[*$[]#_&amp;+^&#123;@_&amp;!&#123;^]%#_)![]![@#&amp;[&#125;]_]!+&#123;&#125;&#123;$+_((&#125;]_&#123;!)&#125;)%[*$^(+^)+&#125;*</span></span><br><span class="line"><span class="string">_&#123;@@@@)()#)@&amp;[]*(&#125;@%%@[*][(!%$@#%($#*]_[(*!&#123;]+)*#(&#123;*&#123;[&#123;%[#&#123;$^)]%!+#&amp;](__&#125;(]%+$&amp;(</span></span><br><span class="line"><span class="string">&#123;#$&#123;$&amp;*$]#](&#125;[[[)($%@!(@@^_#^&amp;&#125;)_(![+_)&#125;_%*&#125;@%&#123;!&#123;+%@_(%&amp;&#123;#])()]#!(]%!$$#_*%@%_*[</span></span><br><span class="line"><span class="string">&#125;@$$)%&#125;*@^&#125;&#125;&#123;)%(&#123;_&amp;[$)_&#125;^(&amp;!#)!@*%&#123;%#^_@$)((()^)$@*@%_$%)*$(!$]*#*#+++_$&amp;&#125;&#123;^]$@]</span></span><br><span class="line"><span class="string">!**$*&#123;[&#125;#@#&#123;+&#125;@$]]_[)@&amp;](]*&#123;]#(**^_!^(@^!#**&#125;#&#125;+&#123;!$@]_]@!&amp;&#125;&#125;*[#$&#125;!!]&#123;[&#123;]!_&#123;&amp;!](^</span></span><br><span class="line"><span class="string">[()[)#$*&amp;!^[+%&#125;(@&#123;*%*&#123;!&#125;!$(%(#]^]&amp;^#@!$)!&#123;&#125;#+&amp;&#123;)@)[*]($)@!&#123;)*^*([&#123;*&#125;&#125;+]&#125;$++[%+^_</span></span><br><span class="line"><span class="string">&#125;#^+@[%$%$(*]_(*&amp;]!+)[#&#125;((([+&#123;]##&amp;%!)%&#123;*(&#123;@^*#!]++[!^!#+@)$%*!_@[&#123;^[$&#123;$&#125;#&#123;(&#125;#)_[</span></span><br><span class="line"><span class="string">)^&#125;(+&#123;(++(]&#125;#@&#123;&amp;^@^_&#125;!]!]%+[[(!_]$&#123;(*+[&#125;*_@_@*_^@^_]+!)$)!)]*&amp;*$&#125;&amp;[+[)%&#125;#%^))]%^</span></span><br><span class="line"><span class="string">+($@!]^[_%$__&amp;@+[]^%@)[((]#&amp;$&amp;+&#125;!+(&#125;$^^+&amp;&#123;!)&amp;@$$]&#125;!![$&amp;)&amp;][+&#125;+)#]#&#125;(_@@^*!)_)[^$</span></span><br><span class="line"><span class="string">@^&amp;$^@*&#125;_[!+^!#&#123;^&#125;!&#123;[$[&#123;&#123;++^[+*##%+$(&#125;&#123;[^%@[&amp;#!!*+[@(!#+)&#123;[)^!+_[[***+#[+&amp;))*#@&#123;</span></span><br><span class="line"><span class="string">@&#123;&#125;#^^^*]&#123;_%]+@*)$*[$@]#]&#123;%_$_^&#125;$&amp;$]@]))#((*(&amp;_@$[)]!%_$#](&#123;&amp;&amp;[)])@_&#125;*@]^!@&#125;&#125;%[&#123;</span></span><br><span class="line"><span class="string">)!%&#125;_%!&#123;^]_&#123;&amp;@%@%(+#^+&#125;]*#)*%$%&#123;%*#(#&#123;&#125;@)&#125;([%_&#123;^&#125;_]#^[!_)&amp;$*+&#123;))_^+%!+&#125;[@&#123;]^+__#</span></span><br><span class="line"><span class="string">^[_@&#123;[%*@+$[*!$)$$&amp;#(_[^+!)(^%_[&#123;&amp;&#125;$]^&#125;&#123;&amp;[!$[^&#123;*[^)#@)(_(]#[&amp;)]%[+@)]_+$_&#123;&#125;[@&#123;)+</span></span><br><span class="line"><span class="string">_+&amp;]]!@^&#125;#^&amp;+@[&amp;[%&#123;&#123;[)_]%[_^%**@&#125;))]^*_&#125;@@[&#125;@&#123;)&amp;&#125;#[&#123;$!)&#125;]%]]$_!!%!$@#@^()#]+%(&amp;&amp;</span></span><br><span class="line"><span class="string">+%@)($@)@^^^]+@_)&#125;)#)!^_#!@&#123;*^!@*%^(_^@!!$%!&amp;_+&#125;((%(#&amp;$$#&#125;@#]^$+]$@&amp;)^%&#125;+)!$)&amp;&amp;^</span></span><br><span class="line"><span class="string">!#[(&#125;$&#125;((&amp;*$&amp;+][++#]^_%!]]&amp;+#%&#125;&amp;$*%*#_(#&#125;+!^&#123;[#!$)!@%_!!()(%!(_]&#123;[$*!^+#]^&#123;&#123;&#125;+&#123;#</span></span><br><span class="line"><span class="string">_&#123;*&#123;+(#)#!@+$&#123;+$@]&amp;*%&#125;_+_@](%(*_&#125;&#125;+^(&#125;$$&#123;&#125;^!%&#125;*#&amp;*__($&#123;(]&#125;%^[^(!&#125;##@@&amp;)&#125;*]%)[%$+</span></span><br><span class="line"><span class="string">&#125;][#&#123;@$)!&#125;*_&#123;&amp;+_&#123;!]**($_[@^&#125;&amp;+&amp;!(@%&amp;%$)$_(!$_&#123;^*]&#125;+_](&amp;^&#123;!%_$&#123;@]^&#125;&amp;]%%@#!+%(%&amp;_@</span></span><br><span class="line"><span class="string">$@]&amp;&amp;_)^((&#125;&#123;&#125;&amp;^(_&#125;@[]_^%&amp;^)^)_@#%_*]&amp;&amp;[!&#125;()*!_(@@+&#125;@($!%^)$!]$%&#123;[^[#(&#123;[*^^#&#123;@_^&#125;</span></span><br><span class="line"><span class="string">]+!$&#123;)[^+!$*#%#&#123;!#)__@$_^&#125;&amp;#&#123;%)++)_!*&#123;)&#123;_*]^&amp;&#125;&#123;$[&#123;(^&#123;__+[[)@)@#%_%$^&#123;@_&#125;&#123;&#125;+$^)+@</span></span><br><span class="line"><span class="string">]((!*&#125;^])@!^&#123;+#%%&#123;&#125;+]&#123;[&#125;[![(^#&#123;_&#125;[(#_]%+)&#125;*&amp;&#125;**]@*&#125;]&#125;[(&#125;[&#123;&#123;#*+@#$#^)$++(&#123;[^#+**&amp;</span></span><br><span class="line"><span class="string">]&#125;++(@!&amp;^!#_&#123;[&amp;*!(![(&amp;@&#123;(]!+&#123;(![$^&amp;&amp;&#125;&#123;&#125;&amp;&#123;^*])#&amp;)^#&#123;!]&amp;+)&#125;@_]^$&#125;@&#123;+(#@[([@[++_#_[</span></span><br><span class="line"><span class="string">##(]&#123;^^%&#123;)*)!$#_*@$(&#123;[!))!@^*&amp;@&amp;(]+([^(*!+#@[^^^+!$]!&#125;@+&amp;&#123;_*&amp;&#123;&#123;!)&#125;(!@]%_(&amp;+[__%)</span></span><br><span class="line"><span class="string">$]]%++!!^^[$@(&amp;@(%^!@!$)[&#123;[%@))&amp;^#&#125;*&amp;+((]([_^&amp;&#125;%!&amp;+^*@($&#125;&#125;$&amp;[$(&#125;__&#123;)+][%!@&#123;(&#123;$]&amp;</span></span><br><span class="line"><span class="string">$^+$#&amp;*+*)!!+_*&#125;&amp;$&amp;^#^*+*_&#125;&#123;%$*][#!$!&#123;#*%%(&#125;*%*@[](&#125;][+)]@&#123;#]($)[_#@^[!]%&#125;%#[+[&#123;</span></span><br><span class="line"><span class="string">[%&#123;*]&amp;&#123;$&#123;#_)(+%^&#125;$&#125;$&#125;#)^^#($##%@&#123;&amp;&#125;@)&#123;+*!+!%^&#123;&#125;@]%!&#125;#*_^#+_&amp;&amp;&amp;##^^[&#123;&#125;)*((*&#123;!_+)]</span></span><br><span class="line"><span class="string">$[@@&#125;#[*%%_@&#125;(&#123;##)[]%&amp;]_]_[#(](&#125;#)_]*#_)&#125;%$[&amp;&#125;!^!)@#&amp;*)&amp;@%^&#123;@#&#123;@@)&#125;&#123;$)+&amp;%%%](^$&#123;</span></span><br><span class="line"><span class="string">+@##$*(&#123;+#_]!_&#123;(]&#123;!&#125;%$&amp;_&#125;)#($(_]*%+]_^%)$_)%^^!+&#123;]&#125;&#125;&#123;@%$@$+!]_!([[$(%)!$&amp;&#125;[%]]@&#125;</span></span><br><span class="line"><span class="string">!(@&#125;]&#123;^^*&#123;#*&amp;(^&#125;$&#123;!(]]^^%&#125;&amp;_%(*#]%!_$@&#125;($%@(_#&#123;!*@[&amp;+#!&#123;&#123;[^]!#&#123;$&#123;&#123;*&#123;![(_*^(_]%$[</span></span><br><span class="line"><span class="string">@(^$_)@(!^@@#&#123;&#123;]&#125;)]*]^^*@][!@&amp;)@^]%(]_$%$&#123;$^)@)_))][*^#))@*&amp;%_&#123;)&#125;^_&amp;&amp;__#!*^&amp;)^*_</span></span><br><span class="line"><span class="string">+*!&#125;^^&#123;&#125;&#123;([&amp;#&#123;&#125;]&#125;$&#125;@!%[$@]!#!+!^(&#123;))$&#125;]#&#123;&amp;)!^)@&#125;$&#123;@%^]%&#125;#$%+^*)[&amp;^+)+)@@#_^+)^&amp;*</span></span><br><span class="line"><span class="string">&amp;[^((&#123;&#123;*)_*)++#$&#123;[&amp;+)]$&amp;)]_%_&amp;%&amp;&#123;!(&#125;_&#125;_&#125;^[)]_@@&amp;(![@&#125;&#123;&#123;$&#125;+#+^@%))@$*^)+^+]++&amp;&amp;*#</span></span><br><span class="line"><span class="string">@)###%^)&amp;][%*_^&amp;()%*[@^+%$@+@&#123;*@([_+]&#125;&#123;)&#123;(^&amp;&#125;$(#[*&amp;&#123;)]&amp;&#123;$_^@&amp;&amp;&#125;(+$@!++%*!+%^)!#[</span></span><br><span class="line"><span class="string">#]^&#125;&#123;$&#125;*@#@$$[]_!+]&amp;+^@@)&#123;#&amp;**&#125;&#123;&#123;[%$[^!&amp;@])&amp;)_]%(!&#123;*#@]#())+^_#&#123;^](&amp;](##[&amp;[&#125;^&amp;%@</span></span><br><span class="line"><span class="string">(&#123;[!+@(]$&amp;]&amp;$[&#125;+(&amp;%%[!!&amp;(@(*$*[&#125;$@($%*&#125;_]!_@!^_(($&#123;[&#125;^%&#125;+^**@%&#123;%_!&amp;$&#125;$_)&amp;*^^@&amp;]!</span></span><br><span class="line"><span class="string">&#125;*!@!&amp;^&#123;^&#125;*@#[)&#123;%)%+]_$$+%$[(@)&#123;%*&#123;++&#125;$&amp;[^&amp;&#123;]&amp;#&amp;@&#123;#[]&#125;]%$__$@^+$&#125;*%))&amp;!%!**#%+**</span></span><br><span class="line"><span class="string">$&#125;&amp;@*&amp;*&#125;^+^[&amp;]&#125;[_&#125;__][]![&amp;(!![]!(@#@&amp;**&#125;*([&#125;*_&#125;&amp;!&#123;&#125;)*_&amp;$_][]@[@[)__&#125;@]*]+]&#125;^[$%!</span></span><br><span class="line"><span class="string">!&#123;_^++&#125;&#125;))$*%!&amp;&#125;#[@&#123;[^&amp;&amp;[_&#123;!)&#125;_]%@&amp;+&#125;&#125;+[[&amp;+&#125;[[+&amp;&amp;!)!_&#123;&#123;^&amp;]%*+!@^%$)+(%^+*^[+[]&#125;*</span></span><br><span class="line"><span class="string">]$#&#123;_&amp;_)&#123;*_@[@&#123;@&#125;&#123;(^]%^%&amp;(@&amp;)(&amp;&amp;@[*&amp;*%@&#123;]!)$^^[[^&#125;$#!$&amp;_(@&#125;%^()_+!)&#125;[*!)&#123;&#125;!(&#125;*)&amp;</span></span><br><span class="line"><span class="string">@+([!@&#123;+&#123;$^*##&#123;(^@$#+![*&#125;#$[&amp;&amp;^^#_^#%$*&#125;#*+^@[]%#$@^+*)*#^$$&#123;)][#)&amp;)(]^!@)!%@$]&amp;</span></span><br><span class="line"><span class="string">%]&amp;&#125;!_%@*#&#125;#&#125;^&amp;#[[!*)(#&#125;]&#125;])])+]#($)%]_@$(&amp;(%][&amp;)&#125;_[@%^!&#123;&amp;!+&amp;]$&amp;#@+[&amp;!^@^%%$[#%)</span></span><br><span class="line"><span class="string">#^%&amp;&#123;+(+^$+]&#125;^(!&#125;^#*&#125;&#125;&amp;)*)$(&#125;*&amp;&amp;&#125;$@@#&amp;!&amp;[]_]+*)!)+_%))&#125;%_&amp;!%_$_+##^(@^&amp;)%_@*_(&amp;(</span></span><br><span class="line"><span class="string">&#125;$]^@(%(*)((_^!%&#125;%[&#125;__]##+(_@&#123;%%+*&#125;*(^&#125;(%)$&#125;@+@_*[$+%*+)$&#125;&amp;![)&#125;+#($#&#123;@^##%!&#125;!@)_</span></span><br><span class="line"><span class="string">_)&#125;&#125;%+&#125;&amp;[+%%#_&#125;]!%_$%#([#*]((&#123;(_$[!!&#125;^&#123;$_@^+(*_[#)]!$_^)*)!_&#125;*$*$&amp;(]!_[+*+&amp;_*)*(</span></span><br><span class="line"><span class="string">&amp;](]&amp;&amp;@+!@$$%&#123;]+(($@&amp;)&#125;%&#125;$]_&#123;&#123;)&amp;*&#125;%+[&#125;($$&amp;%_#]%#^^_&#125;[+#!+(!#@%&#125;_$&#123;(!])!]&#125;&#123;%$%%*]</span></span><br><span class="line"><span class="string">[)]&#125;(_%]]!+*&#123;+]_+#@)!&#123;#()*__&#123;+^^@#!((&#125;#()*[$&#123;#(&#125;^**[^+$&amp;&amp;*]_%&amp;&#123;$]!%&#123;+$+)*&#125;[&amp;(&#125;(#</span></span><br><span class="line"><span class="string">++]&#125;#[*%$&#125;[$_$([$$&#125;[**!!%&#123;*&amp;[$@^_&amp;$$*#&#123;![&amp;^($([%$@&#123;&#123;&#123;@))]#_]&#123;$([[+[%#[^*&#123;+(_%$+(</span></span><br><span class="line"><span class="string">^$(!$&#125;[(_^^&#125;(&amp;#*[[@]*[[_#]+__+*&#123;_*)_&amp;()@!@&#125;#[++^!#^!!&amp;^*((@%%(^^&#123;&#123;*[&amp;+#(+&amp;][&#123;*)&#123;</span></span><br><span class="line"><span class="string">#++!]%#_!+&#125;@^](_]*^!+$]*$[^_[*&amp;&amp;@]*$![%%&#123;&#125;&#123;&amp;%&#123;&#125;][+(&amp;&#125;&#123;)(&amp;%]^))&amp;&#125;^*#_+$+@_@*#%%[$</span></span><br><span class="line"><span class="string">!#&#125;*!(_]+$@_[@%^(#_[*&#123;!!($!)%+#%)%*%@@%&#123;(!##*&#123;&amp;@#*&#123;!!!)^(___*]_[#!%^[!*+!&#125;%&#123;#]($</span></span><br><span class="line"><span class="string">&#125;^+$]&#125;$)&#125;^__$)())@](@]]_&amp;!*[&amp;(*^_##$_)&amp;)_!$&#123;$(($$$+$($)^#$(*&#125;&amp;$$)%]*&#123;%@%(!*]&amp;^[_</span></span><br><span class="line"><span class="string">]&amp;*)](&#125;&#123;%$]&#125;&#125;%%]!_*&#123;(_[]([^[@!&#125;[[$^!&#125;#)**%#$&#125;#&#123;#&amp;%!%![_&amp;(]^_#!!&#123;+@+*@$^#+#@[&#125;%*%</span></span><br><span class="line"><span class="string">$*%%&#123;^^(*#*+^&#125;&#123;]]^&amp;^&#123;!@$*&amp;%&#123;%^)]$[_$&#123;[&#123;^!(+&#123;_*]@]&#125;&#123;%^&#125;^$%(([&#125;[+&amp;[]^&amp;^&amp;#^)^$&#125;[!@[</span></span><br><span class="line"><span class="string">#[&amp;[_##!&amp;]*_$%$&amp;^++^!]&#123;%*&amp;$%%)+%+!+(&#123;+)#$&amp;@$@@*&#125;__[@&amp;&#123;++$[$_](*_&amp;&#123;&#123;_^*)%^_$@^&#123;#_</span></span><br><span class="line"><span class="string">@**]^)])*&#123;^)*@%^)+**!%#)%!(_#!)(+#!+&amp;&#123;$*]^&#125;%]&#123;!_$^&amp;!_@_)$%&amp;#&#123;^@^&amp;!#&amp;+&amp;$&#123;#]*_)]^]</span></span><br><span class="line"><span class="string">#%_%@&#123;&#125;!+&amp;#&#125;&#125;$*()&#123;&#125;]_))%)&#125;&#125;_![&#125;@&#125;(#&#125;#[&#125;&#123;[#^%#_*)&#123;_$&amp;]!&#123;#(]^]&amp;[!)&amp;&amp;&#125;(]^$%_(^&#123;)&#125;!+</span></span><br><span class="line"><span class="string">)##]]&#125;_@]&#125;__&#123;#&#125;++!&#123;![*^%]&#123;]]^&#125;%!&#123;&#123;&amp;@&#125;!#&amp;[^$[&#125;]&#123;%$)(&#123;#(%@$%[(()#^]%^$!&#125;$$$&amp;_%#&amp;&#123;+</span></span><br><span class="line"><span class="string">_(@%&#123;&#125;(%#]*^!@$[&amp;^]&#125;&amp;*&amp;&#125;%%%^()]!((_%^&#123;$[_[&#125;_$$+&amp;^%@@+%[(]+&#123;$+$_^+#*%[#_!%)!#%_@%</span></span><br><span class="line"><span class="string">$)_!]&amp;*[)[&#123;&#123;]&amp;&#123;!*[*&#125;#&#123;*&#125;&#125;!&amp;_+$!#*)[&#125;)]%+&#123;#$+&#125;@$&amp;+_&#123;$%&#123;)&amp;$!&#123;*&#125;&#125;]$&#123;#[^&#123;#&#123;%&#123;&#123;+)@+_$</span></span><br><span class="line"><span class="string">[&#123;&#123;[(^[[!&#125;*$!+&#125;)+^$*_!+_&#123;*(*#%)]@$&#123;*(#&amp;#&#123;&#123;[!%*_(@([$(+$#(^*$&#123;[$%&#125;&#125;&amp;&amp;@#)^*!(^&amp;[^$</span></span><br><span class="line"><span class="string">]&amp;#@^][*(^@%]&amp;#%@((]&#123;)(@@&#125;[^@[*@(&#125;@&#123;%$%&#123;&#125;&amp;+&#123;+^&#125;^)^^&amp;!%!@_!*$![^__(+[(_$&#125;&#125;&#125;*#^&#125;)*</span></span><br><span class="line"><span class="string">)%$%@_#*#&#125;^!&#125;&#125;^*$+&#125;%&#125;#]_[]&amp;+&#123;$]%(_&amp;&#123;&amp;[_&#123;^^##!$^*_+@#&amp;@&#123;_)!)*#(%[%$_(]&#123;@_(#(]&amp;#_[</span></span><br><span class="line"><span class="string">[(#%]$+&#123;#_&#123;)&#123;&amp;[$%%&#123;+&amp;&amp;$)_@*%(%(^^!$)__%*&amp;$$@@])&amp;&#123;%[_&amp;!&#125;]%]_[(&#125;#&#125;&#123;_^!()&#123;&amp;+(]+&#123;#__</span></span><br><span class="line"><span class="string">*@_])_&amp;&amp;%+([!(&#125;&amp;+(#)(&amp;)+$(]*(^_&amp;^&#125;&#123;^][_&amp;^#(_@[!%[#]&#125;]$^+(_&amp;!&amp;[)_^#^!&#125;[&#123;]&amp;&#125;^#&#123;%^$</span></span><br><span class="line"><span class="string">[)$&#123;]$$*^&#125;+(#%+^&amp;&#123;%*[&amp;&amp;%*_)@&#123;)](](+)(#$_^[^_]@*!&amp;[(%]^&#125;%&#123;*)_+**@(%*&#123;^[&amp;[$[@*#&#125;+]</span></span><br><span class="line"><span class="string">]@$*+%)(^$$)#&#125;!&#125;[@)%&#123;+#$%##@)%$))_)#&#123;!@#)_*@&#125;[[(#)#)*+]&#123;[(_]$&#125;_@&#123;*$$[%$]!^+&amp;(!([</span></span><br><span class="line"><span class="string">&#125;)&#125;%((&#125;*()##)%((&#123;&#125;!)[_[*&#125;*#!&#125;*&#123;]!#]&#125;^][))_&#123;%[&amp;&#123;!(@&amp;@%(]&#123;*&amp;*)()&#125;+!)@&#125;%&#125;+!)$&amp;!_]]*</span></span><br><span class="line"><span class="string">+&amp;*%)@#!##@&amp;*(_^]$&#123;&#123;]!$!)*$!+][[[@^]%^#&#123;&amp;%!+@**&amp;&#125;]%$$[]!!![+)&#125;%)]](![[[![!&#125;*^###</span></span><br><span class="line"><span class="string">[^*@&#125;@&#125;)[%&#123;_&#123;_^_((&amp;%^&#123;@#%&#125;()$&#125;[&amp;*&#123;]*])%)@&#123;]#((&amp;#+)&amp;+&amp;_&#125;#+&amp;]&#123;_@#%[*)&amp;+!@!^)+$[@![</span></span><br><span class="line"><span class="string">^_&#125;%@#!)&amp;$#!%)%)***+_$+(!@&#123;#$)&amp;!$&amp;_^(%!*(^]^]^^(&amp;(]@^&amp;*(&amp;%_(!@*(&#123;%)&amp;!$_]$$((**@+</span></span><br><span class="line"><span class="string">])_^_([&#123;&#123;()&#125;+&#125;&amp;$($#&amp;$*+#&amp;$%*^&#125;[@*@@*[^+)&amp;(]^)()$+!(^@!!*@]*&#123;@^])&#123;_(&#125;%*$]$#@&amp;!$(^</span></span><br><span class="line"><span class="string">@*)*%*_&amp;!##*![_$_^#+!&#125;&#123;!&amp;]+%*@^#^[+(&#123;!#*%@+^*@!+&#125;)^$+[@@_](]$&#125;($^&#125;^$&amp;*&#125;&#125;$%@#!%[*</span></span><br><span class="line"><span class="string">)[*)(%(!&#125;*%$_+&amp;(^$[_$%_]]+$#&#123;)&#125;_##[*&amp;#@[@!(&amp;&amp;$@&#123;!^^%%_@*($(!%#[&#125;[!$[__&#123;+]*$$]*@)</span></span><br><span class="line"><span class="string">*)(!^)&amp;($)*!+^^#)&#125;[&amp;^!%&amp;#](&#123;]&amp;[%!$!++^))&amp;_%&#125;+]#&#123;%)&#125;%[[+[^]+#+&#125;)[]*)&#123;_&#123;[]#)_&amp;^[&#123;*</span></span><br><span class="line"><span class="string">[^+$)_&amp;%(^+_&amp;*(]]]^^#&#123;)%^&#123;@@&amp;*&#123;#+_)^&#125;^]&#125;_#]%_[##@)&#125;[*[+_(]&#123;*&amp;#$$#*(*)(_&#125;&#125;&#125;@[%*()</span></span><br><span class="line"><span class="string">^@)[$#[($_]&#123;$%[&amp;!(&amp;+!]*(&amp;@!&#123;%(][*[]$&#123;#&#123;)&#125;+]]&amp;@)!$#&#125;(&amp;])#^^!)%!^_&#123;&#125;[]_[@&#123;[@#[&amp;&#123;(]</span></span><br><span class="line"><span class="string">@&#123;)%_]#*&#123;%^&amp;@%$[@((*)_%!#+*^]]!&#125;$]+&#125;^]&amp;$#[&#125;&#123;$*#^$$_&#123;&#123;&#125;&#125;@[@+@+&amp;&#125;&#125;^^@[[@@&#125;)()(@&amp;)[</span></span><br><span class="line"><span class="string">$&amp;[&#125;#%&amp;%[!!$_!(&#125;!___!#^%)^[$&#123;#_&amp;&amp;&#123;&amp;])&#125;*]^&#125;&amp;_$@&#123;[@$@&amp;&#125;[%)!@&#123;*%&amp;*&#125;%%&amp;^$^)&#125;^&#123;&#125;&#123;&amp;_+!</span></span><br><span class="line"><span class="string">__^&#125;[&#125;+_]$*&#125;[^$#@%_^&amp;&#123;&#125;!&#125;&amp;*(@)+^&#123;@+[_*(!@(&#125;&#123;#][+&amp;]&#125;&amp;_)*]&amp;*$*^]@&#125;+$!#$(@&#123;&#123;%([@+@&#125;</span></span><br><span class="line"><span class="string">*&#123;]_@&#123;*[[($@]&amp;)#_!&#125;%)($@@)$+&#123;)(*(#&#123;&amp;#&#123;!&amp;[&amp;+](@*!#)&#125;%+&#123;(%$#]&amp;[))@&#123;(&amp;*@(!&amp;[$#*$*!(</span></span><br><span class="line"><span class="string">^+#%*&#125;*($[%@&#123;_#@!&amp;[&amp;&amp;&#123;[+&amp;&amp;%&amp;!_@%#%$#_)&amp;%@($+#@!&#123;+[(]&#123;^*^(^[)&#125;_&amp;_[&#125;(#[^*%!+)@+%^#</span></span><br><span class="line"><span class="string">&amp;#$#@^&#125;*$##@$+#]^%&#125;[[(]&#123;+&#123;[#!&#125;$)(##@(_)#^&amp;%]_%_%(&amp;@)!((+!(]%#@#)!&amp;][$[)]]*(+(&#123;@_</span></span><br><span class="line"><span class="string">)&#125;%)+*]%#$&#123;(!&amp;*&amp;!$^)&#123;^&#125;)$#&#125;&#125;^%+@$*_])&#125;%@(&amp;!#&amp;%@@+]]^^]_**)^]&amp;+[$_%]*__*@&#125;@)([[@^</span></span><br><span class="line"><span class="string">^#%!^&#125;!&amp;%%&amp;!$+&amp;%%$#$#$^**]!]+#((#_^$&amp;#()(_#_&#123;&#125;&#125;&amp;_#^+++#_)@_)+@%[+(+![^&amp;#][%**$+#</span></span><br><span class="line"><span class="string">#&#125;([]&#123;&#123;]&#125;_]#$]&#125;$$&amp;&#125;_%$([%$&amp;#[#]+[_)@([!+$&#123;)$&#125;%*&#123;%!)##&#125;*&#123;&amp;]&amp;!#^$*&#125;+]_&amp;#&#125;&#123;]&amp;#]#&amp;(_</span></span><br><span class="line"><span class="string">^+@@+##_]]*#^_^&amp;%_&amp;@!$[&#125;*&amp;$+!_@*)$[&amp;$[*$(!^#@#+%_*[^&#123;@&#125;]&#125;#+]&#125;&amp;!@_+)(++&amp;&amp;(#&#123;[#*@&#123;</span></span><br><span class="line"><span class="string">]$]&#125;(]^*!%@]&amp;&amp;!%&amp;&#125;)(])+@^&amp;@$@@[(%*@*^++^$##&#123;[$^&#123;*$&amp;&#123;@$!%^@$_#]$_^#@@**+^$%)*%%&#123;]</span></span><br><span class="line"><span class="string">(&amp;[[)*](*&#125;%*%@+$$&#123;&amp;)_#+^^]@$&#125;%$]@[]$[_@]^!]&amp;&amp;+[[$!%&#123;_((%&amp;&#123;@[)_^#)%!](__[)+_**$(]</span></span><br><span class="line"><span class="string">$##&amp;(*[#)&#125;[^&amp;%[@@)*(()_#@)[*#%!&amp;&#125;[)%^+@+&#123;)[++&#125;_+[+])&amp;#^!)+#%(@*]$*]$_^^#$$%!_*&amp;&amp;</span></span><br><span class="line"><span class="string">%$)&#123;^[])&amp;$@&#123;^@+_]([(])**)](*+$*&#123;@%]+)^*+[]&amp;+%%[(%&amp;#!&#123;_^%#*[^&#125;)*$]*%^&amp;*)+&#123;(%&#125;#]_#</span></span><br><span class="line"><span class="string">&#123;($#&amp;!^!&#123;[&#125;(&#125;@&#125;&#125;&#123;%&amp;(@!+_)]!*%)!(^!**!&#123;!(&#123;&#125;&#125;&#125;&amp;&#123;%&amp;@#(&#123;_](+&#125;##@$)!]^!]#!^^_[)%&#125;@&#125;))</span></span><br><span class="line"><span class="string">[#^#&#125;(%&#123;#*%**&#123;]]((__)![]^+]+@__*_&#123;)$*#)&amp;][!)_&#123;&amp;$&#125;&#125;#_$#([++&#123;[$*()_**#_#%_$)#]*%_(</span></span><br><span class="line"><span class="string">*+^*(&#125;*$_%[$&#123;)+[%[%^#_]&amp;*+&#123;&amp;)^*&#123;**$[(!&#125;*&amp;@![&amp;(&#123;&#125;*#&amp;@_&amp;$)@$]!*@&#125;&#125;&amp;&#123;%&#123;*[&#125;+]_%$])_%</span></span><br><span class="line"><span class="string">%#+&amp;$&#125;#&amp;_%&amp;[%&#123;+[&#123;@_$!$])!*#*_$($))#!+)))&amp;_[^!&amp;)*&#125;+)_)&#123;@&#123;+(&amp;&amp;_^&amp;&#123;]$&amp;!%_&#123;*&amp;&amp;!#[+*@</span></span><br><span class="line"><span class="string">]&#123;[]]&#125;]%$!$_]]%%$@^](!&#125;]!^[!^(%$%*$]&amp;)@%!#+@@**$^%!*$$(_^[%*!)^$]^@_#&#125;@(*&#125;)&#123;(&#123;+(</span></span><br><span class="line"><span class="string">$&#125;^%_]#$!#@[@])[_]*[]_+!(&#125;([]$&amp;&#125;&#123;([[&amp;&amp;&#125;@$@*+]]&#123;&amp;&#123;#[_&#123;^)@&amp;@[$(#&#123;&amp;&#123;$]!$#_#(&#125;^]&#123;+_[</span></span><br><span class="line"><span class="string">@&#123;&amp;_@[#&amp;^!#!%%@]^]]@&#123;[[@](]][)+)^%![#%@%]%&amp;@)[@@]^[!*]&amp;!^+^!]&#123;+&amp;#%()+&#123;@$)*&#123;#([^(</span></span><br><span class="line"><span class="string">_*[*#^@[&amp;#@^&#125;!@%!)*^%!]]#&amp;%@$&amp;^+&#123;$&#123;^(]!&#123;[%[+_&#125;$!(]&#125;!+&amp;*&#125;#&#125;@@#&#125;[*$*&#125;^^)#)&amp;_!![(@_</span></span><br><span class="line"><span class="string">__&amp;([^$)+@##&#123;**%&amp;!%&#125;$)@(+*])&amp;!&amp;_![^@)&#125;&#123;!_&#125;&#125;*@[!^^)]&#123;$%&#123;+^(&#123;@$*!((*%%&#125;_@)_&#123;!*%&#123;))</span></span><br><span class="line"><span class="string">(*&amp;)$*)#_#&amp;%%!$&#125;_^&#125;+%]$&#123;&#125;&amp;($&#125;!]!*()@!&#123;*)%%*%&#125;&#125;_^_*&#125;@@_&#125;%&amp;^[])*(_&#125;_#_$@(!$*+#*)+$</span></span><br><span class="line"><span class="string">!+[*[%*+([&amp;[*@&amp;_]^$]&amp;_+^^+_@]_+&#125;^*@&#123;_&#125;)@!%@_!*&amp;^!((&#125;!__$#*)!&#125;)[))[&#123;^($]@$@$($&amp;%)</span></span><br><span class="line"><span class="string">@#@%!!&amp;*^*&amp;@#*&#125;&amp;[(@#&amp;@(*!^@&#123;%]^&#123;%&amp;!&#125;#[%&#125;%()%!*@+&amp;!)]!]^%&#123;(^!$!(^@+&amp;$%)@%!@_&#123;[#[%</span></span><br><span class="line"><span class="string">)#]**+*]@&#125;!&amp;($*])$&#125;![%%%^+#&#123;]*[$@@)&#123;@_&#125;]@([&#125;&#123;](!&amp;#[%_%&#125;&#123;&amp;#^%@^_!&#125;@[$&#123;&amp;$&amp;*$)]#(&amp;_</span></span><br><span class="line"><span class="string">&#123;&#123;*#[]+$%*_])))^+#*[++#*#&#125;$]@$#(+[_]#]^(_^#)_%__![(%(&amp;((^$*%%&amp;])+)]&amp;(&amp;$&amp;#)]()$&#123;&amp;</span></span><br><span class="line"><span class="string">_#$@)$@$@@&#125;)[$_([(_^[+##)@]*(#^%(%($&#123;[&amp;+#)@^))[^#$^_(]**&amp;%+%&amp;(+$^#[+&#125;))^^]_%$@#[</span></span><br><span class="line"><span class="string">$*$%&#125;*&#123;!^[#@&#125;&amp;&#123;&amp;[(+@$)&amp;!$&amp;#&#125;&#123;]]++#]@!)[&amp;@[_#)!!%)&#123;$]&amp;)&#125;)*@)[&#123;()@!)@^(#@]+@_$&amp;#*@</span></span><br><span class="line"><span class="string">+^&#123;&#125;^*_&amp;^$*(#^!%)@()@&#123;!%%&#125;^#@_)#%%_%!++&#123;&amp;(&#125;&#123;&#125;&#125;%&#123;++&#125;+&amp;$]]@)@(+&#123;()][%*&amp;_*!!#!@[!]@</span></span><br><span class="line"><span class="string">]+*_^$@&amp;!)+!&#123;+&#123;&#125;&amp;_&amp;))@&amp;&#123;&#123;++&#123;&#123;&#125;@#[*)%%$]&#123;%#!+#%@@_*&#125;!!)&amp;%!&#123;&#123;($$&amp;%[*&#123;[!^**&amp;[_[_+&#125;^</span></span><br><span class="line"><span class="string">_$]^[]+__$&#123;$@%&amp;@[^&#125;&#125;#&#125;+]_#(@_&#125;+^+%^##]^$_&#123;@+!_$&#125;##_@#&amp;&#123;@_++@)*$&#123;*%^))%&#123;&#125;_@@&amp;[)*$</span></span><br><span class="line"><span class="string">_^]&#125;#&amp;(%^@^+[*&#123;^&#125;&#123;_*)%@)$$#[(+(&amp;^]#![&#123;^_&#123;([+&amp;(!*^#&amp;&#123;$&#125;@#(&amp;!!(!&#123;(&#123;^%%@!&#123;+&#123;)])^^(&#123;</span></span><br><span class="line"><span class="string">(+&#123;_%#(%)%(**(@&amp;%$*#_+$^^!$)!$$%*&amp;&amp;%&amp;[^[+(@$$&#123;!@)$#_[^&#125;&#123;)_%!@&amp;%&#123;&#123;$*]@&amp;%)&#123;[&#125;!!^&#125;+</span></span><br><span class="line"><span class="string">%+[!*$]&#125;(+#@*#&amp;&amp;[_)!*&#125;&amp;*#&amp;#*^@&amp;[%(_)!&amp;+#^&#123;#%#((+#+]]#@]$!!$@@!@[&#123;))#()&#125;(&#125;[^@*)&#125;#</span></span><br><span class="line"><span class="string">_#[!^$&#123;]$)]_!@@+$@(@+^$()*&#123;!&#123;&#123;(@#+$&amp;*@_$&amp;@*++[][%]$[(@&#123;]+&#125;&#125;$*&#123;%[%#&amp;%)]!&#125;(+__$]_*</span></span><br><span class="line"><span class="string">+][&#125;!&amp;^*&#125;_@!*&#125;*#()$^&amp;*%%#&#123;_*@_+[(&#123;!_%_]!^#@(&amp;@$&amp;]]%%+)!]_&#123;&amp;[&#125;^^)!#]_&#123;$^(&#123;(^**_[$</span></span><br><span class="line"><span class="string">]&#125;@)%_(!##]#![&#123;]%*((&#125;$)]&#123;&#125;&amp;(%&#123;&#123;$#+&amp;)_!#)_%&amp;@^()%*@#%&amp;!%+^_+(+$@($&amp;^!$_$%()!!_!(*</span></span><br><span class="line"><span class="string">%(]^_&#125;^#$])$]#&#123;%@*#%)+&#125;([^+*](!_^%[]%&#123;&#125;!_&amp;+[$@*%&#123;[@*!&#123;&#125;+^(@@&amp;)+!_[^&#125;*$&#123;@)^)&#123;@_&amp;$</span></span><br><span class="line"><span class="string">!*_@&amp;+!]^(*#^[%&amp;^%^+%&#125;&#123;[$^@]!$^&#123;&#125;&#123;(()#!%@]&#123;]&#125;(!)[#(*$)$()@*&#123;@_!$*#)$*+)])^&#123;!&#125;&#123;#^</span></span><br><span class="line"><span class="string">]]$&#123;!@&amp;![@&amp;+&amp;](#&#125;@(@&#123;&amp;@@!!#_(_)&amp;^!_&#125;@^$$+_(@%_[&#123;##%@*]&#125;[##@$&#123;$*($&#123;(#$&#123;)&#125;&#123;&#125;%#!%#$</span></span><br><span class="line"><span class="string">(#&#125;&amp;_#%!+](!$@)&#125;##[^!#&#123;^&#125;&amp;&amp;!)&amp;+@$^$%!$^$&#125;(*&amp;_&amp;[(_(*]&#123;$+#@_($@_&#125;!+#(&#123;*(^@(_([_#++</span></span><br><span class="line"><span class="string">&#125;[&amp;&amp;*!%)#!@&amp;(_[&#123;&#123;+&#125;@)[_^!&amp;($)_%*%)&#123;&#123;!^$_*^]@%%+@&amp;!#&#125;(%&#125;#])&amp;(^%$$+@%_#^^%+[!^&#125;!)!</span></span><br><span class="line"><span class="string">%*!*]^!!](@!([[]@_(#&#125;*%&amp;&#125;*&#123;&#125;%&amp;^($+!*%^!*[!_$_%@($^$[!#[^]^&#125;&#125;]!&#123;##^^!(#++!()$$([[</span></span><br><span class="line"><span class="string">][__&#123;&#125;(&amp;&#123;!&#123;_[&#123;+!&#123;*(&amp;)[^&#125;!@%&#123;]()_^$+&amp;_)!&amp;$[#_)(&amp;%!]$^+&#125;%]([_@&#123;)*!^#^*%[!^*!*#&#125;!*]</span></span><br><span class="line"><span class="string">]&#123;&amp;[+&amp;$@[+%@^$%(#!+$*^]^&#123;#!&amp;&#123;^@]]@@*[@^%#%(_+&#123;&#125;&amp;@(_)+)(+++^#&#125;)&#125;!+@)^_#&#125;_[&#123;^&amp;]#%(</span></span><br><span class="line"><span class="string">%(^]^]$(#_*_)@)@!^&#125;(&amp;_$#]&#125;)^(&#125;+#(_&#125;$]@$&amp;#&#123;^&#125;*!*]&#123;&#125;&#125;&#123;^&#125;[#^(^]&#125;[)+@^&#123;@)^@&#123;&amp;**__]&#125;]</span></span><br><span class="line"><span class="string">]_&#125;!%$+_$&#125;#&amp;_%)%[*&amp;%_@&#125;+&amp;+&amp;$]]#(([+([&#123;*[&#123;$+!@[%&#123;#^#$_]#)&#123;+$%*_&amp;%(+##$_&#125;%[&#125;!%!&amp;&#123;[</span></span><br><span class="line"><span class="string">&amp;@^%&amp;(%%%#[^*@[*&#123;&amp;*![[+$)&#123;!)%#_*(]^#!&#125;#+%)&amp;!^)*)(&#123;$[^%&#125;)^&#125;&#125;@)&#125;!)+^_[_^$)+)*+&amp;@*^</span></span><br><span class="line"><span class="string">%!!#!&amp;&#125;!%+[#!@[#@__*](_*+&amp;^$]*#&#125;!&amp;*@*[*&#123;)%)$*][&#125;^!][_@*]*&#125;&amp;*&#125;&#123;%*((^^@+]&amp;_%#[&amp;&#125;&#123;^</span></span><br><span class="line"><span class="string">[[!+&#125;&amp;[&amp;&#125;$)@&#123;!)&amp;*&#123;*[$)$)!&#123;&amp;!]#*[((!(]&#123;&#125;]#![)@&amp;&#125;]&#123;_!&amp;&#123;](&#123;$_^*%]#&#123;_]&#123;#]!&amp;*#*(_&amp;)@&#125;</span></span><br><span class="line"><span class="string">&#125;+^)(&#125;*^(+)+)($)#])^&#123;%#&amp;()!+%$&#125;(+$+#*[%)*@!([$_+[&#125;&amp;&amp;!^&amp;$[_]][&#123;%)[#%$*^%#$!*&#125;+!$(</span></span><br><span class="line"><span class="string">_[^&#125;&#123;$%@$))_$]+[[##%$]&amp;+]^]!)+^![(%+&#123;&amp;$%&amp;)_$[#%_%_&#123;*&#123;)(&#123;&#123;&amp;+^@_(&amp;!$&amp;!![[!&#123;%_**%%]</span></span><br><span class="line"><span class="string">&amp;*^&#125;!&#123;)]^^[(@+[&#123;!&amp;%%$[@]&amp;+$&amp;[)(&#123;&#123;#)[([(&#123;&#123;#!(](]$!$+#_[@((&#123;&amp;+@&#125;^&#125;!!&#123;@@**#_*_]$]](</span></span><br><span class="line"><span class="string">*&amp;]]&#123;#)%%@&#123;@$##[*][@#$[(@+()%%!@^]&#123;$#!([+#@&#125;&amp;_)#_@&#123;&amp;&#123;[#_&#125;+__*_%+__+&amp;&amp;*!]&amp;#%*%**&amp;</span></span><br><span class="line"><span class="string">###$@&#123;#!+[)&#123;$_&#125;[&#123;#%$@+[&#123;#)!#^&#125;[$%&#125;&#125;[@_@%+!!&#125;*&#125;]$)#)@%^*]!&#125;_*@&amp;)@!]*#*_&#125;##^[#@^%]</span></span><br><span class="line"><span class="string">$)!_%&amp;*^*#!&#123;%&amp;+%#^![%$)*@%*+&#125;+%_#[&amp;_&amp;+&#125;(#$+#@!#!!#!%$@&amp;+[@[#+@@+[_^#&#125;$&amp;)&#125;$#]]&amp;*#</span></span><br><span class="line"><span class="string">+*!@!#(+$!][!&#125;@![$[_)$$&amp;)^)[[*&#123;@])&#125;+^(!&amp;*#%![(*+@+&amp;_[)+)]$(++($+)#]&#125;][]&#123;*@%&amp;@$$_</span></span><br><span class="line"><span class="string">*+&#125;)+*&amp;^_*!$)#@_%&amp;]&#125;+%#(&amp;$&#123;$+(@&#125;()](^&#125;&amp;!&amp;+[]^[#()+!#^_@]&#123;*#&#123;&#123;[_]_[*)[+#+^]+&amp;%&amp;!!</span></span><br><span class="line"><span class="string">*%($)_@]%)_!$_*!*@(_$_^^^$)&#125;&#123;&amp;!@)%(&#123;(+(&amp;[+%&amp;+%&#125;_)(#]$!!)%[!&amp;+)*@%+&#125;])$&#125;#&amp;)*[!++&#125;</span></span><br><span class="line"><span class="string">*)](+&#123;^!&amp;$)_#[*&amp;^)))[#&#125;$(&#123;(&#125;!+&#123;]#[_&#123;[&#125;*+]!@[*^%]&amp;&#123;^&amp;&#123;)]#&#123;#)&amp;$&#123;(]+&#123;$])&amp;@]&#123;&#123;)&#125;&amp;_$&#125;</span></span><br><span class="line"><span class="string">($^$+&#125;[&#123;#%]@_(]@@)(&amp;!_$&#125;[&amp;!!@&#123;!%%_&amp;[&#123;[@&amp;)&amp;$_$&#123;%_*%%&amp;@+#+%*!$]&#125;])^!](+_)[%&#123;^%&#123;+@*</span></span><br><span class="line"><span class="string">&amp;%+[%!&#123;_&#123;![+&amp;[&amp;!!_^_#^[%&amp;[[&#125;*++#!#**&#125;&#123;+&#125;[+&amp;+_$^^]&#125;^^_&#123;$)$&#123;!_)@_^_[&#125;*#&#125;&amp;&#123;!*@$#&#125;&#125;#</span></span><br><span class="line"><span class="string">*!^+&amp;)%**&#125;*&#123;@#^^$^*)**!@&amp;]]#[@@##%&#125;@@[(!)!&#125;*)%@+#+**)_%^&amp;#&#125;(+]][(%#*]_(&#125;&amp;)&#123;#%*#_</span></span><br><span class="line"><span class="string">&#123;^&#125;_%*&#123;^**@&amp;)[&amp;!#_#)&#123;@+@&#125;&amp;$()!][*_**#(&amp;*&#123;&amp;]@&amp;@#^$&#123;&amp;!]&#125;%^*@)!**&amp;&amp;(@^()@*!_$@]@($+</span></span><br><span class="line"><span class="string">&#125;]&#123;!&#125;#]$[!&amp;&amp;[*(!]!$))%+$%&#123;!&#123;^[^[$@[((]#!%@)!]__+&#123;&#125;%&#123;_^_!&#123;@&#123;)^)+&amp;%&amp;!^*&#123;_&amp;$][!]@_%</span></span><br><span class="line"><span class="string">%&amp;!#a&#125;#+#^#&#123;_&amp;)(&#123;%!_]!_][&#125;^_%*+&#125;$)&amp;!@[)#@&#123;@[%*!*#_[$$(_[+!^[[[[+*&#123;[*+&#123;!#&amp;*^@&amp;+%)</span></span><br><span class="line"><span class="string">%#&#125;&amp;)#%*]!@#_&amp;@!^&#123;@]#)_&amp;@)&#123;*#]@&#123;@&#125;%@]!(&#125;$*)%#[)^&#123;)&#125;&amp;#[]@&#125;%+)@@&#125;#^#_[]*(%@)!)#+@&#123;</span></span><br><span class="line"><span class="string">$&#125;*@@[&#125;)+(&#125;)&#125;&#125;&#123;@&#123;%&#123;%*&#123;&#123;%*+^*%]@]&#123;[^[_&amp;+#(&amp;_]!([#&amp;_[%]![[_#)&amp;@%&amp;]!$_&amp;#&amp;^#@^*+@%))</span></span><br><span class="line"><span class="string">&#123;&#123;)!%[$#!_[@!(([)++&#125;*)%]@^#![!&#123;+$+((#)+$_^]__]+_^@+_&#125;[%+[&#123;()_%!*&#125;$+[$#%%%&#125;$%]&#125;&#123;&amp;</span></span><br><span class="line"><span class="string">^+&amp;)^@)$%&#125;]!(%^%(]+!^&amp;_&#125;_*%@]((%%&amp;!)[*_([#&#123;&amp;!)@$!!!$)&#123;(&amp;$&#125;&amp;!%*$]%&amp;&#123;&#125;)^+&#125;@]@(*(*!</span></span><br><span class="line"><span class="string">[)&#125;%+^_[^%(_%**&#123;%(&#123;&#123;$]&#125;[*_)&amp;(*(+&#123;@!&amp;$%&#123;!&#123;#*&#123;!%&#123;)![_&#125;%&#125;&#123;[!(]@*@#([(*$&#123;*[[*($+!])#</span></span><br><span class="line"><span class="string">@&#125;(&#123;%&amp;@&#125;#_^#+_^(*+$)$@+(^[$*#!&#123;_!_]&#125;!(#)_)*(!&#123;^(@(*!#$)&#123;[#]&amp;$^[+]!%_&#125;+*]&#125;&#125;&#125;%^_@#</span></span><br><span class="line"><span class="string">+@&amp;][&amp;^[[&amp;!]*!)$%[#*]!*[*^^(_[*]^]!+#$[*##!!__&amp;&#125;^&amp;^(^*%!&amp;%&#123;[**@%$%]&#125;+^!]_#&amp;+@+[&#123;</span></span><br><span class="line"><span class="string">$$^@)(#(&#125;@&#123;&amp;*&#125;^$!![%^$*$##^$#+)&amp;[%+&#125;&#125;#[@!&#125;!&#123;#&#125;+@$*$+&#123;&#125;^[)[]^&#125;!)!])]^@&#125;+&#123;^_%(@*()</span></span><br><span class="line"><span class="string">@]$]!#$$%)())+)&#125;_#*)(_&#125;*@](^@!*&amp;_^!$(!(_!$+@*[)$$*($)+%!&#123;@_&#125;!@_+&#125;+]@(#&#125;[^%@(][(&#125;</span></span><br><span class="line"><span class="string">(_@^&amp;^*)[*$*)+&amp;$@)&#123;]$#^(#_(&#123;&#125;**+!#$&#123;()_)#^+)&amp;)*[%$%@^]&#125;)#&#123;+^&amp;*]_#^!]!)][#*#%!_%$</span></span><br><span class="line"><span class="string">]$&amp;@@&amp;[!$(!+_^#*($(_]]&#123;&amp;+!]*_)!$_%)*&#125;&amp;][[+(^]_[&#123;[^^$*^&#123;*!#*))!&#123;@+&#123;#$[+(^+*%(+*++</span></span><br><span class="line"><span class="string">!+)&amp;_)*&#125;&#123;!!#$_&amp;%%*]&amp;&#125;+*&amp;&amp;&#125;%&#125;))&amp;#($##!$!#**@^%]&#123;##$!)*#+@(%))&#125;]__[^$^&#125;)_@)]@*&#123;&amp;[$</span></span><br><span class="line"><span class="string">)]^_!#]%&amp;#[&#125;&#125;(][+&#125;^^_&#125;&#123;@+%^[)$@%+_(&amp;&#123;*%*)]_@+]($!@*[)%#$]&#125;#[_$!%_&#125;*)(*_+&#125;_&amp;%&amp;&#123;&#125;)</span></span><br><span class="line"><span class="string">&amp;+(](&#123;$]&#123;+%*&#125;]@&amp;(([&amp;(&amp;^&amp;!@&#123;][^+^^)!@#[[%_!@^&#125;_[(+@!!^+@$&#123;[]%]]@&amp;[&#123;&#125;^)+()@%&amp;&#125;#!(@</span></span><br><span class="line"><span class="string">[!)*%)^!&#125;&amp;(&#125;+[(#$^@*&#125;%_$+)[)&#125;!+^](+__@@&#123;%&#125;(#_#)[%[([$)*#)@&amp;&amp;*&amp;#_$&#125;&#123;!_+_!$_*_)&amp;@)</span></span><br><span class="line"><span class="string">!&#125;&#125;(_[@)!_[[[&amp;^$#+$)[)%##_[%&#123;+*@&#125;($&amp;)!&#125;&#125;&#123;%%#[#!#*&amp;*@@_%@@#!#&#123;!%][&#125;+_](*+*&#123;@&#125;&#125;@%@</span></span><br><span class="line"><span class="string">)+_#_^!#(#+&#125;]!]()@$%&amp;!&#123;^&amp;*!^&amp;##]^_+&#125;)&#125;+]*%%*@_[(!%]&#125;^([%&#123;]%#][$@!@&#123;&amp;+]**^&#123;%&#125;^&amp;([</span></span><br><span class="line"><span class="string">(][@+^$^$[#&#123;@#)][&#125;_@!]][)$_(&#123;%#)%&amp;)!&#125;(@])!&#123;_#$((*[@[&#125;##^($&amp;]+&#123;^]!$&#125;^]&amp;[&amp;]&#125;*&#123;[&#123;_^</span></span><br><span class="line"><span class="string">%!)%]&amp;]^#!+$_*+)$$(@]+]*#+@%]&amp;$_]#*&#125;%$[#_%^+&#123;+&#125;$$[&amp;&amp;*^_]@^*@!@^+*]%^!()&#123;#^^()&#123;&#123;^</span></span><br><span class="line"><span class="string">[^]]$$^&#123;&amp;*&#123;)%@^$%&#125;!%](@&amp;!^&amp;]!@&#123;%&#125;[]_![#]!]#[&#125;]&#123;!)+@+#!_&amp;]^_@+$&#125;_[_%([$(&amp;)$)!&amp;+)&#123;</span></span><br><span class="line"><span class="string">__@!&amp;$@!]&#125;^&amp;&#125;[%[[&amp;&amp;_#$(&#123;&#125;(#&#123;%_*[#!&#123;!&#123;@+_&#123;*$_%_]^^*#_@&#125;[+$&#123;$)!%_!#+#^*](%&#123;&#125;_@^)(@</span></span><br><span class="line"><span class="string">&amp;$__@@)$!**_[*%!]#$%]@!@]()]%!!%_+%&#125;[]$+%)^)#_[[&#125;+)*&#123;%(^%#&#125;*%&amp;[&#123;&#123;%%%[)%*%_(%%&amp;)*</span></span><br><span class="line"><span class="string">%(]#%!*(!]($!!&amp;&#125;%()+)*%$!&#125;]+&#125;!%&#123;&amp;+$&#125;(#]]&amp;()&amp;%!&amp;(&#125;!&amp;^&#123;@]!__$_@_[)]]@&amp;)&#125;@$[)+&#123;^)*%</span></span><br><span class="line"><span class="string">&#125;%%@@)]^)_](&amp;!#[@+^$)$#&#125;&#123;@^&#123;***&#123;[^*@](&#125;%&#125;(#&amp;*!&#125;+&#125;%][]]@#^$[*!+!@&#123;](*]*&amp;&amp;@$%&amp;[&#125;^+</span></span><br><span class="line"><span class="string">]&#123;[#[&amp;+&amp;_[]^(&#125;)!#!&#125;]&#123;&#125;&amp;&#123;_$]&amp;&amp;@($[[[+_&#123;!@$_+]&#125;](![@&#125;$[^!)_%]^*$#)*&amp;)#[&#123;%@!)[_(&#123;&amp;_</span></span><br><span class="line"><span class="string">!&amp;!@!#+&amp;^(!%^)#_^$)@*]&#123;_#(*&#123;%$$&#123;&#125;_&amp;&amp;$+@+[@&amp;&amp;!!%][##&amp;(+]+_[&#125;[&amp;&#125;_((&#125;%[]![^$(!&amp;_$$#</span></span><br><span class="line"><span class="string">!&#123;_&#125;&amp;[&amp;+^*)]!($]@*#^&amp;**]_($(_^])^_^^$!_!@&#123;&#125;]+&#123;]^&amp;!)&#125;%)^&#123;]&amp;*&#125;!%%!%[(_%&#125;&#123;&#125;$#+!])!!</span></span><br><span class="line"><span class="string">&#125;[&amp;&#125;!([!)%%(&#125;&amp;((&#125;]+!!)&amp;#(&amp;&#125;&#125;&#123;+&amp;)%^[%_%(&#125;+*!(_[*!_[#)^&amp;&amp;+&#125;_$!_$!&amp;+_[+%*(^!&amp;*@^&#123;@[</span></span><br><span class="line"><span class="string">]$&amp;]&#125;#[&amp;[#]]]^#%])](!+]]%!+$(*@^_#^*_&amp;)@[$&#123;&#123;$]]#&amp;]!+&amp;_!&#123;!)!%*+%_%_)$]#!]&#123;+_[)&#123;$^</span></span><br><span class="line"><span class="string">_#[^$_#%^]^&amp;[)$@)]]&#123;@@^(&amp;[([!&#125;@&#125;%]!+_((_^[&#123;$&amp;^(^)*((![*&#123;_+#(]#^[]_^#([[^[!!%]$!(</span></span><br><span class="line"><span class="string">[&amp;(_@!*^&#123;&amp;&#123;+(_%&#123;!$%#[&amp;&#125;&amp;@&amp;)&#125;[^)&#123;^&#125;!$)&#123;&#123;%$&amp;)_@))+(%#@+&#123;(^+)&#125;%$_&#123;*@&#123;#]@([!)@&amp;+*!%&#123;</span></span><br><span class="line"><span class="string">^&#125;%&#123;+&amp;#]^&#123;[%%]+((*@+@&#123;+#_((&#123;&#123;$[[@#%!+&#123;+]%^@+#^][&#125;#+$*&amp;@+@&amp;]$%^&#125;*@_)&#125;&#125;*[]+&#125;_*@*@)</span></span><br><span class="line"><span class="string">[$!&amp;_[^@)&#123;[_&#123;#&#123;%&#123;#$+!&#125;&#123;#!@&amp;&amp;#(_#@&amp;&#125;(!@+#*#@%[@%%[%[$&amp;@!]@_]!&#123;@#))@]]&amp;]&#123;$&#125;&#125;%$[&#125;*]</span></span><br><span class="line"><span class="string">)^(^(&amp;&#125;[$#&#125;^$_@@&#123;&amp;^&#125;&#125;[%[*&#123;)$![&amp;*&amp;$![#)*@_$]^$)%&amp;&amp;!_%%][+$()#_&amp;)_^+(%+)_&amp;^]!+*)&#123;#</span></span><br><span class="line"><span class="string">)_]!_&amp;&#123;[^_&#125;+@%#&#125;#[*%]%+!!(()!*_(^&#123;#^!*&#125;#^&#125;$_^&#125;$&#125;_&#125;&#123;_#^@&#125;@%!_&#123;^[!]&amp;%_](&#125;]$#()#&#123;&#125;#</span></span><br><span class="line"><span class="string">)*+*&#125;*&#123;&amp;$+&#125;[&#123;$&#123;[#_#&#123;&#125;_!@&#125;&amp;)_@[!)_))&#125;))#($[_&#125;^^$&#123;)@^(&amp;[_+!_^[(&amp;#&#125;@_&#125;&#123;]%#%)[]&#125;]*&#123;)</span></span><br><span class="line"><span class="string">&amp;@!]&#125;]%_&#123;+)!@%]#$_*#&#123;]+!%!&#125;[^&#123;[)#[@(+!*&amp;_&#123;*]]&amp;]$[*&amp;%^&#123;^!$!@*)*(_!+[&#123;*^]@&#125;+#($$&amp;)</span></span><br><span class="line"><span class="string">!$(^)]!#*[@][^]@&#125;(&amp;*&#123;&#125;())@&#123;%^#))*+_+#_&#125;)(^($$%&#123;&#123;![^+@!+&amp;&#125;_((*#[*++&#125;*^^[*@&amp;!&#123;+%+]</span></span><br><span class="line"><span class="string">_&amp;%&#125;*++_(*![%^&#123;$_!!&amp;_$&#125;&#123;+%&#123;!!&#125;+!@&amp;+&#125;(&#125;&#125;[&#125;])&#123;!&#123;&#123;&amp;_]_]&amp;)%!!*^#__(^%([#%+&amp;&#123;&#123;)*&#125;&amp;&#125;$(</span></span><br><span class="line"><span class="string">#^!^#@&#123;%$&#123;^*$^(^&#123;(&#125;#)%!&amp;#&#125;)(&#125;#&#125;_(&amp;#%^$&#123;#&#125;#]&#123;*@^!+&#125;!$$$&#123;&amp;#&#123;&#123;[[*^]]%^+#[+%$@]@#]&#125;&amp;</span></span><br><span class="line"><span class="string">)%&amp;)&#125;[^+^&amp;@$^)]&amp;[$*&#123;^%^@**]^*!^!&amp;_#%@+(@][)([&amp;^(@@^@&amp;!&amp;#&amp;_&#125;&amp;[^!^@]**&#123;__&#125;_!+&#125;%!_^</span></span><br><span class="line"><span class="string">_^])^@^&#125;&amp;(&amp;#&#125;)[(@&amp;*&#125;_&#123;&#123;$[&amp;^][+*&amp;&#123;!+#%@#_]$[&#123;$@+[&#123;[@&#125;]&#125;&#123;*(+$#^[%[@&amp;&#125;]^^)_(]&#123;@&#123;##[</span></span><br><span class="line"><span class="string">[_&amp;!$]_$%$*]#!^&#125;(%!*+_^&#125;&amp;@++_!%$(!!_#]&#123;&#123;$()))&amp;*+&#125;#[@@!_%%%*!_+)(@*@%)_&#123;^!%![#_+!</span></span><br><span class="line"><span class="string">&#123;_*)!(@[%@&#123;*&#123;)]$*_&amp;%*$+!%$&amp;&amp;!(%&#125;^]^!)*@+@!)&#123;_(&amp;#%[_)_]*[$++&amp;!&#125;@])#%)&#125;@)!+!%]@*+#</span></span><br><span class="line"><span class="string">+%&amp;*])!&#123;()@&#125;*$$+)&#123;_)%@[%[*+$]#$&#125;[#&#123;#$)]&#123;*!&#125;!&amp;##_^+&amp;]])%!^((+&#125;](*!&amp;&amp;&amp;!^^&amp;!!)^!)[#</span></span><br><span class="line"><span class="string">+($&#123;^&amp;^%+&#125;@!#[#%_&amp;](&#123;$&amp;)##^%+#@*]&#123;_%#^&#123;%_%+&#125;@@]+%&#125;@&#125;]_)*^@*&#125;+#*##+]+^))*#^^&#125;&amp;]&amp;[</span></span><br><span class="line"><span class="string">$[&#125;%@&#123;)&amp;#_&#125;#$&amp;[&amp;(]&#125;)&amp;__!_@&amp;]$]&amp;(_&#123;&#125;^&amp;_*$!@)[+%)+#()(+$_$!)*+((_)*@##&#123;+#++&#125;[^@&#123;@+</span></span><br><span class="line"><span class="string">_(&#125;+&#125;%[@&amp;&#123;%((*&#123;&#123;]+^&#125;*]@%&#125;@)%#![&amp;)])^&#125;]^&amp;[@]!#(&amp;&#125;^!][&#123;&#125;$)]!)^^&amp;^_&amp;^[#)+[%#@+&#125;@+!+</span></span><br><span class="line"><span class="string">&amp;$%)$&amp;&#123;]@%)%%))+%*&#123;^#[@$+&#125;(%@[&#125;)#$*@&#125;+(&#125;[&amp;_%^&amp;$&amp;&#125;&#125;]%(&#123;^@*$&amp;^@&#123;]&#125;!@(&#125;)!)[!&#125;@!_+&amp;^</span></span><br><span class="line"><span class="string">&amp;&#125;_&amp;%+!#(%#&#123;[#&amp;[![%&amp;)$#+@[!)_!@_&#125;&#125;)!#^((^#!+[&#125;+&amp;)(%!!&amp;#[_]##!+%][]]+[_@_(&#125;_^!&amp;@&#123;</span></span><br><span class="line"><span class="string">+$^_]$()$(&#123;])##+(+%)+[%&amp;+[_&#123;%[##(#(!&amp;_$*@#+&#123;#&#125;*&amp;!&amp;&#123;(^#))$^%%@$&#123;&#125;!&#123;@%^^((#&amp;)$!%!&#123;</span></span><br><span class="line"><span class="string">^_^_&amp;!%&#125;#()@+(^%%)_]@%^[]%%!*)&#125;!&#125;&#125;]!#&#123;$^+*&amp;[!@@)!&amp;$^]&#123;+((*]]_*_#&#123;(*!#)$#$&amp;+^)#_$</span></span><br><span class="line"><span class="string">+!*+#_)!(&amp;%[+&#125;(+(_*&amp;$]$%+&amp;&amp;[])!#*!&#123;(&#125;_[&#123;_%]^(%[)*+(#(^+%__&#123;[@+)@]#%(($^+@@+%(_)&#125;</span></span><br><span class="line"><span class="string">]+!%*_!++[[+]]@+]@&#125;$)$^)_#^@&#125;%&#125;#+[+%^*!!&#123;+$&#123;$]*$!#@](@@$*#*^+@&#123;^_+%#!^()*&amp;(&#125;+$_&#125;</span></span><br><span class="line"><span class="string">&#123;&amp;&amp;&amp;&#123;]%$^_%_!+#%@$%_&#125;#&#123;_*!%@+^+&#123;%&amp;&amp;![*%(]#]$![)#)***$&#123;*)#!()+&#123;&#125;+*($($*)%*)%([(!^</span></span><br><span class="line"><span class="string">&#123;[#)*^&amp;(_^^$]&#123;][%))[+!^[&amp;[%@[*!]%_+@@&#125;$^$^&#125;**%%_&amp;__&#123;&amp;&amp;)_]+^(@%)+!&#125;!]]^%&#125;!++(&amp;)(@</span></span><br><span class="line"><span class="string">]@&#123;^^^]$]%&#125;%_%($*&amp;^*(%#&amp;#)&amp;*&amp;[$@&amp;+_&#125;_!+!&#123;^])_!&#125;&#125;*![!(&#123;&amp;$)%(%^(&#125;)&#125;)[@&amp;]*(&#125;]@$@&#123;[*</span></span><br><span class="line"><span class="string">))$&amp;%(#&amp;_^@(&amp;$]&amp;@*%]+_&#123;@^)+(&#123;&amp;&amp;&#125;[*%&#125;[&#123;#$$&#123;@*&#125;@]*!(]&amp;)+&amp;!!^&#125;+*%[])[)_!&#123;$+^&amp;#%+@(_</span></span><br><span class="line"><span class="string">#$]+#&#123;#!$+%(*)#]&#125;[%]**&#123;![(&#125;++$!#)&amp;&#125;%#(*@)$]+!@++*&amp;_]&#125;!![#&#125;&amp;[[)@%(&amp;&#123;_[^&#123;&#123;[&#125;$[&#125;^&#123;*</span></span><br><span class="line"><span class="string">[##_]]!&#125;(&#125;^^@!(*#&amp;[%!!]_^(@^((_#%$+@&#123;^$%&#123;)#]&#123;^&amp;&amp;!@#]_!&#125;&#123;#*!!&#123;]@&#123;)(@&amp;^*^]!&amp;^@](+#</span></span><br><span class="line"><span class="string">_^!_^*]@_%$(]^$!&#125;&#123;*]&amp;!+*+#!+(+^[%&#125;*(&#125;](%%&#123;]##)_&#125;*(]++]#*&#125;]$^%(&#123;*&#123;$+&amp;@@#^!()&amp;)%_&#123;</span></span><br><span class="line"><span class="string">[*!(($$)^%+_]]&#123;^&#123;%&#123;&amp;^!*&#125;[&#123;]+]%(*^]&#123;@)[#&#123;_@_&amp;^%%+$&#123;&#125;&#123;]&#123;%*_%#$)_*]#$_@$%#^&#123;%*%)@%]</span></span><br><span class="line"><span class="string">^&#123;]()$%^_($]&#123;^*]+!*!_])!_)%&#125;&#123;%^&amp;]$)^[)^@^#_&#123;![!&amp;&amp;&#125;&#123;[_]((&#123;&amp;%@%$+(#]*]&#123;@$]&#123;+()&#123;)!*</span></span><br><span class="line"><span class="string">%&#123;)[[^(!]*$$#^(&#123;)[)%[&amp;!![__@&#125;(*)&#123;]%)]@#*%&#125;_^&#125;#_$(&amp;*^+%%+^&#125;!#]*[!&#125;!&amp;@#&#123;+$&#125;*#@#*((</span></span><br><span class="line"><span class="string">&#125;@+%]_@+!!_!%@_&#125;_&#123;[$*_(&#125;%)#&#123;&#125;]_^!+#*@])+$+**[]#^_&#125;&#123;+&#125;*&amp;&#123;)#%&#123;!_$$**&#125;&amp;(@]_+)[#&#125;&#125;]^</span></span><br><span class="line"><span class="string">%^[[&#123;%@)%%+$&#125;((*(_^_$&#123;*[$&amp;+&#125;@%&amp;^$%&amp;[+!@#]*%+$_@*!&#125;#)#*((*&amp;[$!+_]%[^$[]+$[(&#123;$&#125;&#125;!$</span></span><br><span class="line"><span class="string">[^&amp;^([!*])_@+@%!^!%&#125;[(!#***)&amp;)@&#123;&#123;@]_#^_+&#123;*)^^_+&amp;#@&#123;]&#123;@#&amp;]@+*$$_#&#123;!^#&amp;&amp;^&#123;]*#)__]+</span></span><br><span class="line"><span class="string">&amp;)&amp;)*]##)%#&amp;)&#123;%!+*[$&#125;&#123;#]]$_(@(%])$^](*%#])[*(&#123;!^&#123;&amp;&#123;%__!(%[*__)+#*_(*]_[%&#123;(!_&#125;^*&#123;</span></span><br><span class="line"><span class="string">$[%$&#125;&#123;^@_+*(]##&amp;(+&#123;(&#125;[!_[&#125;&#125;$%[&#123;$&amp;[@!!@[%&#123;[]&amp;%[&amp;&#125;^^!]&#123;]#@$)%(@)+_)&#125;&#123;_](&amp;[(^[&#123;$+%%</span></span><br><span class="line"><span class="string">*!&#125;&#125;(&#125;*&amp;[!)*!&amp;!%&#125;&#125;*&#125;]%]&#123;^@&#123;**@[@&#123;]*&#123;#@&#125;+([@&#125;&#125;[[&amp;_%*)_)&#123;&amp;[)(]]^&#125;^@#]%#_!(^_[$$+!!</span></span><br><span class="line"><span class="string">#&amp;&amp;+&#123;#+!^+++*!![^]@)#][&amp;(_&#125;$&amp;_(!_[$&amp;%&#123;%@]%]&#125;&amp;$#&#123;!^@%&#125;%&#123;$$^]_!((**!&#123;%)*&amp;^]&#125;#)%%$]</span></span><br><span class="line"><span class="string">&#123;$^^&#123;#[!+*]&#123;&#125;(&amp;&#123;&#123;&#123;&#123;&#125;(]#[#_+@[#+[&#125;@)@#_!&#123;_[&amp;&amp;*)@#[*@@[$(*)@^[[]^%][&amp;@@_$+_%&amp;_*@&amp;!</span></span><br><span class="line"><span class="string">@*&#123;*&amp;_&amp;(&#123;&#123;[@&#123;]*&amp;![]*_&#125;&amp;#!+@#+&amp;&amp;_(+#*[+&#123;^%@_+*+&#125;&#125;^@*(]#&#123;*$++)_@@]%_&#125;!$%+]+$&amp;^!$@$</span></span><br><span class="line"><span class="string">[&#125;^_#[(&#123;^+_%&#123;*@&#125;@_[]&#123;+][_*!#&#123;])_^_@$(@%!@!(]%)))&#123;%](#]]#&#125;@&amp;&#125;+%[@&amp;[[)%#%&#123;&#123;+@[(^@+</span></span><br><span class="line"><span class="string">&#123;)&#125;&#123;%(&amp;+]^&#125;^+!$!^*_*+^@*&#125;+]#&#125;_#^(%#$](&#123;+&#123;#(+@$][%$#(_[$@]@+@[@]@%]@&#125;[[@(*^@($#_(</span></span><br><span class="line"><span class="string">*)[&amp;_&#123;&#123;(!*+%(_&amp;*&#125;@#[%[()@&#125;]&#125;[#&amp;&#123;)*&#125;&amp;(&#125;]&amp;&#123;%][_%$@&amp;_%*)&amp;_^]&#123;##]$&#123;_(*%*&#123;!_+)^]][_&amp;+</span></span><br><span class="line"><span class="string">]&#123;_&#123;()%(_&amp;@&#125;@&#125;[%+#^@&#125;#**!&#125;+$@]@+*($*&#125;#_&#123;)!+])#$[@%]&amp;])*%___!*$&#123;++&amp;%^$^#@&amp;_&#123;)#[$+</span></span><br><span class="line"><span class="string">$+]@#@_^^_#@&#125;!)$_#$*&amp;&#123;+^&#123;+@*&#123;#!#$!%*^!&#125;[[&#123;]+&#123;[@(%_&amp;&#125;^$%^()[&amp;#%@_+&#123;(*[$#!&#125;[+_&#123;*%(</span></span><br><span class="line"><span class="string">_+&amp;&#125;__!_#^&amp;(%!&amp;^%)(@)^!^)$([_[_&#123;_$!)&#123;*[!*&amp;#+((%(@#)!%!_[!#[_]%[#]&#125;&#125;%[$)+#@%%*[%+</span></span><br><span class="line"><span class="string">^!*[([#&amp;$&#123;&#125;^%@&#123;[&amp;!!$&#125;!&amp;#![_&amp;[^&amp;_&#123;@#))+&amp;%$!!&#123;([@[&#125;*(&#123;$]&amp;&#125;&#125;@&amp;**[++!_*^^[&#123;^(!*^^%][</span></span><br><span class="line"><span class="string">_[^])_&#123;&#125;!*^^]@@%*(@_])[&amp;&amp;$[&#125;%@$$##]&amp;#)+!#_%@&#125;#(%&amp;++&amp;)&#123;#!+!&amp;]!&#123;&amp;$&amp;&#125;)[]&#125;$*(&amp;&amp;)@#[$</span></span><br><span class="line"><span class="string">%^^(&#125;^#&amp;@!_#*%)^&#125;&#123;&amp;&amp;*]+(^&#123;(&#123;+$^]()@[)&amp;&amp;[&amp;[##[][%]*&amp;!_&#125;&amp;[&#125;&#123;&#123;[$@&#125;+!&#123;[$[^++&#125;]&#125;[#[^#</span></span><br><span class="line"><span class="string">^!%!+&#125;(^*^%#@&#125;&#123;@_[#^@)(+)#%^)+@!&#123;&#125;_&#125;&#123;(!$[[+_[%@&#125;!)&#123;&#123;]]$]!^[@)(&#125;&amp;#([((%$#&amp;%*]#!&amp;^</span></span><br><span class="line"><span class="string">!%$+&#125;+&amp;[[&#123;[![!&#123;(_@_(^^#]+!&amp;%([_[*&#125;^&#125;&#125;%!^&amp;^&amp;#)&amp;#[)*@$+$%(@+*][&#125;&#125;(#@%!++^_!*[+#%&amp;_</span></span><br><span class="line"><span class="string">(@@)]#)#&#123;&#125;@&amp;#&#123;&#123;&amp;@_^&amp;$+$@**&#123;(][&amp;]#&#123;@+&#123;#*$_)#_!&amp;&#123;#]%#(%!*()+)%#&amp;&#123;!+*^[[[&#123;*))$!*__&#125;</span></span><br><span class="line"><span class="string">)[%%]&amp;_[&#123;]&#123;^[#)*)+#*&#125;&#125;(($)*(*&#123;$&#123;&#125;&#123;&#125;#[&amp;&#125;[![%!]%&#125;^&#123;&amp;&#125;&amp;$[(%&#125;^*_[)]+&#123;!&amp;+)[@*&amp;&amp;&#123;@&amp;%#[</span></span><br><span class="line"><span class="string">!*___^_&amp;]]#&amp;[](*+&#125;(^]%+^^)*&#125;]&#123;$!(&#123;%+_*]#&amp;&#123;+&amp;)]&amp;&#125;&#125;]&#125;^+[)#_&amp;_+&amp;!&amp;&#123;[&#123;_)]%&#123;+&amp;&#123;*&#125;*%[+</span></span><br><span class="line"><span class="string">]#%&#123;_[)&#123;!)&#125;_#]&#125;!#%&#123;#][_+]&#125;^$&#125;))#&#123;@&#123;+#(!_]$[!!&amp;&#123;&#123;&amp;+&#125;!!)@)&amp;)&#125;]^^@^((]&amp;^!+!]$&#125;$&#123;#$*</span></span><br><span class="line"><span class="string">&#125;]*_&amp;%_]&#123;^(_&amp;$@&amp;_(&#123;#!(_]@#%+&#123;##_+*+^]!#]_]#](]$&#123;]][_]]%_&#123;$*&#125;[&amp;^&#123;!_)##%%)+)*&amp;*__!</span></span><br><span class="line"><span class="string">&#125;&amp;*_*]&amp;*#(]]@[%&#123;%]#&#123;]+_(&#125;^(&#125;*!#&amp;]^[!*]&amp;^$+!_^_++%+##(*@+(^#&#125;#&amp;*[&#123;*])#)]$*%*+](+[</span></span><br><span class="line"><span class="string">[&#123;+&amp;$&#123;&#125;%!)&#123;!_%&amp;&amp;]*!!(&#123;$#)&amp;&#125;+[)(!&#125;@&amp;!^][)[#)&#125;@_$*)^%$&#123;]][^]$!_$$#*&amp;&amp;#!&#123;!!*+_##^#!</span></span><br><span class="line"><span class="string">[#&amp;##(&#125;+[@!&#123;_+&#125;%]&amp;$((@$*(#&#123;]@&amp;(]&amp;^)%#^^^[)()+*^&#123;]%#%][[*&#123;%@_))&#125;@])%#*!)#_(&#125;(&amp;&amp;&#125;$</span></span><br><span class="line"><span class="string">_&amp;&amp;@%)%#(^&#125;&amp;]_(_%@]&#125;^$]_#@^]+&#123;^#^*&amp;&amp;@!^$]$*#&#125;$(!])#)_@]@[@^+&#125;#&amp;_*#^(_%$&#123;%(&#125;]+&amp;&#125;!</span></span><br><span class="line"><span class="string">&#123;&amp;_&#125;&#125;&#123;*)&#123;)_*^_[!)$]^%%]&amp;]_*]&amp;*_@&#125;]_&#123;+@!!$@(]$))!+#)*!](@[@*&amp;!+%&#125;@$+@*@_(_!)_[]&#125;!</span></span><br><span class="line"><span class="string">)[^!^^^!$^$^_*#&#125;#&amp;&#123;&#123;&#125;*&#125;&#125;[$#!$#(&amp;_(_&#125;^+]@#&#123;]&#125;_^]^&#125;&#123;&amp;_[)[&amp;_##_#*$[_]&amp;&#125;$_&amp;]()+&amp;$_&#123;]</span></span><br><span class="line"><span class="string">+$_&#123;#_]%&#125;[+)$++$&#125;[(*!+[$]*&#125;!$$&#123;@#@&#123;^&#123;&#123;#&#125;[!%!#$&amp;^^[+[+^(%&#125;(^]#+!)(@&#123;$&amp;&#125;#&#123;*)#$(&amp;&#123;$</span></span><br><span class="line"><span class="string">($^*%*#+$%&#123;*&amp;]@(*_+&amp;&#123;*_]&#125;%(!&#123;)*([+()(@[&#125;&amp;!+&#123;$!+%&#123;^&#123;&#123;&#125;]!(]&#125;!)**__*]$^()@$&amp;*+&#125;)_!+</span></span><br><span class="line"><span class="string">%@_)%@([#&#123;@$(&#123;[^*($&#123;(&#125;#*@[))+[^!([#]&#123;$*^[)_^&#125;*&#123;$#&amp;$$%+!%&#125;($$!&#123;+[$&#125;&amp;#^$&amp;!^@^@&#123;!**</span></span><br><span class="line"><span class="string">&amp;*&#125;]@#)#&amp;*&amp;%&amp;&#123;#^(((&#123;%&#125;$*^*!__*$_!%^&#123;_!^$*]#*_&#123;!(*)&#123;$&#125;^$&#123;%@$$$_&#125;%!)*(^&#125;+)@&#125;$)&amp;+(_</span></span><br><span class="line"><span class="string">#([]_)&amp;_*^_^*($$+&amp;[$!&#125;&amp;[[@&#123;])[%*_$+%])[(!+)#@(()!+^&#123;)&#125;)%@&amp;&amp;^@]&#125;#^@]$]+)])&amp;^_]_]#</span></span><br><span class="line"><span class="string">$&amp;_*))[*[&#123;%_##^#(*[$$&amp;!$^#^*++$**&#125;)&#123;[*+%))!!+%(#&#125;@)[$$$&amp;$+&#123;+%&amp;+&amp;[&#123;]^&#123;!_)%(*)&#125;#[(</span></span><br><span class="line"><span class="string">$@[_)([@&#125;_%&amp;%)@&#123;*)]^%*^!!!%]&#123;&#125;!([#!^^[+!^$+&#125;^&amp;&#123;&#125;*(+]&#123;![!)$$&amp;&#123;!&#123;&#123;[^#$)&#123;+)(&amp;^&#123;)_&#123;!</span></span><br><span class="line"><span class="string">&#123;&#123;!%&#125;&amp;&amp;%#&#125;!]!_&amp;%@@_])((&#125;&#125;(@^]*+&#125;)&#125;&#123;*&#123;@[$[&amp;%(]%!_[(&#125;%+)((*(&#125;]&amp;#*_$[^#[![_)%_+((@&#125;</span></span><br><span class="line"><span class="string">!&amp;(_&amp;^+[(!#+&#123;@#[[%[_)_*]%+)!@[(%#&amp;^+&#123;#$)$]]![(@+@(]*%#&#123;@#$&amp;#&amp;*&amp;!#_)*[@*+++&#123;+&#125;@](</span></span><br><span class="line"><span class="string">#]#()_)#^&#125;&amp;%#(^$&amp;(&#125;^#]!$]^+*$*]*%])&amp;@&#125;$!&#123;^_&amp;+$]&amp;&#123;&#125;&#123;*^$_(]]%##%)!#^(@&amp;)](](]&#125;]_@#</span></span><br><span class="line"><span class="string">%+]^+%&amp;%([^)!#_+^]%++#+!(&#123;*)^@#)(_&amp;^$*(_$](@[&#123;@_++_%@_#][(&amp;$&amp;#&#125;%@##&#125;*!_[[+@@!&amp;&#125;*</span></span><br><span class="line"><span class="string">$@^*)(*^!$%$[)&#125;$&#123;))&amp;^*+&amp;_#*[&#123;))(*_##&amp;*_$+^&amp;^!#![@@$[@#!&amp;&amp;)_+#%)&amp;@(!!^$$!^!(_&#123;%!(</span></span><br><span class="line"><span class="string">&#123;^$[[#[@@(]&#125;&#123;!+)[($%(&#123;@#%[&#125;&#125;+#^]#&#123;%#^#*]#&#123;)&amp;__&amp;@%+)@@&#125;_!*_#&amp;]&#123;])&amp;_#))&#123;%!&amp;]%##++[</span></span><br><span class="line"><span class="string">(&#123;+&#123;_#[&#125;&#125;#%!&amp;&amp;*#&#123;[##][]*@_&amp;#*+!)]__#^+_!^*_&#125;#+&#125;&#125;((!+]]++]%_]*)&#123;]%_&#125;]]&amp;%&#123;_%]^)!&#125;)</span></span><br><span class="line"><span class="string">[@*!*!@_[]__&#123;**[&#125;*&#123;&#123;+]@&amp;[@*!&amp;]^_&#123;[($]&#125;^[&#125;%!!(@+[]$)#!&#125;$&#123;*#&amp;&#125;&#125;#*^%&amp;!&#123;*#$&#125;)&#123;+!&#123;!@#</span></span><br><span class="line"><span class="string">]*$]@(*$&#125;[!@&#123;($*&amp;+[_[_*+*@@%_]*$[*%#&#123;%![]!_@&#125;!_&#123;#)]!*@+[*%&amp;[&#123;^_]!%#+!&#125;]%*#%[@&#123;&#125;$</span></span><br><span class="line"><span class="string">^[[&#125;)(&amp;&amp;_%#[&#125;+%]&#123;&#123;*%](*^[%])(_$]+[[&amp;^$+&#123;&amp;]*$&#125;]%$#(_$!&amp;##&#125;$%&amp;@[[&#123;)@#&amp;+&amp;(&amp;@!+)@@+[</span></span><br><span class="line"><span class="string">@&#125;$][([]*]&amp;&amp;%__*&#123;*++!($#@$*+]^&amp;!%)!)*@]$#]*@#*!^%+#(!^#&#123;&#123;#*(][)([&amp;!@!*%^*(#&#123;&amp;&#123;&#123;[</span></span><br><span class="line"><span class="string">&#123;&#125;*_#+*%(&#125;*(%$^^&amp;$[_)[*)%)_(^&amp;&amp;!&amp;&amp;%$(([**+)_)$[!]%&#123;$[(&#123;[$$!&#125;_(]^_%&#123;^[%$*@^_!!&amp;))</span></span><br><span class="line"><span class="string">]_(_#!&#125;]&amp;&amp;&#123;]&#123;*]]%&#123;@&#123;+$&amp;!@&amp;!_&#123;!&amp;!#]_(!%@[&#123;)(&amp;&amp;[#)#$#&#123;[!^&#123;_*]%[^+%&#123;^*+#[!%*#[(@^#(</span></span><br><span class="line"><span class="string">#&#123;*#&amp;+_&#123;]@^#[[^_!+*&#125;]!^$#$#)#[$!&#125;)%&#125;#^#%%%@_+$((]^*#^&amp;^)[]$[]!&#123;^$%&amp;*%&amp;!^^!(+$#$&amp;</span></span><br><span class="line"><span class="string">$(+(&#123;[(&#123;@&amp;&#123;^)+@]]$_(%_&amp;^%_&amp;%!^(]_!&#123;*@*+[#&#125;&#125;[&#125;&#123;@&amp;&amp;#(&#125;@#^[^&#123;(@_&#125;)_*!+&#123;*]_(&amp;+]#)*[@</span></span><br><span class="line"><span class="string">&#123;![%[*$[$(](([#*#_$_*#$)&#123;$@)&amp;&amp;&#123;&amp;%%*@&amp;_++)$[_&#125;^&amp;@$%@_[^]_&#125;^&amp;#^]#&amp;^[%#*[!&#125;!&amp;&#125;@##!@</span></span><br><span class="line"><span class="string">[@+[_#[(&#123;*%)&amp;&#123;*^%]+[_+%(&amp;[(%!@&amp;$_*&#125;_+^)+(&#125;))+%]))[#($^!]+^$%&#125;([&#125;!%#%&amp;!&amp;&#125;^)@(_&#123;[@</span></span><br><span class="line"><span class="string">+@)^#)]$#&amp;!+_]_@]$&#123;^^)[+$[[)*%&#123;!(&#123;&amp;#@+@!*!&amp;*&amp;_&amp;!*!*@&#125;#&amp;%]%!]&amp;%^@&amp;#_$%&#125;++[%(*$&amp;%(</span></span><br><span class="line"><span class="string">$(()%&#125;]#!])+#[](&#123;&#123;*!$&amp;(@&amp;#&#125;[&#125;#[]#[(![#&#123;*&#125;)@^]*!&#125;)#*+&#125;@&#125;^&#125;^%]^!&#125;&#125;#(&#123;[&amp;!^(%&#125;]&#125;&#123;$*&#125;</span></span><br><span class="line"><span class="string">*@^&#123;*@^[&amp;&#125;])(!%&amp;(_%*&amp;&#125;&#123;*$&#125;^@#]*^%&amp;^$__$)(![@$)@]+*!+__&#123;#*_^&#125;%@)_$]]#@&#123;$__%*#!_*+</span></span><br><span class="line"><span class="string">])[%][!](&#123;#+&amp;@&#123;&#125;&#125;&#123;)()[#&#123;_&#123;_%_+&amp;^&#123;[!#$$]&amp;_(]+@&#123;)#&amp;^+$&#123;]!@&amp;][&#125;%(]&amp;!*(*@!)@]__![*+#</span></span><br><span class="line"><span class="string">&#125;+%&amp;((]+&amp;#^!$+__@*+(&amp;#])!^!%]$^#_)[+]+*&amp;@+@&#123;%&#123;[&#123;_@]([!_@_&amp;&#123;&#123;$[*%]&#125;#[!&amp;@%&#125;(%#&#123;_&#125;&amp;</span></span><br><span class="line"><span class="string">*&#125;&amp;&#123;)_[*[_*%[$_(@]!@#&#125;$&#123;^#+)^$]@^&#123;#]^_%&amp;@%(&#125;)@!&#123;&#123;!_%@#(@(_@&#123;^#[!^**)!*&amp;](![[![&amp;_</span></span><br><span class="line"><span class="string">&#123;#%!#$&#125;#*!$+&amp;)&#125;$%*_&amp;&amp;#&#125;+]&#123;__@!!^%@[+]%[#!*!]@&#123;_%+#&#123;))&amp;#@+&#125;&#125;[%&amp;(@@(]((*@@!&#125;]&#125;&#123;#!^</span></span><br><span class="line"><span class="string">+_&#125;][^[^#&#125;]+][+%]$__*&amp;&amp;+]!+$[+(@$__&amp;#+)&#125;@[*&#123;+(%*)&amp;@#)+*+!&#125;&amp;&amp;_$+[#$[*_#%@&#123;((&amp;[$%$</span></span><br><span class="line"><span class="string">&#125;+$#&amp;+&#125;!^([^!](!%&amp;)#!_^!#$*)[[&#123;&#125;#[_(@@^#+$)(&#125;_$]^&amp;[+#+&#125;)[#]%)(&#125;!&#125;+!&#125;##_$$&amp;#@^*]]</span></span><br><span class="line"><span class="string">$%^))&#125;#($]$_*%%+*$&#123;!_()&#123;@_^(*[_^&#123;]&#123;()])&#123;^&amp;#@_&amp;@&#123;!)!&amp;)&#125;]%&#123;$*^(&amp;#]&#125;*])&amp;&#123;&amp;[+[^_*+@[</span></span><br><span class="line"><span class="string">]%^[^_%%&#123;]!!$([^!*##^)^%%&amp;@[&#123;#+%)[)!#&amp;[]@[&#123;]+!##@_)%&amp;[#@(+)#&amp;&amp;)_[%[#[*(&#125;&amp;#_@[[$)</span></span><br><span class="line"><span class="string">%^%&#123;[&#123;&#123;&#125;+&amp;&#123;*]*_[*$[%[)_&#123;!*&amp;*+@)_@@_!+*(#!&#125;_[(!]@@*&#123;#&amp;#(_&#123;]@&amp;$[[&amp;&amp;(#^&#123;)++&#125;#(#&amp;&#123;+(</span></span><br><span class="line"><span class="string">()#](()]]_&amp;)!&#125;(][@_%&#123;)*+^$[(()&#123;(#)(_#%+%!%&#125;))&#125;%@)#*&#125;_)#$&amp;&#125;(*@][@&#125;+##%+&#125;&#125;_[[%(!&amp;@</span></span><br><span class="line"><span class="string">&amp;)&amp;@#[$^*^^#*&amp;)#!#&#123;_][@#*^&#125;$&amp;!#!][$+@&#123;)&#125;^^^(*^&#125;$%[&amp;(@^#$*!&#125;*$&amp;^)!_[]]&#125;@[+#)**@&amp;]</span></span><br><span class="line"><span class="string">@[&#125;&#123;_[@$&#125;**_%+]$&#123;[&amp;*#[^!#]*[(*$)@]*[*&#125;*&amp;_&#123;%(@)]%%$](&#123;]@&amp;%]&amp;_)%_#%)#**&#123;&amp;*(%&amp;!*+_&#125;</span></span><br><span class="line"><span class="string">[^]^_*#[!^+#$!_&#123;[&#125;&amp;&amp;])#$_@!#]&amp;_&#123;&#123;[[+*()#&#123;*&#125;&amp;#(+&#125;&#125;_@@(@&amp;^+$@&amp;&#125;*!^!_*[%](%[$)_[]&amp;_</span></span><br><span class="line"><span class="string">+(&amp;$@&#125;)+&#123;&#123;_&#125;[&amp;*_!*^^!!+!&#123;(((&#123;[[$^^%!_&amp;[][!%]&#125;^&amp;&#123;&amp;&amp;]_&#125;$@$&#125;[(_&#123;_&amp;&#123;#$@$@!#[)&#125;_&#123;($&#125;&amp;</span></span><br><span class="line"><span class="string">&amp;@#+(((&amp;%+$&amp;$!!*^&#125;&#123;+&#125;%&amp;^&#123;&amp;&amp;!_]+&#125;&#125;][!%[$)&#123;)_[+(&amp;+&#123;)$(+(+*#%&#123;%&amp;+(+&#125;+*%%&#125;_]&amp;+&amp;[^_[#</span></span><br><span class="line"><span class="string">)_+#&#125;!#@$)&#123;+&#125;##+&#125;+*%&#125;@&#125;[#!!@_)@&amp;%*&#123;_!&#123;&#123;#!!##]&#123;&#125;&#123;#+_&#125;]+(&#123;]^&#125;@&#123;]$_@*^+&#123;_&#123;^]@**+)[^</span></span><br><span class="line"><span class="string">[%&amp;[[&amp;+&#123;&#125;%@&#125;&#125;*]##]&#125;%#[_+&#123;)!*_)[[^#!(+$+(_!&#125;)]()#)&#125;*!)_&#123;^#[@!#]]^()_@]^]$@!+_$!(^</span></span><br><span class="line"><span class="string">&amp;&#123;[([&#125;&amp;!]&#123;_%%$+&#125;+!%!(&#123;_]&amp;+@]@[@^*)_+_(%#&#125;*#_#%[#*+(!)&#125;]^$)%**&#125;]@&amp;]%++#&#125;)[_((@[&#125;(</span></span><br><span class="line"><span class="string">$(]!]$@&amp;!+]&#123;#]*_&#123;)(@(^]*[+[]@*#&#123;&amp;#+%%&amp;(@!@&#123;)(#[]]%[!+(&amp;!&amp;@)&amp;&#123;^++&amp;&#125;*_*_#&#123;(_&amp;[(&#125;&#123;!</span></span><br><span class="line"><span class="string">&#125;&amp;#((&#123;#%$^(()^&#125;^^&#123;$][)+![&#125;%&#125;[!()@%_^][)@+]+@!!%+^#@++$%(@*$]^*&#123;]!+###)^#&amp;@[^[(#&#125;</span></span><br><span class="line"><span class="string">)+&#123;!&#125;(_@#@)([$^&#123;$@*$)^&#123;#!]_)_&amp;]&#123;&#125;+(^]&#125;*[(**]))@)$+]*+[_]@&amp;&amp;(&#123;#(&#125;[_*+%)&#123;$&amp;^&#125;&#125;(*[_</span></span><br><span class="line"><span class="string">*^!_+^_#(_*&#125;))#&#123;#$)[^$*(_+&#125;[#+_@^#&#123;+)&#123;$&#123;]*)[]]&#125;((_*%_^+&amp;(&amp;]&#125;!!!)@(++&#123;)%&amp;#&#125;*[^+$^</span></span><br><span class="line"><span class="string">]^&amp;]&#125;&amp;&amp;@&#125;#*#@%**[]$&#123;%!&#125;*](([![@^&#125;^![^+@%[^$*&amp;#)&#125;*&#125;^_%_]%&#123;[_*_#&#125;!_!$(&#123;^&amp;[(@#)$$$@</span></span><br><span class="line"><span class="string">$@_$*@_&#123;(_&#123;$$$%_%&#125;(&#125;]+(&#125;)&#123;&#125;]]&amp;$+*][)%]^@&amp;#]]&amp;&#125;+%&#125;**!+%*$&#123;^)^&#123;%)&amp;%%&amp;#]&#125;&amp;%+^_@_^#]</span></span><br><span class="line"><span class="string">&#123;@*&amp;!$&amp;]%&#123;[_(^$&#125;((&#123;]^!#[)@@[[&#123;*]&#123;)_&#125;]#*&#125;$#_((#*+^]&amp;]&#125;]@^#^%^^[*@$&#125;&amp;&#123;&#123;&amp;#*[_&#123;]%#**</span></span><br><span class="line"><span class="string">&#125;[%(^&#123;_&amp;!++[_)+@&amp;^])&amp;)+!(@%+([![$*$+&amp;_)&amp;_*#%!#]$&#123;[&#125;_)+)&amp;$#^*##_&amp;&#125;$]]++!#+(@#!#[&#125;</span></span><br><span class="line"><span class="string">)[+)]+&#123;@*)&amp;(^&#123;^!+^^]!^)[$_!&#123;&amp;&#123;+]&#123;@&amp;#!_)#%_[@@_[#%*%)*])$&#125;%&#123;++%[)&amp;^[+!#))#(+_+$$&#123;</span></span><br><span class="line"><span class="string">#&#125;)(%&amp;!!!$&#123;($[$&amp;[]+)^&#125;_$$[%&#125;^[^%!)$#%!&#125;[@&#125;%%*_^[+!&#123;!_!!@^&#123;&#123;_]%&#125;#+&#123;&#125;&#123;&#123;$+#&#125;]%[&#123;*&#125;_</span></span><br><span class="line"><span class="string">+#@[(+!%]*#]&#123;#$%[]+[*[#_+(^]&#123;&#125;#(!!&#123;]&amp;!&#125;&#125;#&#123;#&amp;&#123;)!(]%*#*$(@&#125;!^]+&#123;!(&amp;+%**#@@$](%#[!+</span></span><br><span class="line"><span class="string">!!)&amp;!]!+^$(&#125;(@&#123;#@$&#123;]&#123;^&amp;$^)[!*[@#]*&#123;%)+^&#125;@)(%$$*&#123;&#123;+@!!@&#123;@&#123;&#125;@+@!*&amp;&#123;%]_@^)*$+&amp;&amp;@+)*</span></span><br><span class="line"><span class="string">^&#125;&#123;&amp;*&#123;*&#125;_$%&amp;((#&amp;&#125;%($*%]#+!*)@&#123;$@#^+&#125;([[*%)+%$@]&#125;@]%(&#123;(]$$__+!&#125;&#125;+@@!$&#123;%(])+&#123;&#125;![@&#123;</span></span><br><span class="line"><span class="string">&#123;_]+[&amp;&amp;@%%(#&#123;(^%)++%)!&amp;!)+&amp;)&amp;]&amp;&#125;[&amp;[^*!$&#123;&amp;!#&amp;&amp;*^)[&amp;$]!]%@&#123;%%!&amp;@@+&#125;&#123;#*]+%&amp;!#^_]!_@</span></span><br><span class="line"><span class="string">@&#125;_%^^[+&#123;_*[]%!@(#]*%&#125;&#123;+@_&#125;*&#123;[%^@_#&#123;@&#125;&#125;[%[@+]@_()$)[[*!)(#)$%$%(^[^++_++@&#125;)$[&amp;+(</span></span><br><span class="line"><span class="string">%^^%#&#123;!)#*&#123;[+!(!_&#125;[!&#125;_)&amp;$#&amp;]$%##))#&amp;%!+^#&#125;()+@&#123;^^@)^)&#125;]^&#123;]+[]+[[_(]+&#125;*+_*+]$%)&amp;(</span></span><br><span class="line"><span class="string">[)%&amp;$&#125;&amp;!&#123;+&amp;&#125;]&#123;@%]@#_[](&#123;+]@%@&amp;]@&#125;))!@(&#123;$]*!)])[!@(&amp;%++(&#125;[[$%!![$*&amp;^+&#125;]][)!)_^*&amp;#</span></span><br><span class="line"><span class="string">%[+#&#125;(&amp;!&amp;^_*]$^$&#123;[^_)_%!&#125;%*&#123;@$]^&#125;&#125;!_$%*%_$#_(&#123;+$&#123;_]*_$[)[^&#123;%^@@[##&amp;&#123;)]%]%*%)&amp;_#^</span></span><br><span class="line"><span class="string">&amp;@(^&#125;()&#123;)&amp;$[#[##%]*^@*&#123;&amp;(]$$](+%(^&#125;@!&amp;)]@##!&amp;@!^)![#@%[&amp;+@%^&amp;@^&#123;_&amp;%&amp;[(^(&#125;+&amp;[(&amp;%&#125;</span></span><br><span class="line"><span class="string">(%+&#123;*&#123;)]^+[&#123;*+&amp;+_)^)$)[]&#123;&#125;]&amp;&#125;%((_%%[_#&#125;[&#125;*%[^_@!$%)*^@]@%+[#$&#125;##&amp;!_&#125;[%[![*^&#125;_)+#</span></span><br><span class="line"><span class="string">_*+@[!(^)&amp;++[+&amp;_^%(_@]_@!^&amp;&#123;]+*+&amp;@(&amp;&#123;@@&amp;&#123;##@)_*#&#123;)^[%+%]@^$%@([#)[+@[_]+#&#125;!#+!&amp;]</span></span><br><span class="line"><span class="string">@[(&amp;+_&#123;@#^&amp;&#123;$$[#]&amp;@!$#$%$%(((_)!)]]*&#125;(@*^$)!!+%_!!^__@@&#125;[*^)%@**@!@&#125;&amp;!&#123;&amp;%+!#!(^@</span></span><br><span class="line"><span class="string">@&#123;^#*)+$!@$&amp;([++@$@_##+%&#125;_[&#123;&#125;_#&#123;@!@@#$(@&amp;]^]*%!+$)(+&#123;[+^%^&#123;+!&#125;!&amp;$[&amp;#@&#125;_&amp;&#123;%![^#*+</span></span><br><span class="line"><span class="string">#]@(&amp;&#125;]!@[&#125;+_]!&#123;]%+&amp;)^&#123;[@[__&#125;&#125;$$&amp;!]#)_!(**@(+*!^&#125;+#)&#125;!)@$^![^)&#123;!#$[*&#123;%&amp;![!^^^_&#123;[</span></span><br><span class="line"><span class="string">*[*#_*&amp;%)&amp;)&#125;@%!@!&amp;#]+%^#))#_#(#]*#*!@^&#123;()&amp;&#125;[&#123;%(&amp;[^)@$^%(&#125;&amp;#@(%+@%&#123;%%]*&#123;$(@%$]*$]</span></span><br><span class="line"><span class="string">&#125;(&#125;@$(!!^]+)%($)_[!@%#&#123;[@#((%+]*!*)%([]&#123;(&#125;*$]%#^*#_@@&#125;+_*&#123;$+(%]&#125;$@&#123;!#*%*[[^!&#123;)&amp;#</span></span><br><span class="line"><span class="string">#*!#^*+[_!$^%&amp;)%$_@%&#125;[%&#125;#&#123;&#123;&#125;%!$)[%+[[&amp;%)^(@(_^)!*@#^#@@+@[(@)$(^&amp;_&#125;%%)@&#123;$%+)&#123;(+[</span></span><br><span class="line"><span class="string">&#125;)#[)!!@))^@_!&#125;(+&#123;&#123;(%#&amp;[_&#125;+_)_&#123;#%%[%^(]]([(_!@$#$%*)$+(!_##&#125;]_@+*!]&amp;&#125;@&#125;$&amp;@!#)%_#</span></span><br><span class="line"><span class="string">#@+&amp;(@[*_*&#125;)&amp;&amp;#@^]&#123;(()!#^)]&#123;+$&amp;(&#125;!%&#123;!&#125;([^^*&#125;(])[@(($@^!^___)!&#125;[&#123;&#125;*#%_$&#123;_&amp;&#125;&#123;+[&#125;&#123;%</span></span><br><span class="line"><span class="string">^$!%@&#123;_]@%%+$]%[)]#_#**_(_*@!_((&#123;(&amp;&amp;^$#]@+&#123;&amp;]]&#123;$)]$)*&#125;^+_($#$_*][@^%&amp;$(_+&#125;&amp;]$&#123;(%</span></span><br><span class="line"><span class="string">+_$!$^]#@&#125;&#123;+#@[]_%#^$&#123;]$(@$#[!^+&amp;)%)+&amp;#)&amp;&#123;&#125;&#125;@([&amp;&#123;+&#123;_@&#125;[++&amp;!&amp;&#125;#$&#125;^(&#123;])^&amp;[)&amp;)]_&#123;%+</span></span><br><span class="line"><span class="string">@+]_*^&amp;+&#125;^@%*+))&#125;@!@#@&#123;%$_&amp;$%(@([!)))@(+]&amp;$*^&#125;$_+()*[(^(((+[@@#%)&amp;$]&#123;&#125;&#123;]*(@(@+^_</span></span><br><span class="line"><span class="string">)&#123;*#@)))#)&#125;#^)%&amp;](%(_&#125;[&#123;&amp;$#]#$@*[_[]_%+&amp;%&#125;+%#)!^[&#125;[%$!_](^&#125;])&#123;)#^[#]_(%(!+[&#123;^^%&#123;</span></span><br><span class="line"><span class="string">^[+))[]#@&#125;$_)((+*_]_[^(_*$)&amp;$($!#%&amp;_#]_^))+%+]#&#123;[&#123;&#123;@*&#125;[#(#($&amp;@&#125;%@%#(*&#125;&#125;]#+^&#123;&#123;&amp;%&amp;</span></span><br><span class="line"><span class="string">&#123;&#125;+_&#125;&#125;&#123;%*]_#$@&#125;(&#123;%)&#125;%_!]@$[$&#123;+]@+&amp;@!]&amp;$$!%&#125;]^!%_#%#)$#^+&#123;+%&amp;#+^()_%@%!&amp;[!$&amp;[###]</span></span><br><span class="line"><span class="string">+[_++$%]&amp;_#()&amp;#&#123;]&amp;]_($$)$%]+^*$[]%&#123;*^!(&#125;%#([!%[@&#123;**_)@##)_$(&#123;[#()@&#123;]&#125;%#*@$(!^%&#125;&amp;</span></span><br><span class="line"><span class="string">$#[()&#125;&#125;%)@)*([(!$+*^__]!!+&#125;&amp;+$*^+&#125;&#123;^@]!)!*&#123;[^&amp;_^)%&#123;!^##&#125;[#$!+&amp;&#125;$[]&amp;_]#_%$(@^&#123;^)&#125;</span></span><br><span class="line"><span class="string">&#123;]#%]_%#]@*[&#125;&amp;[$@_*_$@]&#123;[_#)&amp;!@@&#125;+]&#125;@&#123;*%(&#123;(&#123;((!@&#123;&#123;*#&amp;#+!)$&#125;_!!^#&#123;^^&#123;&amp;&#125;[_!*&#125;(_&#125;(@</span></span><br><span class="line"><span class="string">@@_@@%[)$)!&amp;^^]&#123;$@&amp;&#123;]+(#&#125;+#&#123;^#&amp;*&amp;__@*&amp;&amp;_&amp;!&#123;]+%+^!)*%!$&#125;_()$#%^&#123;)+@@^_]_$&amp;_)(_*&amp;)</span></span><br><span class="line"><span class="string">&#125;]!$&#123;+_[*)+#[#^^&amp;))@^$%&amp;^_!(^&#123;&#125;[])%$][&amp;_!)])@%&#125;+(&#123;&#125;+]%#&#123;$]@^&#123;@_]%*#!_#!((+_(#_]+</span></span><br><span class="line"><span class="string">[@**!)^[#^^%#*(!_&#123;((&amp;!*%!!+&amp;+%)_&#123;$&#125;+^@[)[@]$_$*+&amp;(&amp;&#123;)^%]&#125;(()*)&#123;[&#123;]@&#125;[]]*%!#](*%@</span></span><br><span class="line"><span class="string">))((])]*%%%$+(%&#125;$+%#[#^%]^@)@^_^)#%#([*%*@+(+)&amp;+++(^%]*!$_$$$%$+&amp;]_+[@_&#125;%&amp;@@%)&#123;)</span></span><br><span class="line"><span class="string">_^&#123;^+!+%^)]!_&amp;+&#125;@+^$_]*#]((^&amp;$#!_)&#125;][&amp;#$+&amp;)]_*#&#123;%%]&#125;&#125;[%*$&#123;&amp;)]&#125;((^(_&#125;(](]&#125;)*]_&amp;))</span></span><br><span class="line"><span class="string">+&#125;^_&#125;$)@@+&#123;([@%!@[_]]+%(%%%&#123;(@[_#+@&amp;^__+!^!_^@]@^#]]##%*^]!$$!+[#)^![@%++%$[&amp;[)[</span></span><br><span class="line"><span class="string">$$!^&amp;!(&#123;]&#123;)(@(%]%&#125;&#123;]]&#123;%#&#123;&amp;!&#123;*@&amp;)%%&amp;)#$+($[[[$+_#@!]%#)&amp;&amp;&amp;+*^%*]#_@)[]]+++[]^&#125;]%$</span></span><br><span class="line"><span class="string">+&amp;^^%(&#123;&#125;&#125;&#123;])]!!&#125;]**&amp;!&#123;[&#125;+*$@*&#123;$$_&#125;(^+(^(!%@^+*+%$!&#125;&#123;((%$%&#125;^&#123;%@[^@]^&#123;&#123;%_(#$(&amp;+]$*</span></span><br><span class="line"><span class="string">_^[$$+!(_(!](!+^&#123;&#125;$]@[]$&#125;*)]&#125;)_[#+%]@%&amp;@*&amp;&#123;@&amp;+)+(&#123;[^%^++)*#+*(+!&#125;*%^&#125;)+++@&#125;_&amp;#&amp;]</span></span><br><span class="line"><span class="string">][*&#125;^+[!@*+$[%%(*[_$+&#125;$]*&#125;]%$%@&amp;]@)!@+]$(&amp;]^_$!)@+%!+&amp;(%]&amp;[(#[#&#125;_@%&amp;_&#123;&#123;]^@#&#125;&amp;_(+</span></span><br><span class="line"><span class="string">#$^#$&amp;$_(@(()$(@+*)^&#123;(&#125;)[#%&#125;%$(@@[*&amp;!]_+&amp;%%^###]%[+)$[_+$%$$_]#&amp;#*#$+@#)%&amp;^#_&#125;_&#125;</span></span><br><span class="line"><span class="string">_%[@&#123;(*)$&#123;##&#123;*@&#123;[]&amp;^[&amp;%^[)%*[]*)$*@)[$%&#123;&#123;^#^(&#125;!!_$!+*^&amp;!)([!!]_%)([(#])+$*%[@&#123;&amp;^</span></span><br><span class="line"><span class="string">^++&#123;&amp;&#123;@%&#123;(&#123;^&amp;&#125;@!^)@]%&amp;@&amp;_+#]]%%[]+%[^)@#+&#123;+)&amp;&#123;*@+&amp;&amp;&#125;_!_!!$$$&#123;#(&#123;&#123;&#123;#+))]*(&amp;&amp;@&#123;&#123;%&amp;</span></span><br><span class="line"><span class="string">@+&#125;&#123;%*%[$&#125;(#)$]][)!_%&#123;(!)&#123;@%_##%&#123;$)&amp;))_!^(!#([+)]#_*)_$#&#125;!$$&#125;)%^[%(_+!&amp;&#123;+^*^()![</span></span><br><span class="line"><span class="string">*@$&#125;^)&#125;&#123;$^+%@@^)!)&#123;@*&#123;#*[#*#)^&#123;@!(&amp;@#+_#^[&amp;^$+&amp;$!*!@&amp;[&#125;&amp;&amp;#&amp;@^&#125;)&amp;(%[*%!)@[@])*&#123;%]</span></span><br><span class="line"><span class="string">@!]@([@&amp;%$&#123;&#123;%*@^[*$#])__&amp;+&#123;@@@&#123;$+[(@!%!^_&#123;$*^*$)%$!%_]&amp;$($!#&amp;)@!&#125;#&amp;*#(#_*#]*#%&#123;)</span></span><br><span class="line"><span class="string">*@&#125;(]+@#@&amp;&#125;&#125;_&#125;$+&amp;^&amp;[#%^*%*&amp;(!!@&#123;^^%$_&#123;+[!@^](@*&amp;%#!&#125;**^$@&#123;$#&amp;!!!^)]%$_)%!&amp;&#123;^^&#125;!%</span></span><br><span class="line"><span class="string">(*$**!(@&amp;*+)[+(!_(]![%!^[)[!@]_$*))+(+&#125;[+%($%!+%!&amp;^[(^^@(_]&amp;#@[[^]]*@_&#123;&#125;(&#125;[#_&#123;*_</span></span><br><span class="line"><span class="string">!+(_^]_%&amp;&amp;#$*&#125;^*+!*^&#125;][&amp;_[&#125;[@]$#&#123;]%&#123;)*[$!^_@(&amp;$^!%$+]&#123;#&amp;@%&#123;!)@&amp;#^&#125;%%^+@&#125;&#125;%%&amp;^^&#125;@</span></span><br><span class="line"><span class="string">*##+)__()+]!]])#!%(&amp;+&#123;))&amp;)@(][++_*[@@)%&#123;[%[+&#123;&#125;^*(_&amp;(&amp;@#&amp;^$@^_&#125;%^&#123;![](^__((&amp;#$&#125;$(</span></span><br><span class="line"><span class="string">_]+^&#125;@(]&#125;^%#%@([$&#123;%@@+#[&#123;)!!][+)$%&amp;[&amp;]@$*@^#^#%&amp;&#125;*@_))!^#&#125;)$!@%)(&#125;&amp;_^]!![+#()&#125;%)</span></span><br><span class="line"><span class="string">%@&#125;&#125;%^(#(&#125;)*&#125;)&#123;+$_[+]%%]#(*[#_(![&amp;&#123;#*$)&#123;_%^&#125;+*))&amp;+)$#_*&#125;[][@&#125;_#%@&#123;+(+[#&#125;(]^%&#125;^&#125;+</span></span><br><span class="line"><span class="string">_$#*(^]&#123;&amp;$#&#125;&#123;@_^^!(!++]@&#125;$&#123;]&#123;_)%#&amp;&#123;@^%$+&#123;)]+_$&amp;@[)#[!%^((@(&#125;$([#$%!]&amp;[&amp;*&amp;!#![^@+</span></span><br><span class="line"><span class="string">&#123;#@+&#125;@^@([++&#123;^%$^@@&#125;&#125;*&#123;!$*&amp;^&amp;)$)$$$&#125;[#[%!_]+]]*_)!!&amp;[]&#125;+$!&#125;%+&#123;!(&amp;^!#&#123;##&#125;!&#125;&amp;@(])+</span></span><br><span class="line"><span class="string">^(+&#123;+_%%])&#125;(*!*+@+^$*#&#125;)+&amp;&#123;&#125;%)(@%[&#123;#^+&amp;@)_[(+[@@&amp;&#123;@)&#123;#(&#123;++_@(((*&amp;&amp;&#123;@$&amp;[[%($&#125;^&#123;(+</span></span><br><span class="line"><span class="string">&amp;*%&#125;%((!&amp;#!$[)_(&#125;*@^%[@)]#%*&#125;&#125;]#!&amp;*$&amp;+[^&#123;#+##(_%_^)]@^&#125;*^]&#123;[^^]!!+^+^$%#))^%&#125;*^#</span></span><br><span class="line"><span class="string">%#(*&#125;&amp;)[&#123;_$+@&#125;&#125;&amp;_]$&amp;_&#123;]$)]&amp;[&#123;**$^(#$][__&#123;@_%#%&amp;^)^%!#[]@$@$([!$+%@&#123;(@)@*^&#125;(+&#123;)+(</span></span><br><span class="line"><span class="string">_@$)^&amp;@+&#125;)_^^]%*$^^&#125;_]@(*&amp;)+)&#123;(^)_#$&#123;%&#123;$+#@))#)[)&amp;$][(*&amp;&#125;&#125;^]^_%!*#*]$@%&#125;+$#^$[&amp;(</span></span><br><span class="line"><span class="string">%!*_*(%))^[*+__*&#123;+[_)++))(#_%(+!@#+@^^&amp;[)*_^_+_%([&amp;)@#&#125;!#%(!#!!&#125;$[@]_@&#123;)^[&#123;%]*$%</span></span><br><span class="line"><span class="string">@&amp;*!$_#&#123;!$_*_!&#123;*()@]+_&amp;%&#123;#!$%^()$](^]&amp;#@!$%))#]@*&#123;@($#&amp;(*&amp;&amp;@^%@&#123;_(&#123;&#123;*))+#))&#123;$^+_</span></span><br><span class="line"><span class="string">*^&#123;+)+&#123;]^+%&#123;^^&amp;+@)#+@@&#125;*^(^)^)_!%!&amp;())^!+]&amp;*@[*^@&#123;+]$[_@%%%&amp;)(&amp;$$#[@&amp;$%*&#123;[_@)[&#123;[</span></span><br><span class="line"><span class="string">_[!^&#125;(#$(&#123;#%[&amp;[&#123;]@*^^+&amp;&amp;((*&#123;((!&amp;%&#125;$$(##[+_#]&amp;!&#123;$&#125;@*]((!%_]&amp;@]![!]&#123;$#%^%+#&#123;#+#[*$</span></span><br><span class="line"><span class="string">(]@!%&amp;&#125;(]@_)!&#123;*))+^&#125;#&amp;*&#125;@##@&#125;](&amp;)!#$&#123;_)&amp;]&amp;[^%_^^&#123;&#123;+&amp;&amp;%+@&amp;@!+@__+@#]$]*!(_^+!$^&#123;_</span></span><br><span class="line"><span class="string">*&#125;$[%^$(%&#123;(&amp;])[*[@^+_[]#%#*!&#125;&#123;(!&#125;#](])@++&#123;&amp;&#125;%!%+*#&amp;^&amp;!_$(#_%([#[_^[[&#123;$(@#]&#125;@+[@%</span></span><br><span class="line"><span class="string">@(&amp;&amp;@&#125;]]!@]$&#125;@*&#125;#(^[%^!_(&amp;+(!)[**(&amp;_!*_*!*))+&amp;@)%&amp;&#123;#*[%[&#123;@+$^&amp;@]__][#_)^+)#^&amp;)&#125;[</span></span><br><span class="line"><span class="string">_&amp;$)](!^&#123;&amp;@(&amp;[&amp;&#125;$#%$%!%[#)&#125;*_(!]%[&#125;%__^%(@&#125;&#125;(^@_(&amp;]^^#]!%@&#123;&#125;&#123;&amp;*+@)&amp;(#$#+%*&amp;@&#123;_]!</span></span><br><span class="line"><span class="string">&#125;&amp;&amp;[(_*_%&amp;($%(@#)&#123;@_+&#125;$!])&#125;%$_[+$(@)_&#125;![_&amp;*%_[!$&#125;*#&#125;&amp;]&#123;[^+&amp;![&#125;%_#&#123;#$[&#123;)(&#123;$$[&#125;&#123;%$</span></span><br><span class="line"><span class="string">^!!&#123;&#123;&#125;)))!&#123;#^]*@&amp;&#125;]_)&#125;[%()[](*%@[__%#*&#125;&amp;_(+!&#123;#[)!@(]+]&#125;$+%_&#123;##[(+#$^*@&amp;@&#123;*&#125;%)(&#123;!</span></span><br><span class="line"><span class="string">*#^$(]))^^&#125;&#123;&amp;&#125;)@**&#125;!@[&#123;&#123;[*@^&#125;!&#125;&#125;#))@*][[[##@)([_$#*+)]%#&#123;]![$^[@!^@[([()&#123;+$)(]]&#125;</span></span><br><span class="line"><span class="string">($)[!+#!)*($!&#125;%!%)]&#123;!@&#125;][_&#123;](&#123;)*^[&#123;%[#]$]![#^(!&#123;_(@$@&#123;]_^%!%]%[#%)_%%&#123;@&amp;)@&#123;&amp;&#125;@*%</span></span><br><span class="line"><span class="string">)&#125;@&amp;+[)!]__*(#*@)_[@&#125;+&#125;$!^&amp;_^]*@!)_@!)$*()&#125;[@*&amp;&#125;)&#123;%@&#125;_@$[@]$*&#123;_^&#125;+[&#123;&#125;_&#125;#+[&amp;(^]]#</span></span><br><span class="line"><span class="string">^^^@%#((&#125;!_*[(&#125;(&#123;&#125;@&#123;&#123;)+*&#125;$@!^)[_%(%&#125;#!!)+&amp;+#&amp;%&#125;$*$&#123;)](^+!!])#]@&#125;[$^!&#125;[&#125;&#125;[]#_@@]&#125;</span></span><br><span class="line"><span class="string">)+#&amp;&#123;$&#123;%+(*_$$^]&#125;&amp;#+^%())^_^@(_]*^]&#123;))]+_)$@_%*([&#125;&#123;$&#123;^(]&#123;[[#(#]&amp;&#125;+l&#125;%#@&#125;&#123;&#123;)%@&#123;+&#125;</span></span><br><span class="line"><span class="string">&#123;$&#125;)($)(&#123;%@]!]]_(#_$[@_][+_)(!^!&amp;+*&#123;@*$#$@$$)(@$*]]&#123;&#123;&#125;])&#125;+[&#125;!^^]&#125;@(*%^%![+)&amp;$&#125;]$</span></span><br><span class="line"><span class="string">^%)[*%%@(@[#_+#&#123;*#$%&#123;_%*&#123;_%&#123;&#123;#&amp;[_@&amp;!&#125;#__)$+*+*$_[+*]+#*(&#125;&amp;&#125;!*!_@#%%!^[+(&#125;[&#125;!*&#123;!+</span></span><br><span class="line"><span class="string">#(!^_#@^&#123;$__!_*&amp;+&#125;@[%+&amp;$&#123;&#125;()@$&amp;^(^&#123;[%&amp;]_&#125;&#125;%^&#125;$&amp;+&amp;&#123;]*+%][@%@@#*^(^*@+*#*^](_+!$)+</span></span><br><span class="line"><span class="string">*&#123;[]&#123;@*]$%&#125;&#123;&amp;#$&#123;_!%_(@(&#125;_))&#123;^(#_#@*&#125;_]+))$_$[@+])^]&#123;$]]__%*%(%&#125;_@@^[[)^_[@(@&amp;**+</span></span><br><span class="line"><span class="string">@(_#_&amp;[!%$@&amp;)![]((&#125;!]]$&amp;+&#125;&#123;&#123;[_[+[@(&#123;+@^#((@_&amp;[%($)&amp;![*(^$+!^$#&amp;@!+_&#125;_[_]&amp;$!]^]#&#123;</span></span><br><span class="line"><span class="string">&#125;([&#123;]%@^+)[_[^*&#125;[_[&#125;$^(&amp;)#*&amp;&amp;^)&#125;!%&#123;[&#123;#_#(^%^_&amp;_&amp;_)!+&#125;&#125;*]@*($^$&amp;*&#123;[+&amp;&#125;*^&amp;%])^%]*(</span></span><br><span class="line"><span class="string">@[)+)%&#125;])&#123;)[##&amp;+#_)(*(#&amp;)&#125;_&amp;(())&#123;*_!&#125;*^[$^*+$@&#123;++@_#%_^($*&#125;_+([]*&amp;^$()$+])&amp;)!]&#125;&#125;</span></span><br><span class="line"><span class="string">&#123;(%$#(+))^&#123;!]@()]]$%*]%&amp;+&amp;)_*_&#123;_(()^$!!_[#+^@(%%([*#&#123;)&amp;+)))@*$@]#_)#&#125;!__(_!%#*&#123;]</span></span><br><span class="line"><span class="string">(!%(^@)@_&amp;%@)(_[(#@&amp;^[+([)+%&#125;^*&#123;!)!&#123;+(+&amp;!)+%^&#123;*_]+&amp;*%&amp;_*$])&amp;^$&#123;%+#+^+!(&#125;+&amp;@]$+&#123;*</span></span><br><span class="line"><span class="string">]!@$&#125;)^+*$^!$$!&#125;_&amp;#&#125;)+&#123;)&#125;[_#^[(*!)@%&#123;!!(&amp;^#$&#123;++*#@&amp;^&amp;!]%&#125;]&#123;!$+*[*#]&#125;&#123;_&#123;_!&amp;)&#123;%[^_</span></span><br><span class="line"><span class="string">&#123;#_(_$(^)#*@(##^*@&#125;&#125;(+&amp;&#123;&#125;_#&#123;*^]&amp;)+]!++)%[^%+!+%!++%+*&amp;$]*$!**&amp;$$$+(_!&#123;[++(@#[+&#123;_</span></span><br><span class="line"><span class="string">+)^$]#]*#+#_&amp;@$#&amp;&amp;]*]&#123;_**##%#&#123;&#125;^!]&#123;])&amp;($@(+**[_!+_&#125;&amp;#!]^&amp;@&#123;*_@[&amp;*$&#123;[+&#125;@_&#123;&#125;&#125;[]+#_</span></span><br><span class="line"><span class="string">^+*#!**[_@#@))@@$!!)#%$%$&#123;[(&amp;#(&amp;_#[&#123;*&#123;%@##!^@*)_!&#123;^&#123;%[]+%]&#125;&#125;()[$%(_&#123;$[[^&#123;(]]@%&#123;_</span></span><br><span class="line"><span class="string">[^_(@[!*%*$][+@)^]+#$!_)@&#125;!*_&amp;$&amp;%^@&#123;*%)!(*[*)(&#125;^&amp;&#123;&#123;&#125;_[$%)*()@%)#&#125;_)#&#125;&#123;&#125;##&amp;]&#123;$](#</span></span><br><span class="line"><span class="string">]]_$[[@!))^*&amp;^@!#_&#125;&#123;_)@$&amp;[%#[]*!$&#123;%!#[&#123;(%$*_*+$)]%#&amp;$!)&#123;&amp;&amp;_%##_]*%$@^%@&amp;&amp;)*$_&amp;(]</span></span><br><span class="line"><span class="string">@&#125;!^+[]&amp;&#125;&#123;&amp;&#123;&amp;%]*&#123;_*#^++#+_&amp;(%]+_&amp;&#125;&#125;^^+@+]@])&#125;[$&#123;%$*^@]&#123;^^&#123;+#(#*%*[&amp;_*(+#(*[$[*]$</span></span><br><span class="line"><span class="string">!&#125;#_(#![^%%+(^&amp;*((&#123;%[]@^]$([@@@@*@@)&amp;&#125;@)^^&#123;*^_@*&#123;)&#123;*((%!($+^_!_!^$$_!(@+%&amp;[!_$#$</span></span><br><span class="line"><span class="string">[*%!@+*^&#123;&#125;&amp;^&amp;]&#125;$#&#123;*]!&#125;&#123;+#%@]$!+^$_*(@]@%&#125;)%$!&#123;[&amp;!(&#123;[##$))(@#+(%&#125;@)$)*@++&#125;%*&amp;(#^&#123;</span></span><br><span class="line"><span class="string">@^[&amp;[%*_%#$_&#125;$&#123;#&#123;@@^^![[_$(!$&amp;&#125;[&amp;^&#125;_*&#125;@@_&#125;*+^$%[*_(+&#125;$)%&#123;@)&amp;^*&amp;(*]&amp;$!_[&#123;)&amp;&#123;[[_@!</span></span><br><span class="line"><span class="string">+_!]%^[)&#125;&#125;)&#123;!+&#123;%&#125;@##&amp;@@([%&amp;]+]+)!@&#125;^&#125;&amp;@@_[[!(!+[&amp;!)@*%@_#*(!(&#123;^&#125;$++!#*^!]+^%*$$)</span></span><br><span class="line"><span class="string">]^(]#&#125;]+)[@__@]#$]&#123;^)&amp;@[&#123;*+%%$(&amp;&#125;^!_++&#125;&amp;&amp;@+]&#125;*&#123;!&#125;^+#(@(@$[*%)*$((&amp;*&#123;*@#$)]*+_%@)</span></span><br><span class="line"><span class="string">@^^]^^)()*+)&#123;!+&amp;&#123;$&#125;+&amp;&#123;!&#123;!+@&#125;_*&amp;*$&#125;$)&#123;]&#125;&amp;&#123;(&#123;_]%+&#123;_)%(#@()]&#125;@]]#+$*&#123;*$$@&#123;])$&#123;*($#&#125;</span></span><br><span class="line"><span class="string">@)+&#125;!&#123;*_&#125;__)(@%*&amp;&#125;!*@#+!_#@!&amp;^$&amp;&#125;)&amp;*]!&#125;&#123;]]$#]&amp;$_@[*!)%_[&#125;&#125;_@+%&#123;&amp;_+_$^&amp;^)]]&amp;&amp;&#125;(*%</span></span><br><span class="line"><span class="string">((@#$$(#[(@!(&#123;&#123;&#125;#&amp;$*]$[&#123;+!@@[@*#+_#)(*_^_(%#%&amp;[%!(+&#125;$&amp;&amp;)%)[&#123;^$(]*&#123;++&#125;)@_[%*%]*^+</span></span><br><span class="line"><span class="string">%(@#)])+^_*+*#%+_+&#125;^&#123;&#123;*[+%*]$)]&amp;^*&#125;+#&#125;^!(^(^)^_*[&amp;@[&#125;_*+$!&#123;(@+&#125;]&#123;_&#125;[^$[+_][&#123;*]]+</span></span><br><span class="line"><span class="string">!#+$$_&#125;!%^%$]&#125;^!*)]+*(+&#123;#&#123;[%^&amp;!!^_$*+@&#125;_$($#)&amp;!)$_))*+##$&amp;$$(]]^@_@_(!^%&#123;_&amp;@&amp;+^&#123;</span></span><br><span class="line"><span class="string">*]!^&amp;+%_&#125;#@&amp;&amp;]%&#125;@#^#!##*#[])*#&#125;*]()&#123;+*&#125;@)]+)](_(+&amp;%&#123;#&#125;&#125;&#125;)_!+*_&#125;%%&#125;%&#125;(#!&amp;*+&#123;!!]](</span></span><br><span class="line"><span class="string">+_%_([_&amp;$*&#123;^$*)_)#*@^_+#(&#123;$][)%@$^@$[&amp;!+&#125;*^$(^!)())&#123;&amp;&amp;^&#123;)]&amp;)]&#123;@)$_]*^@]&amp;)@$#%#](</span></span><br><span class="line"><span class="string">)+&#125;[@(&#123;%[$!(](!)_)#[&amp;[]&#125;^]@*#([&#125;^]@%%%@&#125;[)($($]&amp;^+$][*(%%+*$&#125;%_]]$!@+(_%+&amp;+&#123;))@&#125;</span></span><br><span class="line"><span class="string">*_$#^&#123;%_^_&#123;$&#125;$]^&amp;)_!_#$[&#125;#$&#125;&#125;%(*&amp;)%+++&amp;$[&#123;]!#&#123;^_&#123;(*$[(&#123;(&amp;(_$)])%]#(&amp;)%$@]&#123;$&#123;&#125;@#&amp;</span></span><br><span class="line"><span class="string">]$&amp;&amp;]%^&#125;^*#$@&#123;#_&amp;&amp;(#%&#123;)]+_[*&#123;@^&#123;@^%&#125;_$[]$[((#@(+^&#125;&#125;!&#125;)!)$@&#125;)$%&#125;*@]$&#123;+&#125;%+_!!@@^*&#123;</span></span><br><span class="line"><span class="string">@^)[&#123;#%&amp;$*&#125;$[*&#125;#_^&#125;%+&#125;#^_+)^+$!_*#+)^_((^^+(*+[]][^(^^^&amp;^&#125;&#125;&#125;^*!(^]]*&amp;+&#125;[(#%)+(#!</span></span><br><span class="line"><span class="string">&amp;[&amp;&amp;_))#@+*^]_#[#&#123;&#123;$+!!%]]!!!$]^*!^^_+(%)%&amp;@$&#125;&#123;&amp;]$&#125;#[[^($(*)]]%_(#&#125;^((_@&#123;)]&#125;*#&#125;)</span></span><br><span class="line"><span class="string">%$)$_%$]%!&#123;)&#125;)!^@)[())#&amp;#&#125;@+_$##&amp;$[#!&#125;^^&amp;_)%][]&amp;$^#+@&#125;_&#123;@(&#123;[++&amp;(_!@%@#&amp;&#125;^#[&amp;[^%+</span></span><br><span class="line"><span class="string">)[&#123;^)#++[__(*+&amp;*%(@]#](+(]]&#125;%(^!(+@](&#123;_[][)(%(&amp;&#125;&#125;&amp;[[_&#123;#@#)@[#_[$#$[%[&#125;&#123;]&#123;[)$)%&#123;&amp;</span></span><br><span class="line"><span class="string">+&amp;(@&amp;%&amp;^)()&#123;)_[_]#^$)^)[!_]]&amp;!)&#125;+&#123;_%(&amp;+&#123;(+%*&#125;][^%)#&#123;&#123;+#@!$_*_[+[&amp;&#125;&#123;*%+*!!%$))$(_</span></span><br><span class="line"><span class="string">*@($]&#125;^&#123;[_&amp;$@%^%#@([#_[_#_%]@(+^))]_@%%&#125;%(&#123;_*^^@#_&#123;$#_[&amp;%&#123;@$$^&#123;%]&#125;#!$^)+#)[%*^&#123;$</span></span><br><span class="line"><span class="string">$_[#^!+^[_&amp;*%!^(%^![@^!_+&#123;_(&amp;*!!!$)]**^!%*$%&#123;&amp;*([+_!^]&#125;&amp;@^$)(_(%(%[&#125;%#_^$#]@*^]!</span></span><br><span class="line"><span class="string">%%][^]!%^%[@[&#123;#!&#125;[!&#125;$@)@&#123;^^[![[*$&amp;$[#+&#123;+(*)!^!)*+%*&#123;&#123;##[)%*!&amp;#*[&#123;%@!+((@##_&#125;&amp;+$*</span></span><br><span class="line"><span class="string">(&#123;#!+*]+)$@+[[&amp;#*!%(]&amp;@^&amp;#_^*@&amp;@_((&#125;_!!_^+#&#125;%@_&#123;%&#125;$]&amp;&#123;&#123;+&#123;]+^]#*[^@]&amp;&#125;*_*&#125;#!*_$#%</span></span><br><span class="line"><span class="string">$&#123;!_&#123;]&#123;)$)#&#123;*@+@@&#123;$_]]+&amp;+)^+!()[_*]&#123;^^]*([(@!&#123;&amp;&#123;&#125;@()%_&#123;+_[+&amp;&amp;@&#125;&#123;&#125;(&#125;$*%@$_^)&#123;*![&#123;</span></span><br><span class="line"><span class="string">(^@^&amp;^@&amp;!+#&amp;(@%!)[]%((##@(&#125;]_*#_*@%(_&#123;$_#](#_]*]#_+_[_])(#&amp;%#]_(!)]*$&amp;*##)&#123;&#125;]+*@</span></span><br><span class="line"><span class="string">$+%([&#125;$))^^!&#123;&#125;&amp;%_%+$%&amp;#[&#125;^*_^^_#$$&amp;^&#123;@#&#125;%[$&amp;&amp;(&#123;&amp;^]&#125;(&#125;(@#*&amp;#^)&amp;&#123;$(+^++$!*[&#123;&#125;)]&#125;^$</span></span><br><span class="line"><span class="string">$#!&amp;#[%&#123;)(%&amp;&#125;^&#125;[]()]$@])$])^#!]!%)_)!(])(&#125;&amp;*($%@%]#&amp;(+^+]+%@[([@^]$_)&amp;&amp;%^*$&#123;[!_*</span></span><br><span class="line"><span class="string">$)$__$+&amp;@!@+#&#123;]]@##(*]&amp;+^&#125;[!&#123;(&#125;%_&#125;[]_^&#123;(&#125;@)&#125;[$^&#123;*_+@+[[$&amp;#&#125;^]^(&#125;)()())@*)!&#125;[#^@&#123;</span></span><br><span class="line"><span class="string">(+_$$+]&amp;#]+*^]))@&#125;&#125;**&amp;[]&#125;$]&amp;!)^&#123;)[]+#%$(&#125;##!)_@$_)$_&#125;)[#%[!&#123;*)_*(*)*$&#125;#(^&amp;)&#123;+]_]</span></span><br><span class="line"><span class="string">()))_)+]&#123;)*&amp;)@!@&amp;*__%&#123;@*]&amp;$&#123;]$&#123;@_&amp;+)@&amp;)*+*!][#_][(&amp;])@&#125;@!#^!+*@]!#)[+__&amp;&amp;%&#125;_+$&amp;$</span></span><br><span class="line"><span class="string">]#(&#123;*#]_#]&amp;*&#125;_((+#!&#125;]_&#125;+&amp;_+](!#%+@$&#125;+@#&amp;&#123;&#125;(&amp;_&#125;^*!#$_@&#125;^*&#125;$&#123;)_&#125;%)_!@&amp;#])%&#123;#&amp;)*!(#</span></span><br><span class="line"><span class="string">##%*@!]##(_*&#123;&#125;@$!][]&amp;+*#)&#123;(_!$$_]_^^]#&#123;#))&#125;_())[[)&#125;@$+_&#125;_*!&#123;%%*![$*^#)&#123;([&amp;&amp;[&#125;#%[</span></span><br><span class="line"><span class="string">&amp;]@_[@@_*)&#125;!&#125;#_&#125;)]_@)^[^&amp;#&amp;^!&amp;&#123;](&amp;_[!&amp;#&#125;%!&#123;)$[$()&#125;*^#*&#123;@&amp;&#123;]*$%$$*&#125;@^+*)@(&amp;(+%$_[</span></span><br><span class="line"><span class="string">)*^&#123;&#123;![!&amp;&amp;[*]#)$&#125;)&#123;^]%)@*]&amp;^@@#&#125;#*%#([]^&amp;%&#125;]&amp;_)%!@@!*$%+*+#+_%%+$%#!%]+]![@#)$$&#123;</span></span><br><span class="line"><span class="string">&amp;(!@(^&#123;^$_&amp;^^&#125;))&amp;&#125;[+&amp;[$*^_%_[@^([**&amp;#&amp;[@&#123;+&amp;^](^&#125;&#125;]#_%###[)&#123;^&#123;+[$%!$![^)[&amp;#*@&#123;+]#</span></span><br><span class="line"><span class="string">_)*^@&#125;)]&#123;])*@&amp;]@#+$&amp;(#$)!^$$][(*&amp;(]))^[*^&#125;)!!#))(&#125;)]&amp;@&#123;&#125;(&#123;_&amp;)*$@&#123;+!!]&#123;($!&#123;+@!(&#123;$</span></span><br><span class="line"><span class="string">#*![]@@&#123;%_^)+_#_][^$!)#*!^&amp;]___&#125;%%&amp;_[&#125;#(@+&#125;^*)%[&amp;!&amp;&#125;$^!!&amp;]#!&#125;(@!)%&amp;^__@@&#123;[+)[&#125;#(</span></span><br><span class="line"><span class="string">+@#&#125;_*+$&#125;)@&amp;_&#123;_@@)(@#$!)&#123;&#125;@$&#123;][#[#([)%[@&amp;@@%[&#123;%!&amp;^#[!_&#123;_@(&amp;@&#125;!^^*$(^*!%&#125;+$)$]__%</span></span><br><span class="line"><span class="string">_$%@%&#125;*)!@[$+$[_[]^!][]&#123;+!#]]*+&amp;&#123;)&#123;+)__$)_*%!&#123;^&amp;$&amp;$!)*#_&#123;&#123;$!$!+[%[&amp;$+!@!&#125;@*_[$&amp;_</span></span><br><span class="line"><span class="string">)*$*&#125;%(*^&#123;&#125;!$^$%*(!([##@&amp;^*!+!%@[+[+)@(&#123;&#123;_&amp;**&amp;#_@&#125;$$[)%]@[&#125;]&#125;&#123;*[++&amp;)#)&amp;!$!)_)&#125;$+</span></span><br><span class="line"><span class="string">#]!_^#^*%()^#&amp;(]&amp;&#125;!&#125;[[[&#123;_&amp;)#&#125;#@^#[&#123;__^]^#((^%%[&#125;!)((%(@](#(())#&#123;@)[!*](%&#125;&#125;))+!)(</span></span><br><span class="line"><span class="string">&#125;)(*&#125;]#$[_($^_)@+]@)_)*[&amp;@]#+(_))]#&#125;#@+#@@!_+#[_+_]*)[!$&amp;@**_+!]@_]&amp;[@%]+@[&#125;%$&#125;)</span></span><br><span class="line"><span class="string">_#)&amp;&amp;]&amp;@&#125;!&amp;[&amp;^*#!^&amp;&#123;*$[&#123;+*)]&amp;*##%!&#123;@)@*!^_&amp;@*#^%_]%(&#125;]&#123;_!)_%&#125;_&amp;&amp;$$+^(_*())%#&amp;&amp;**</span></span><br><span class="line"><span class="string">)(#!@+^!+(^+#^&#125;[#($&#125;*&amp;*!@&amp;[)+[@][[]])#&amp;!%[++@!&#125;]$%]*_&#123;@%&#123;@_!&#123;#%([$@[^[&#125;^!(&#123;!&#125;^(*</span></span><br><span class="line"><span class="string">[*&amp;#$_*&#123;$^!_!(&#125;&#123;*&#125;]@($)%^)[&#125;#&amp;&amp;_&amp;@]__[$#*$*$^%]#!&#125;[*&amp;_@](#$_[#@]&#125;!_[&amp;+&#125;[%]&#123;)@#&amp;)</span></span><br><span class="line"><span class="string">]+(_@_&#123;#]^^!&amp;&#125;%^(*^*[)#](&#123;+@+@&#125;#(*##&#123;)&amp;[#&#125;]&#123;!#!@+++^_](%+(()_^]*&#125;!&#125;!$(+&#125;&amp;&#123;*_!@#]</span></span><br><span class="line"><span class="string">)*@#&#125;[&#125;([%&#123;[#^$&#123;[&amp;)*[&#125;#+(%^$@+]&amp;@&#123;$[^_^[*)@$]]+&#125;&#123;&#123;^%&amp;(&#123;](!&amp;(%#^[!&#125;&amp;]$)+*@%%)_&amp;&#123;(</span></span><br><span class="line"><span class="string">)%*@_]+][&amp;&#123;@$$]]+*&#125;&amp;+*&#123;+$)$&#125;^)!&#123;+**!@[(])@)^*%@^@]&#125;%^^!!$&amp;!&#125;^&#123;&amp;^@_+]_]$)*#(&#123;%]#*</span></span><br><span class="line"><span class="string">[+%]@[^$%_&#125;))_(&#123;_]%$&#123;)&#125;_[&#125;^+(%_+&#125;*&#125;*!_+^^@#]@&#123;)&#125;&amp;[*#((#!$![](*^(!@%*&#125;_(&#125;$*&#123;!&amp;^$(</span></span><br><span class="line"><span class="string">&#123;$&#125;&amp;%(^&#125;+&#123;[&#123;+@)[@&#125;$)!!]&amp;[&#123;)_#%]&#125;*^@[@$$]&amp;#[@[()$&#123;*#)&#123;)$(&amp;*#(&#125;@_%]&#125;)&amp;[][*])+%#&#123;&#123;^</span></span><br><span class="line"><span class="string">#&#125;%)!))(&#123;*^@^_%@!)(@_+$&amp;)&#123;[[(_+&amp;^_@+%[&amp;_*&amp;#%#)[)^_[*+]+)[!^&#125;]%&amp;([&#125;%@[+@&amp;^^((^+^]</span></span><br><span class="line"><span class="string">&amp;(^[%[$!!]#]^_!!!&amp;&amp;&#123;]&#125;]]&amp;)@#&#125;@_]]]]$&#123;&amp;#)@&#123;&#125;&#123;!&#123;@%*)^@&#123;$^!^+@]$$$&amp;)**_&#123;[[(%)]@&#123;*^(</span></span><br><span class="line"><span class="string">_++]]&#125;[%&#123;(!!(*]_!^]&#123;]$#&#123;&amp;$#$&#125;)+*&#125;$^&#125;&amp;!]&#123;&#125;^_&#123;#!&#125;&#123;(!%[%%&#123;$%(&#125;]@&amp;$]#+]**!_#&amp;[&amp;$$!&#123;^</span></span><br><span class="line"><span class="string">#+*&amp;!_^@@^_#$[&amp;@(@$+&amp;!)_^+&#123;&#123;__&#125;#_)^+(@@&#123;[)&#123;))@[+#*&#125;_#]])^]^%^*_$#&#125;]%)@@%*!!&#123;^&amp;+$</span></span><br><span class="line"><span class="string">$_+($!%&#123;_]$^+^@_()#^[[^)$+@))&amp;&#125;+_$[_&amp;+&#123;!$]&#125;]%$_!&#125;[@)&#125;[_($^+#&#125;_%*%@*+(^!+)()[#*_#</span></span><br><span class="line"><span class="string">(&#123;&#125;[*$@]#*[#&amp;%#!^)&#123;@__[]#]@&#125;^$*]$%%(^@^]+!&#125;$#$#@$[@&#125;&#123;#+!)!#%%!#[(^*(*_+*&#123;#%#)%(*</span></span><br><span class="line"><span class="string">_@([()+#_)&#123;$&#123;^[__&#125;+#%&#123;[&amp;&#123;_@![&#123;&#125;+[#][)!&amp;!&amp;^$(_*_^^&#125;[)&amp;)&#125;$%%)(#[)&amp;)+!+&#123;@^@%#__]$+]</span></span><br><span class="line"><span class="string">&#123;&#125;+[(^&#123;!(&amp;)%*(@^#+#)*&amp;&#123;)[^+@#&#123;&#123;&#125;&amp;$]&#123;&#123;@_&#125;@&#123;&amp;$&#123;#%]&#125;*!@)&#125;^&#123;&#125;!)(!(_$%((#%%%!&#123;(_(_$@@</span></span><br><span class="line"><span class="string">[@(!%!@_]!%*(+(^[_!_#!)[+@&#123;(#%!%*]$&amp;#@_@!*&amp;)&#123;__(@@_&#125;&amp;*+)&#123;_^#^_&#125;*+@*()[&#125;)&#123;]!#!&amp;^#</span></span><br><span class="line"><span class="string">@!_%&amp;))_^@!$)%^!*%@&#123;+)@%$$]&amp;&#123;!*_!&#125;@&#123;&amp;**(&#125;&amp;^+[@%(%*^$(^+&#123;&#123;($&amp;]!_&#123;&#125;)!*)_!&#125;!%++[%)@</span></span><br><span class="line"><span class="string">$)&#123;^@]#^&#123;(!&amp;][%]+[^**^$&amp;*@&amp;[)%%#$)%[^_[@^*+)@)&#125;#&amp;&amp;#(_^+(%&#123;)&#125;&#125;!@^+$&amp;&amp;$]&#123;(^*(@]@%&amp;</span></span><br><span class="line"><span class="string">#+&#123;$]$_[^&#123;[*#&#125;%@+&#125;[@&#125;+@**$&#125;)^@]#&amp;[+(@^&amp;%_%!$_&#125;*@&#123;]&#125;&#125;_(#@[*]&#125;+!_#&#125;))+]]&amp;]]@$^^&#123;+[</span></span><br><span class="line"><span class="string">(!_&#125;&amp;&amp;&#125;&amp;&#125;!_@$#)]&#123;!#^&#123;%(#]#^&amp;]#&#125;^%&#123;&amp;&amp;*&#125;&amp;(+@^+_%]#)#)_()[(_&amp;!$+^#[%@+$]]]!!&amp;^%[]!^</span></span><br><span class="line"><span class="string">%%@%)]**%+_^$&#123;$(&#125;]&#125;^&#123;]])@!%+@!$#!&#125;)!($%$@)+*[![&#125;]&amp;__[$%!&amp;$^&#125;)%]^&amp;%(+^+#@&amp;^$]&#123;&#123;!)</span></span><br><span class="line"><span class="string">[(%%!&#123;![]#[^$%_!#]^)!]![])!$@+!^@&#123;%&#125;$@[_#_+&#123;#](!^*(%#@_^&#125;^__[(@&amp;]&#125;]@&amp;!)_!$^%*(&#125;[</span></span><br><span class="line"><span class="string">+*&#125;[%]*#@&#123;_![]$+@_)]#@+]#_^(!*&#123;#]!()@&#125;&#125;%!_&amp;@]()()]*+(%*_&#123;@)]#&#123;[*^$&#123;_+$)@[&#123;[$*!!&#123;</span></span><br><span class="line"><span class="string">%)+$^^[!!#^]^+*&#125;#&#123;_(^*!_!@]&#125;[&#125;%]&#125;#]!(_+[[_)%!+($*@&amp;$#*_&#123;^@[()&amp;+)$_[%&#125;(^*^+&#125;[^&amp;^#</span></span><br><span class="line"><span class="string">@$&#125;]%(%&amp;_&amp;&amp;*))&amp;%$![&#125;[$%&#125;@!]^*&#125;*)_&#123;^$_!(%]^&#125;!_#_$$^__)&#125;[#^(]+@&amp;^!&amp;*($_[_$%])]*%%!</span></span><br><span class="line"><span class="string">#!%+_&#123;]$&#125;($_+&#123;^*&#125;]&amp;[@$^($^]()]+)+]+_]!*_^*^!@&#123;]_)&#123;#+_#%(*#&amp;#%(]*$[%%]$[&#125;!&amp;*!^^()</span></span><br><span class="line"><span class="string">!&#125;[&#125;&#123;!+^&#123;@&#125;!$)%+)&#125;&#123;*#&#125;%&#125;@]#&#125;+_#+&amp;(*)_]&#125;#(!&#123;(*&amp;#&amp;)$_&#123;^%$*)]!##*&#125;$&#125;[_&amp;(#^&#123;&amp;)%+&#123;(_%</span></span><br><span class="line"><span class="string">&amp;[#$!&amp;+&#125;!*#%_!%+&amp;&amp;[@(![+*@&#125;^%@)@+(_@(%&#123;$[]_[%)&#125;_))&#125;$*#+$(]@%&#123;#!)&amp;_#@!!]&#123;!&#125;)&#123;&amp;@@(</span></span><br><span class="line"><span class="string">)(_)[&amp;&#123;!]%*&#123;^&#123;&#123;]$_&amp;]^![&#123;_##($%)%&#125;#&#125;)(]$&amp;^^&#125;&amp;!#@@#]*^^$[)@&#125;!!)@)_*$$[&#123;@%)_^!&#125;_^]]</span></span><br><span class="line"><span class="string">&#125;)]]&#123;!_@)[%!$#&#123;&amp;@!_+_$[_*@!@@@_(&#125;$!$!%*($[%)[(]&#123;[]#%*(**&#123;#%$)_@_*](&#123;^@!$))[$*$#+</span></span><br><span class="line"><span class="string">[+!&amp;#$$!&#125;)[&#123;#(@&#123;&#125;&amp;&amp;@)&amp;&#125;^$!%_*@%#*)++&#123;+]@&#125;&#123;@&#125;*@^!&#125;+])+&#123;[^*#%(*(+$_!&#123;])&#125;+$](!*&#123;&#123;[&#123;</span></span><br><span class="line"><span class="string">^[#++^*[_^&amp;![@&amp;^^])&amp;%#_*&#125;^$(#^&amp;[&amp;(#(@&#123;)%$(%]*%!)^*+[!_%@^+&amp;(+([(^)#[&#123;***![&#123;*$@[[</span></span><br><span class="line"><span class="string">]&#125;_&amp;]&#123;[&#125;)+[^+%!^^@&amp;[+[)$%)&#125;(%&#125;&amp;[_&#125;&#125;(&amp;#^]#!@(+*))&#123;([)**(&#123;&#123;^]@_&#125;+@$%&#123;)_&amp;&#123;[&#123;_&#125;&#123;_[_#</span></span><br><span class="line"><span class="string">!&amp;@@$][&#123;)_&#123;$_)[&amp;+]^!$*]&#125;]+[$$#+@*_&#125;$*!#]()*[[&amp;&#123;*!#)(@%+%[&#123;)@@@&#125;&#125;[&#125;&amp;[+)[&#125;&#123;_^&#125;*&#123;+[</span></span><br><span class="line"><span class="string">$&#125;([#)%(!(#[([@^)%+[#&amp;[#%)&#125;+&amp;*&#123;(^*(])^&#123;_]%&#123;^+^^&#125;&#123;#&amp;#[*$^*&#123;#!&amp;](&#125;_#$++#]$[^%+&#125;*&amp;@</span></span><br><span class="line"><span class="string">]+]@]&amp;[&#123;*!)[&#123;(((^&amp;$%&#125;[^#[+][@_%!#[&#125;][&#125;^&#123;%&#123;^*(!!*+)^]][+&#123;_%^*^&amp;+&#123;#&#123;$&#125;#$%_!*!&amp;*#^!</span></span><br><span class="line"><span class="string">%*)_@)+_$+[&amp;@*&#123;@(+^@&amp;(&#123;##&#125;#&#123;*([^_+@]*&#123;+@&#125;)!)&amp;))]@@[((&#123;!!)*(&#125;($__(]+*&#125;[&#125;&amp;+@&#125;]$$]*</span></span><br><span class="line"><span class="string">%%%@$+$]$!%@(&amp;]]&#125;&#123;([_$*_)(&#125;$]&amp;*[%_#**^(!$#(+&#125;$&#125;))$]]!#^&amp;[&#125;]#!&amp;$)&#123;@(&#123;$%(&amp;@*&#125;](+@]</span></span><br><span class="line"><span class="string">_@[(%)])^!#(&#125;_&#125;!)$%@*+]@&#123;&amp;(^&#125;!([!%$!!]@$$!&#125;*%!_#&#123;($*]+(!@@)_(+^]*#*)])&#123;&#125;!_^&amp;&amp;&amp;]&amp;</span></span><br><span class="line"><span class="string">)[^@$+%]@%)&#123;!]]&#125;&#125;$!&amp;&#125;###)&amp;[[@$)_*@&#125;^[**)+#&#123;&#123;&#125;_&#123;#]!+(&#125;%]$###&#123;(!]*+[&amp;+^(_(&amp;$)_%]![</span></span><br><span class="line"><span class="string">&#125;)+$)#]](#!&#123;+)($&#123;$*)[)$_&amp;)[_%)+@*_]]&#123;[&#123;&amp;_!&#125;%%*$+]@%#^&#125;^+*_&#125;$!&#125;@$]@&amp;[&#123;%(&amp;%](&#125;!)&amp;*</span></span><br><span class="line"><span class="string">%![[!$$^]&#125;*!$[&amp;_&#123;_@](+(_&#125;@_@^&#123;$+%&amp;(+[((@&#125;[&amp;$&#123;@%@[@%]&#125;)$)&amp;&amp;#*(%&#125;_)]%%&amp;@]&amp;&amp;&#123;[*#@@@</span></span><br><span class="line"><span class="string">!^__!&amp;+^_@_)&#123;&#125;[)*[#__[[+&amp;&#123;(!*&amp;[!_@*&amp;&#125;*)%&#123;*+&#123;(^++^!][&amp;#))*]*^_&amp;^+(&#123;)[)$#+(+%&#123;&amp;[^(</span></span><br><span class="line"><span class="string">*&#125;*&amp;*#[*!+^^#&#125;!($[!&amp;@!&amp;_*$&#125;+%&amp;(%$!!^$#]&amp;*[#)[&#125;!^^@+^+#)^$])$^[%#[_+&#125;]_)$&#125;+[!]%*$</span></span><br><span class="line"><span class="string">@_%]^@&#125;))&#125;*&amp;)&#123;!%^&#123;_(!]&amp;+*%!*)@)@%$%&#123;[@**!)#!%@+&amp;!)@&#123;[&#125;)*@)*[+&#125;((])*)[&#123;!@#[[&#125;&#125;*!+</span></span><br><span class="line"><span class="string">(!%$^(&#123;*[^#&amp;_](^]*%_&#125;*&#125;@+(&#125;!&#125;*&#125;%$)[$&#125;_&#123;###@*&amp;&#125;)_+%!*)[#__*])&#123;_^&amp;$%+$*@&#123;%!&#125;!!(![!</span></span><br><span class="line"><span class="string">$()&#123;)%!+&#123;!_]+][&#125;(($!_+^&amp;_+_#&amp;&#123;%)$_#)!#_+@[&#123;#*&#123;]^+)@%&amp;&#123;@$$$@+_+^[%&amp;(&amp;#^^%&#125;&#125;%!)&amp;&amp;*</span></span><br><span class="line"><span class="string">!([+&#123;#(+&#125;)+$&#123;@*!&#123;]&#125;_^&amp;_^&#125;(@(](%^)%+[$!^^@_&#125;[&amp;][&#125;@*]&#123;@[]$#$@)++#&amp;)#@[#)^(@&#123;[!)&#125;!&amp;</span></span><br><span class="line"><span class="string">###*#()&amp;#*&#125;%$#@^(*[!+#&#125;*(&#125;*!&amp;&#123;*$%%@@%[)_&#123;))(+)[#_&#125;$(^#$%&#125;!$(#+(*&#123;]![(]]^)@##@&#123;#%</span></span><br><span class="line"><span class="string">]*&#123;+#%@^_%[+$&#123;+]&#123;&#123;]@@#%!+&#125;#_&#123;_(^!^&#125;%[&#123;$(@]&amp;[#^_^&#125;$!&#125;%&#125;@$(&amp;[&amp;**]++[*!(!@$[@&amp;+]+(]</span></span><br><span class="line"><span class="string">]^!]&#125;)@%_([&#123;)(+$^&#123;&#123;_+_&amp;_^&amp;!+&#125;*(&#125;%&amp;)+(^&#125;&#123;)@*^#(%[&#123;]_+^!%!_++_[&#123;&#125;(_[&#125;@$@]!^*_+&#123;&amp;&#123;]</span></span><br><span class="line"><span class="string">@&#125;]&#125;*!#@%&#123;&#123;)**)&amp;!#@#&#123;&#125;(_*^))[&#123;](@!(#!)&#125;]&#125;$]++]_$!+(!)[&amp;&#125;^])+(]#$[%&amp;]#@%^](&amp;&amp;#+]&#123;</span></span><br><span class="line"><span class="string">[(*&#125;*[&#123;(%&amp;_&#123;#^&#125;#*([&amp;)*$+__#^@%]#^@])^*)$_^&#125;@(_%+*&#125;%%^_+###_&#123;+*_$]%$%*[@%_((_#[+&amp;</span></span><br><span class="line"><span class="string">![%(&#123;@]#&#123;]+*&#123;@&#123;!+]$+&amp;^)_$[([([!!%&amp;&amp;+]^&#123;_)*[#[)[*&amp;&#125;)&#123;%%]@$([@&#123;%!(#+]^@(%*&#125;([!^[_(</span></span><br><span class="line"><span class="string">(]](&#125;^]#&#125;_!@!#)!+_&#125;&amp;!+_()]&#123;&amp;+]_+*[([))$_)$!#(+@@*_[$)$[!^&amp;%@&#123;^%&#123;@%+!+&#123;$&amp;[#!&amp;!$!^</span></span><br><span class="line"><span class="string">+]@#[&amp;&amp;*[^$(@&amp;&amp;&#123;((^)%[%%@[])&amp;&#125;%]]^[)]&amp;@&#123;*@([($_]_&#123;[[@&#125;^(%#]@^]^$%_!%_$+*@&amp;+[+)(&amp;</span></span><br><span class="line"><span class="string">@)[$#+[&#125;#[&#125;^!)$+!_[&#125;@&amp;&#125;**&#123;+&amp;%$](_&amp;](&amp;[])&#123;($_^&#125;&#125;*!_*!]@$+($%])&#123;[_^^_%([)_$@(*###@</span></span><br><span class="line"><span class="string">&#125;^*&amp;%&#125;&#123;%[^]$&amp;*]_%@&amp;&amp;]))$_@%[@@&#125;!^@%[!_#@(#[[$_&amp;!_+)@+!*#*(&#123;)**(]&amp;])#^][[%_%[&#125;$&#123;]</span></span><br><span class="line"><span class="string">]_(!%@$++])^+_!#___(^#&#123;!(&#125;^$&#123;%[##+]+[!%%*&amp;&#123;*#^$]#[$&#125;(^@_%*$[@][%&#123;#*$[^*]&amp;&#125;[+#*+!</span></span><br><span class="line"><span class="string">]#)&#125;]&amp;#&#125;&amp;%^$]%!#$!&#123;)[*%))!!%_%*%%#@@*&#125;&amp;[&amp;@([[&#125;)$&amp;($*&#125;+*&amp;((%$&#125;+$&#125;)(^^_%!+%+(@#]#)</span></span><br><span class="line"><span class="string">&#125;$&#123;@&amp;$![)#)$$(#][(%&#123;$+((&#123;[)$$@%&#125;+#*]%&#123;&amp;[#_&#125;@_%%@!]+)&#123;&#123;@&#125;&amp;&#125;%*][&#125;+*]*%@@&#123;&#123;&#125;**+&#123;%^)</span></span><br><span class="line"><span class="string">%]![]!$_)@(@#+)[$(^![&amp;@&#125;)%]&#125;&#123;%*%%+!]]&#125;+&amp;@^*^__%&amp;*$]]&#125;$^$)$&#125;*@&#125;+&#125;&#123;&#125;_)[&#123;_+_+%^[)&#125;!</span></span><br><span class="line"><span class="string">$*^%$%$+&#125;_)#%+[&#125;*)!](!^*&amp;[*[%+[&amp;+$^$@]!(!]+[!&#125;+(&amp;*^&amp;#&#125;@&#125;([]*@$]]%_&#123;]$*!_&#123;)(!+_+@</span></span><br><span class="line"><span class="string">((!&amp;&#125;!(&#123;^(#*(*#@%__(_)])*])($&#125;[]&amp;@_&#123;(#*_&amp;$&amp;++&amp;@(&#125;@)+^&amp;#+&#125;)@&#123;](&#123;]&amp;&#125;)&amp;_^*]_#^&#125;$$)[</span></span><br><span class="line"><span class="string">*$&#125;(@^&#123;[[#_&#123;*^)+(_@&amp;@)*^]@&#123;$]+&#125;*+@&#125;!^[!!$^@*_*_!$!_&#123;][&#123;#*!%&#123;^[&amp;[&#125;*%!(_@+*^*(+_&#125;[</span></span><br><span class="line"><span class="string">&amp;#&amp;]#_$&#125;@_]$@_+_)%*@^$&#123;)$(^&amp;**$!&#123;)+[%]%!!@%^&amp;$[)%&amp;*&amp;]^+$&#125;#&#125;&#123;^_*&#125;%&amp;)!*%[[!!#_*@+[</span></span><br><span class="line"><span class="string">^@^$!&#123;_^&amp;%%]@&amp;_)&#125;&amp;_@#%*&#123;!*[(($#[[&#125;&#123;#&amp;_+%&amp;+&#123;*_*$%[&#123;&#123;[[$@@^_%(*#)#@%&#123;*)#&amp;)]&#123;[_&#123;(]+</span></span><br><span class="line"><span class="string">^*&amp;#%!%)&#123;+#)!%@]]&#123;#&amp;^)_&#123;%&amp;+[*](%@+]]&#125;&#125;&amp;+@&amp;]#&#125;&#123;&#123;*@+]_!^@@)_[@_)@)&amp;]%&#123;_#]$_!(&#123;_!!_</span></span><br><span class="line"><span class="string">$&amp;&#123;(@*&#123;_$$*)(^*[)+_&#123;!+%&#125;+)&#125;!&#125;$^#++@@^$@[$&#123;%+([+_[&amp;]&#125;_$]!^%_+$%*[!%(()%$%&#123;!@&#123;^*@#</span></span><br><span class="line"><span class="string">_&amp;$)]^!(!*%&amp;#+)^)^$&amp;&#125;(((!^%*[+(&#123;(&amp;!*_#[@)!_&#125;%!_&#123;_)%_)$%$^%^!+)*&amp;_*)*@&#125;)&amp;&amp;@#@*]&#125;@</span></span><br><span class="line"><span class="string">_@+#+&amp;[^$#[&amp;)%+@]!*(&#125;@+#*[^@]%#^!*#+#$()+))[!)]]&#125;@)!]*@#&amp;#*!$&amp;@!&#123;]&#123;^$*&#123;&#123;$$]%&amp;++[</span></span><br><span class="line"><span class="string">^(_&#125;&#123;%%&#125;+%](#+&#125;^&amp;@*)&#123;+]@]&#125;&#123;)!@[#&#123;!(%&#123;!&amp;@(&#123;_&#125;&#123;_#&amp;(^()[&#125;[[%##*&#123;&#125;$&#125;$$()&#125;&amp;@++[!%&#125;@$_</span></span><br><span class="line"><span class="string">_[!(_^@&#123;#[$))(#$^]*_%[$!&amp;]$!@_+[#%@+()^[(]&amp;!)[&#123;$+*$)#)@)_@_)([%[&amp;&#123;&amp;^[&#125;*+!_]_&#125;]##</span></span><br><span class="line"><span class="string">)*!@&amp;[+$&#125;#!&amp;@&#123;&amp;@+#[]*)&#125;!_+&#125;)&#123;&#123;+)@!&#125;!!#(#)_#!&#123;][&#125;@&#123;^#&#125;&#125;_$]&amp;*%*[^(@]]*@($]$$]$_+^[</span></span><br><span class="line"><span class="string">$$%][[_^[*$*)(+_]&#123;]&#125;$%&amp;&#125;&#125;(^&#123;+#&amp;]$&amp;^&amp;!!&#123;[[@)_%!][_]@![[$_%&#125;_[[&#123;]!_*&#125;[&amp;&#123;$+![_%(#!&#125;</span></span><br><span class="line"><span class="string">$)#^)#*&amp;*+(#)#*$+)#]_%]%!+(()+_^(&#123;$**[&#125;%@*!_)&#125;%!@[_+$_))&amp;(**&#125;][$([)%&#123;&#125;#&#125;&amp;(]&#125;[&amp;+(</span></span><br><span class="line"><span class="string">$&amp;+!*]!&#123;+_&amp;@@&#125;&#125;@!&amp;&#125;@#%*&#123;&#125;%_^]%(_%)^!#(]^^@@&#125;&#125;(&#125;_&amp;#+_+*$!&#125;[)*^_#!)+@(%]&amp;#[_)[(&#123;*+</span></span><br><span class="line"><span class="string">#!&#125;^#^]]@$[(%&amp;&#125;#!#$+)^#$++*+^_]_)[$_]((+(&#125;+*_#&amp;*&#123;&#125;_&amp;+%#+@&amp;!&#125;#%]#)@&amp;__&#125;@&#125;)&#125;))*]*_</span></span><br><span class="line"><span class="string">#)$&amp;%%)%$+#&amp;[(&amp;*&amp;^$*%@[)_)^(%^()!]!&#123;$$*&#125;(]&#125;#_)&#125;+*&amp;&amp;$&#125;^(@)$^+*+%*(]+&#125;_!$%@&amp;%@_&#125;*[</span></span><br><span class="line"><span class="string">*[*$$@&#125;@_![^]+_&#125;!&amp;_&amp;&#123;^+!@&#123;&#123;^@&#125;&#125;_*))%)]]&#125;#*[*@+@#^+[+(#)]&#123;_&amp;&amp;%@$&amp;$$@&#125;*&#125;!%_!^*((%[</span></span><br><span class="line"><span class="string">^*!_($&#123;)(_+)!))$&amp;!*%^#@!$&#123;($*)^)@+@+*&#125;%(&#125;@(+@#^%![([%*)@@)++*!@&amp;(+[$_*^$&#125;%)&#125;)^)^</span></span><br><span class="line"><span class="string">_+[&#123;__[@(&amp;%!)^!^^@&#125;![&#123;&#123;^]$!(]!&#123;&#125;!*^)@)_^$][#+&#125;$[(])]&amp;+@^_[]@^@&amp;^$]$&amp;!@_)[$$[(_#)</span></span><br><span class="line"><span class="string">+^&#125;)*$%&amp;!#)!)&#125;*[#&amp;@!_&#123;&amp;)[&amp;@*@^#_(%!*]%#!#)(^[^@[%)&amp;!+]#$&#123;%&#123;&amp;#&#123;+^^___@+[&#123;]%&amp;!#((#</span></span><br><span class="line"><span class="string">@@^&#125;)&amp;)$@[@*&amp;#$&amp;+*!)]*+%#]$%$(&#125;&amp;!#&#125;*[))(]@#+_%_#]&#125;&#125;+(^[_)&amp;##&amp;^&amp;)&#123;[#&#123;*+#)&#125;#!!&amp;#!&#125;</span></span><br><span class="line"><span class="string">+*#(&#125;@^(+^+[^(]]^&#123;*&#125;&#125;_^&#123;@&amp;+(&#125;(+)%+&#125;[!*@)#&#123;&#123;#&#123;#&amp;_&amp;$*+&amp;%[_!)($([+%$^$!)%]%&amp;^[^@@%+</span></span><br><span class="line"><span class="string">(*(*#_*_](@!$$#&#123;&amp;#*!)_@#&#125;)_]^$$^)[^*!*@!#&#125;)])&#123;&#125;&#123;^&#123;@)#&amp;&#125;[^^])!$^$&#123;^$$#&#123;]^&#125;#_*+!%&#123;</span></span><br><span class="line"><span class="string">^!+@#@[)@&#123;^)&#123;&#123;])#((!(@!%&amp;$%#+&#125;#&amp;!^&#125;+(#()^)&#123;&#125;]&#123;)!(%)^#&#125;#)!*+&#125;))+(+(&amp;&amp;[+%[##*$[)&#125;]</span></span><br><span class="line"><span class="string">_(@&#125;(^[&amp;@)^&amp;&#125;#+&#125;&#123;#(!@$@&amp;*@+&#125;%(@)]!#_#)&#123;^%^%_[&amp;+[(&amp;&#123;^[**@^(&amp;]+!#(&#125;&amp;%]_^_&#123;(&amp;**$@*_</span></span><br><span class="line"><span class="string">&#125;&#123;&#123;$&amp;)^##]()_&#125;_&#125;])@$[$]&#125;%&#125;(^[^&#123;(!%[)$[]^[&#123;+(!&#125;%]^#&amp;#!*^%)^(&amp;])%!#($[+^[($%$&amp;$[(]</span></span><br><span class="line"><span class="string">(+&#125;%$*@+&#123;)&amp;]@+_[_]!!^^&amp;#_&amp;(^$[*&#125;])%+&#123;(@$$+_&#125;%)&#125;^)(&amp;#)_(()!@[]&amp;*++^]#$)!*]*+)^$[(</span></span><br><span class="line"><span class="string">&#123;&#125;@*^[@)@![+#^$!%$!_!+_^*@$@@@$$+[$+&#125;*)&#125;#&#123;))&amp;)]^@($[__+%&amp;+__&#125;$_&amp;#&#125;[#&amp;[)&#125;^^]&#125;&#125;]]&#125;</span></span><br><span class="line"><span class="string">!*&amp;^%]+_@#+[[@_%+$!@$%!^)*^&#125;(+&#125;$&amp;&amp;!!*_[&#125;+@*@)^_%]]$%!&amp;%*+_[&amp;![&#125;(*!&#125;!+(*+[#&#125;&#123;_)&#125;*</span></span><br><span class="line"><span class="string">&amp;&amp;!]+++^^#&#123;#__$@&amp;([)*&#125;]%$+@##&#125;[&amp;[*]_&#123;*@]%&amp;!)$&#125;@&amp;&#125;!^)&amp;@$+@#&amp;!%#+*%[*[]$)##)##_+&#123;&#123;</span></span><br><span class="line"><span class="string">$@^)[($^&#125;@%&#125;(&amp;&amp;)_&#125;$%&#125;&amp;&#123;$)@[+!&#125;+^]+&#123;$+$(&#123;_[)@*)&amp;!&#123;&#125;+[$*&#125;#!&#125;@_&#123;&#123;(]]@*%*)]%_&#125;%[&#123;&amp;$)</span></span><br><span class="line"><span class="string">*_![&amp;()!%]@[&#123;[@%_)$$^#+$)_$]+_*_&#123;%&amp;&#123;*__#_*+^_)$[%&amp;@&#125;&#125;##+(&#125;&#123;%#+!%]!(&#123;$+_(&#125;^@^#_@+</span></span><br><span class="line"><span class="string">!($(#@)*%&#123;]*+$++)]&#123;)&#123;&#123;@#&#125;%)^]#&#123;&amp;)&#123;^+]+]++&#123;_)&amp;$*+&amp;][&#125;&amp;#^^&#123;__&#123;))^^&#123;&amp;@&#123;%+][[&#123;*!_!+$</span></span><br><span class="line"><span class="string">(&amp;*&#125;]&#123;%&#123;#!^!**+&#125;[(&#125;^&#125;!%)&#123;(!&amp;#^[+![*$&amp;$&#123;]^(])#&amp;[#](&#125;[%%*$&#123;[)(*@_@_(((+@((&#123;]%#&#125;)%)</span></span><br><span class="line"><span class="string">#&amp;^#*&amp;+$)&amp;($]!+]&amp;^$@)#*^_^]&#123;#%)*_@^!_+*+*&#123;](*&amp;[&#125;*[[]#*%!*(&amp;!(@)[))!%%)&amp;@_&#123;&#123;!@(&#123;#</span></span><br><span class="line"><span class="string">!_&#125;![($%)&#125;__*&amp;%(^_&amp;+)&#123;_#]&#123;_!]&amp;(@^&#123;[#)%)(++&amp;&#123;&#123;^&#125;!^&#125;&amp;%$#%_&#125;_!($%]$&#125;_()&amp;&amp;#&#123;))$(%*&amp;&#123;</span></span><br><span class="line"><span class="string">([^@+^![&#123;@%_@@@!(%&#125;#@&#125;)#_)&#123;@__^@_[_!^$(#!^^(@&#125;]+$&#123;)]*_^%@$%$(_^]@_$+^_!#&#125;(]%+%[@</span></span><br><span class="line"><span class="string">@)][!!*((]&#125;^(*([__#*#&#125;%$!]+&amp;_[&#125;*@(@^()_*]%&amp;%)&amp;[)&#123;((@*%%+)@$+_+&#123;]^$+&#123;%^%&#125;@[*_$&#123;]!</span></span><br><span class="line"><span class="string">[!^%%$+%*%&amp;&amp;!!&amp;+^])&#125;&amp;^$$!*&amp;(#)&#123;&amp;^&amp;[$&#125;#*&amp;&#125;%#(&#125;@@_*&#125;*(&#125;]_*&#125;%*]+&amp;)&#123;*&#123;_&amp;^%+]$)&amp;($!!_</span></span><br><span class="line"><span class="string">#(&amp;$*!@^*[&amp;#@(#[&#123;]&#123;%@!@[#@@[+%_&#123;^[]%(]#&amp;^$&amp;+&#123;&#123;$+*@+_(&amp;^&#123;^!)&#125;+^$$(*)$&#123;(%@_&#123;!&#123;&#125;(#(</span></span><br><span class="line"><span class="string">&#125;&#123;#$_!*^)@&#125;&amp;%*^_&amp;^)])[#!&#125;##^%@]([[&#123;@_*&#125;$^(&#125;%&amp;+&amp;&#123;[@#))&#123;$[+)&#123;@&#125;$]&#123;)@_)&#123;&#123;^($*_[($+@</span></span><br><span class="line"><span class="string">@@@$]&amp;@&#123;_#[&#123;!&amp;$!%##+&amp;(%@)^_&#125;+^%#@&#123;^&#123;%[*%&#123;&amp;#[&#125;(^&#125;%((@#&amp;_)&#125;^][#&#125;)[%%&#125;(_)_+*%&#123;^*&#123;&#125;_</span></span><br><span class="line"><span class="string">&#123;%(#+(@%($*&amp;%*##^+)&#123;([%[_&amp;#(]*@+_!^_&#123;%&#123;@%_&amp;%&amp;[[$%+)@&#123;[&amp;(_@%+*&#123;#_*!%+&amp;[*(+&#123;+*$&#125;)+</span></span><br><span class="line"><span class="string">#%[^&#123;#(_&#125;!+!$)%@&#123;&#125;&amp;^#+_](]+)&#125;_([*@[^#$@&amp;&#125;]&#125;*!@&#123;@[++$++(&amp;]_&#125;@&#123;+&#125;#%)&#125;+&amp;_$[&#125;%[%&#123;+@)</span></span><br><span class="line"><span class="string">#@%&#123;&amp;_@&#125;)$&#125;*&amp;!$&#125;@^&amp;[&#125;%*!$(]![&amp;@+[!()&#125;&#125;^&#125;*$](+*++&#125;*)(#[#$+&#125;@#%&amp;(+($*&#125;$]%]$$]$*%%%</span></span><br><span class="line"><span class="string">$(+((!))&#123;*&amp;!@_%((^$&#123;&amp;($@+[!!])&amp;!#%)_$[&#123;$]&amp;[)@[$[^)$^#^)@^]%[&amp;&#123;*[_&#123;&#125;&amp;$)_)+&#125;$#&#125;&#123;$(</span></span><br><span class="line"><span class="string">#_)&#125;&#125;@^$&#123;#%)@@[]]&#125;]%$_#&amp;&#125;[@%&#123;&#123;(+&#123;@%)_^%&#125;*^&#125;$#]$!&#123;)#])&amp;#^(]]#&#125;^^*])*#$#@()^!)$$!@</span></span><br><span class="line"><span class="string">+_[)*^_*^+(_])&#123;*!^&amp;][&amp;!])$_@@]!@*!*$^+&amp;@__##^##[%_^[@)_$%^^_&amp;+@^&#123;(&#125;#]+#&#125;$[^!*(_^</span></span><br><span class="line"><span class="string">[[^#(%%([#)$&#123;*]&#125;#$+))%&#125;&amp;#_](&#125;$+*@]#]**$+@&#123;&#125;&amp;&#123;*[&#123;%*[@^)+]([]&#123;![_&amp;&amp;!_&#125;#$&#123;%@]!(+%!&#125;</span></span><br><span class="line"><span class="string">%*#&#125;![%&amp;$]^!+(&#123;&#125;+])()[]_$(^#)*^$&#125;$^)%]&#123;&amp;#^)!^$&#125;!_&amp;++#&amp;_[&amp;!!_#$!_%#&#125;[+)+@&#125;^_)&amp;&amp;__</span></span><br><span class="line"><span class="string">*&#125;&amp;+*&#123;^[!#!&#125;&amp;+_(+]_#*+^@*(&#123;%((])&#125;%%!%+#^_&amp;^&#125;[*#&#123;])()]@#%@^$[$^!_)!@_@(&#123;@#&amp;@%$+)]</span></span><br><span class="line"><span class="string">_^&#123;+#$@^*^&#123;%]]^&amp;)&amp;&#125;!_&#125;[@[(&#123;[+)&#123;+%%+&amp;_@&#125;@^&amp;#$#_[*_[%&#123;)&#123;_[]*!$]^__&#123;)!%[#^_*+!)&amp;&amp;%@</span></span><br><span class="line"><span class="string">]&#123;&#123;&#123;%[@_%)^&amp;]&#123;#($]&amp;&amp;$&#125;#%++)*+&amp;#__&#125;&amp;$*&#123;]@&#125;@&#125;&#123;&#123;+*&#125;!&amp;&#123;&amp;#&#123;[++*)&#125;&amp;&#123;%*)!)_@@&#125;%#@@+&#123;)[!</span></span><br><span class="line"><span class="string">$+**(@!&#123;%!@^^]^#(@&#125;[]@]#^[*+*[^!*_&amp;))*_&amp;((]#&#125;&amp;^$^!#+[)(#+(&#125;[^(%&#125;[$&#123;*)[@(&amp;^^*&#123;&#123;%$</span></span><br><span class="line"><span class="string">^^_)&amp;([^()^!@)!&#125;&amp;$@([&amp;%@$&#123;[$%#@&#125;+@_*!&#125;&amp;]%]#_[]([%]+&#125;&#125;&amp;[&amp;![_&#125;*+)&#125;&#123;&amp;*)@*)@@$_^]@^%</span></span><br><span class="line"><span class="string">)^%(&#123;&#123;%_^_+@%%+#[#$$@#_&amp;%##&#123;+)+$%*((!&#123;&#123;&#125;&#123;]+%%+^_!+&#123;@]&#123;^^+^&#125;&#123;[_([_^)!%_[+%@!%!@(+</span></span><br><span class="line"><span class="string">@&amp;$^$(+^^]$$**&#123;^&amp;*&amp;!_[_&#123;_)*[&#123;@![@%+@)&#123;*&#123;&amp;&#125;%_%(%(@+&#123;!&amp;)![$$+(&#125;^)[]##$^($+[#]&#125;!_#&amp;</span></span><br><span class="line"><span class="string">_^]!$_)[]+@)_*@![_($+!@[#)&amp;]!+&amp;(_*]]%%_@*@!&amp;&amp;_!&#123;^*#&#123;+[%$$##[]@&amp;[#&#123;$^%@&amp;$([&#123;+_#&#123;(</span></span><br><span class="line"><span class="string">&#125;)_&#123;&amp;&#123;&#125;#_+&amp;@$)&#125;#&amp;]$(&amp;&#125;+&amp;+!&amp;_[]%@&#125;[@^]&#123;)!_*+$!$(&#125;+*%&#123;!*)]&#125;@%!*&amp;!&#125;([*+]*%*)_%&#125;(@^]</span></span><br><span class="line"><span class="string">%&amp;[^!%!%]$!((+&amp;%%@)!%_!+#^&amp;&#125;&amp;$*^%%)#%#_%+[_$^#)%#@&#125;)]%^![^]*$&amp;%^@)$+##&#125;]#*]&amp;$*()</span></span><br><span class="line"><span class="string">&amp;)))+&amp;^[_&#125;()^@@!)&amp;]&amp;&amp;!$*!#+#()^&#123;]__@!+%((&#123;[__&amp;**]&amp;!*(@+!&#123;^@^*[!)@#))$!]^[%&#125;]#(![</span></span><br><span class="line"><span class="string">*)$_($))&#123;@%&#125;&#125;*+*#&#123;]&#125;&#125;@)!)&#123;$+$^&amp;$!]*)$_**(_+@)+&#123;)![!&amp;+&amp;_#[_$%^+&amp;^&#125;&amp;**&amp;_*)]+)]]%&#123;!</span></span><br><span class="line"><span class="string">]*$[$^$^+%&amp;*!&amp;[(%(^+&amp;&#123;+&amp;]+*&amp;$_!+&#123;)#]#&#125;&#123;+***)+&#125;&amp;@%!^&#123;&#123;@+#^&amp;*$)&amp;^_&amp;!@!#%^%!@])&#123;&#123;+]</span></span><br><span class="line"><span class="string">@)$%&#123;&amp;+&#123;@)+)&amp;^&amp;*(!(%^_&amp;+]%_)]_+!)@!)$$@&#125;(@@$#^[%$(&amp;@[(($&#125;!&amp;^#]()[%)&#123;]@]$*[&#123;)&amp;%&#125;)</span></span><br><span class="line"><span class="string">!+!&#123;%[)[(%$#[*)]@!^&#123;#^@&#125;&amp;]&amp;([^*&#123;$#$&amp;%#@][)^+!%@]]]$$(!$@[&amp;]&#123;%%!^&amp;(+&#123;!&amp;#*_]$@_$^]</span></span><br><span class="line"><span class="string">$*&amp;&#125;_&amp;$!]%+[)&#123;+&#123;@[(&amp;!%@&amp;$*@()&amp;!@&#125;@^!#]!)#^*&#123;)^&#125;&#125;+@[[!_&#125;@![$]!((&amp;+]&#125;&#125;@%^]@[]])%_&amp;</span></span><br><span class="line"><span class="string">_@*!^_%&#125;@[$)#%($+!]!)(!&#125;]+%!+*&#123;%]$^*][%(&#123;]@][&#125;!%_*)^]&#125;+)[[)(!&amp;&#123;]$(^%#_$!#!#!&#125;&amp;#(</span></span><br><span class="line"><span class="string">*!]((**^))(&#123;^]&#123;#@&#125;$_$^*)$+)!]&#125;()^+^!_&amp;&#123;][%%^#&#125;&#123;#&#125;_)&amp;&#125;*&amp;@(@%[##@*(&#125;+@$_#$%)_&#123;(!$[</span></span><br><span class="line"><span class="string">^!!+)*^^])[+&#123;&amp;++&#123;[[##$**]]%^]_+*%*@%!&#123;)@%(&#125;*!#]@$]^@)(%$$+$#$[^_$&#123;)&amp;_)!&#125;&#123;[+&amp;[@&#125;&amp;</span></span><br><span class="line"><span class="string">(]!@^](!![@#&#125;%@][&#123;*&#125;$*!]&#123;(!#&#125;)(&amp;^^@$&#123;&amp;)]$^(#&#125;&#123;***%&#123;!&amp;[%)!#%(%+(_@&#125;^&#125;*&#123;^!$&#123;[)#&#125;_#</span></span><br><span class="line"><span class="string">%[_!#]_+(!%[&amp;]+^%^&amp;![^+##*&amp;&#123;_*[($#[@$%&amp;$&#123;&#125;_[_%)_*_&amp;&#123;#*#[!)&amp;_#^&#125;&amp;&amp;@#))]+&#123;(&amp;$##**+</span></span><br><span class="line"><span class="string">^_*($_^)]#!%&#123;]_[!@(&amp;$&#125;($!_#&amp;!_&amp;^%&amp;((&amp;#*&#123;&#125;[$&#125;&amp;@&#123;&amp;(]#&amp;_+*&#125;&amp;)#^&#125;([&#123;$&amp;(]^@@&#125;]%))(&amp;@[</span></span><br><span class="line"><span class="string">)$)@+[(&#125;(*%^%$](_)#*_+*%#+&#123;&#123;&amp;^@*!@&amp;([#&#125;&#123;+_#&#123;(@&amp;_%&#125;(]]&#125;^_&#125;+^+@*)_(&amp;&#125;]$($&amp;+@]&amp;[!@&#123;</span></span><br><span class="line"><span class="string">&#123;)*]%(&#123;&amp;%^@))_)&amp;(&#125;*((_]&amp;$+&amp;(&#125;_)]&#123;$^+]$+&#125;&#123;[#[#$%]#(%+_(@*&amp;!]@)&amp;*$&#123;@#+&amp;_#^_&#125;+&amp;@*&amp;#</span></span><br><span class="line"><span class="string">&#125;&amp;[)&#125;$&#123;@([!+]$&#125;@%(%$_)&amp;#&#123;[]@_*@$&#125;$+!$)@]%@*&#125;%^&#125;&#123;**#&#123;]!$]&#123;$%%))!&#123;((^)[&#125;+]&#125;&#123;&#123;&amp;*$)_</span></span><br><span class="line"><span class="string">_[+%&#123;&#123;@)@(!*_]#]((^+!!&#123;_&amp;]^%[^!^)%]$]#_^%$^#&#123;&#125;^&#125;+[]&#125;@$)&#125;*@$)*&#123;![&#125;)&#125;([_&#123;_*&amp;[[&#123;&#123;+#</span></span><br><span class="line"><span class="string">&#123;&amp;@[@+(*@(&amp;&amp;^%*[_$&#123;%&#123;^&#125;[[_]*)[!%%)$)])]^#+&amp;&#125;#[^(&#125;]&#123;[$%^^)$$&amp;_(_#)@_)!#&#125;*)+]&#125;&#123;!!%</span></span><br><span class="line"><span class="string">&amp;@&amp;!##&#125;_]#[*^^&amp;&amp;^$!#^%&#123;%&#123;#$%]%&#125;&#123;%^_+&amp;%_]#__*&amp;*&#123;%!(]#)^*+&amp;@#[$)&#125;&#125;&#123;%^&#125;!#%)[&#123;@!&#123;&amp;[^</span></span><br><span class="line"><span class="string">$]$++##!$*((#[(+[&amp;)&amp;^&amp;&amp;&#123;&#123;&#123;)+##)_$&#123;&#123;(!^*&#123;)^!)&#125;%&#125;@]#*^%_@@*#[*(_#((_&#125;*&#125;]&amp;+&#125;$+)[$)@</span></span><br><span class="line"><span class="string">@&#123;!%#&amp;&#123;+$]#%]!*[&#123;$![%(^!$$$$+&#123;!@!#+&amp;]%%^_(@&#125;^*@%+&amp;[!%$[&#125;)($(([&#123;@#]*&#123;_[@#&amp;(![&#123;$_)</span></span><br><span class="line"><span class="string">$&#123;([*!&#123;!)(%&amp;]*%@&#123;^_%[__#%[^%(&#123;[][^&#123;&#123;$%!$[_$@$&#123;]!(+*@&#125;$((_%&#123;$$(]](&#125;##[!&#123;@[@_+))*[</span></span><br><span class="line"><span class="string">^&#125;%$&#123;(@^]#%*^#+&#125;^]&amp;#$&amp;&#123;&#125;[[_!)[$[&amp;)&#125;#[$&amp;%])_^)[)!_&#125;&#123;@^^###_#(#!*##[*_+@(!$%@%$)#_</span></span><br><span class="line"><span class="string">@%%&#125;@$*&#125;(!(+_[&amp;^([]%&#125;(%@@]%_&#125;#(@&amp;$!]$_@^!@&#125;$_&#123;]@#($)$)!&#123;*_%$)]#%]$)_^&amp;@($*&#125;^&amp;_[^</span></span><br><span class="line"><span class="string">)%&#125;%]&#125;&amp;]$]*#^&#123;]%^$&#125;&amp;$(#&amp;+[[][!@&amp;&#125;$]_](&#123;)(#!@_((^@@%%_]___%]][&amp;&#125;&#125;)]&#123;%%&#125;[#@__+%)(%</span></span><br><span class="line"><span class="string">&#125;_]*$$*_@+])&amp;&#123;$(+*+]!_[#&amp;_)&#125;&#123;#)!^^&#125;[%^+*&#125;)!(@&#125;*@&#125;$]))((@$(@[$_&#123;@$^^@^*_%@%]_++(#</span></span><br><span class="line"><span class="string">$$)*@&amp;[%@((#**]*][&#123;(@+#%_+_++!&amp;[$%&amp;#_#!#&#123;_(^^@[&#125;@&amp;#$[[*!]+^&#123;$]!&#125;+[&#125;$!$!&amp;#$__$%]!</span></span><br><span class="line"><span class="string">@]_$&#125;*&#125;____$%[)$]#++#!+*&amp;&#123;$$!@%^$*)&#125;&#123;]&#125;&#125;*)^(^%!]+$%_@%&#125;$]++($#&amp;&amp;[](&amp;^%&amp;&#125;!(]@@!)_</span></span><br><span class="line"><span class="string">&#125;%%*%(#+&#123;@@_&amp;[$+*&#123;]&amp;&amp;$!*&#125;#$$[]%+&#125;@_&amp;)[@+!%&#123;@%()[*&#123;@*[&#125;&amp;%@]#@*$$&#123;_^&#123;&#125;^&#123;]]$_+[+)(&#123;</span></span><br><span class="line"><span class="string">)@$)&#125;^+#[$@!+&amp;(@*^&#125;&#125;@&#123;!#[][#[&amp;)%%^#]_$&#125;&#125;)_@&#123;$&amp;*&amp;)+^#%&#125;&#123;__)&#125;#%[[%_$[[)&#125;()()^_#$%!</span></span><br><span class="line"><span class="string">*+$&#125;&amp;_)_@!&#123;(&#125;*&#123;[&amp;!)$[&amp;@^#(@(!#(#!*_&#125;!++#&#123;#(]&#125;!))]!&#125;(#**(&#123;]&amp;&#123;)$+)+&amp;$[^!&amp;&amp;[&amp;!^[*(^</span></span><br><span class="line"><span class="string">#()#![_$)^@+@)[!_(&#123;(])+&#123;)@$[$_&amp;+*$%)+[[][+]@^&#125;**((!%!$+&amp;#][_#&#125;$)_@!&#125;[*%)$%@#&amp;(@(</span></span><br><span class="line"><span class="string">^[&amp;[&#125;#]_&#125;&#123;)#&#125;_[#]+&#125;@$[(%+&amp;$&#123;[[+%&amp;%]!&amp;*(^(#)%%[+]@[+]#&#125;#@#]&#125;+_+&#125;__[^$#+^)$$!^!)!+</span></span><br><span class="line"><span class="string">$&#125;##]]*&amp;#[@()!)#([]@#+)^+&#123;*&amp;$_@_([[]^@_)+$#+)]*@!!]&#125;)&#125;__!@##&#123;[(&amp;%![[)[*)&#123;@^[@(]+</span></span><br><span class="line"><span class="string">&amp;]&#123;#%]__@_^$@&amp;+$$@![@_#@[!%_!*&#123;&#125;&#125;^%_]&amp;$$!&amp;&amp;$#^^*[&amp;!#%!&amp;&#125;%&amp;&#125;[^$$*([&amp;(_*&#123;&#123;%&#123;#&amp;&#123;&#123;)&#123;</span></span><br><span class="line"><span class="string">!^$(()[*&amp;&#123;]&amp;&amp;_&#125;]+]#[[^]#&#125;+#+($^&amp;$[^!+$^!&#125;+*[]%+]@]*^)&#125;(%$&#125;(+)^#[@&#125;&#125;[*!@]*[&#125;[]^&amp;_</span></span><br><span class="line"><span class="string">#)]*%_&#125;[&#123;%[%!^][^^)^(_@$!_*)$$&amp;&amp;#]^##[)[#$$$_&amp;$((_)[&#123;+%[**^#&#123;)%#^^_[]_&amp;(**_(&#125;(&amp;&#125;</span></span><br><span class="line"><span class="string">)**$&#125;#&#125;)*@$@*$^(]+)#^$]!^&amp;]$#!#$+](!%(*^$@*!_]@_@)&#123;+(%*^^&amp;*@]%+_([^^%&#125;&amp;%!#@_(&#123;+[</span></span><br><span class="line"><span class="string">)[^[*+$&#123;&#123;_)*@))&#123;(&#125;[&#123;&#123;&#123;(@&#123;$_&#125;+@&amp;&#125;^^%)*@*!&#123;(!%#_&#125;!&amp;++%&amp;+_(&#123;!&#123;!][)]!&#125;!%[&#125;_&#123;&#123;+@[*([[</span></span><br><span class="line"><span class="string">[++#[^%_[*+(%)^@@+_+&#125;(#*@!))!%@(!#_*_&#125;$@!$)^($#]([@*)$#*%*_&amp;_!%%[&#125;_&#125;](#$&amp;+)_^[[$</span></span><br><span class="line"><span class="string">_][[#@%!_&#125;)!]@$[&#125;&amp;&amp;#)#_%[!%]*&amp;)###&#125;*#!^&#123;+@[!%^)[%&#123;&#125;__]+%%&#123;&amp;)&#125;!$!&#125;&#125;*&amp;&#123;&#123;#++&#123;_@&#123;(&#125;)</span></span><br><span class="line"><span class="string">)@%&#125;&#123;&amp;]%!*#_#]+[][!+)[&#123;$!&#123;+*+($&amp;@%&amp;+)&amp;#_&amp;(@&#125;&#125;&#125;&#125;(*$+_((!!$[+&#123;]@])_($($&#125;]]+&amp;)#][@_</span></span><br><span class="line"><span class="string">@#]&amp;&#123;]$(%&#125;$@^&#123;$@]*%]_*&#125;#&#125;&#125;!]^*&amp;&#123;+&#123;_*$(##&#123;&#123;_^%#!&#125;+^!$_&#125;^)^&#123;]+*@_&#123;&#123;&amp;+)^$[_[[!+)^)^</span></span><br><span class="line"><span class="string">!#]](&#123;_*[%((+(+%&amp;+&amp;$[]++&#123;!&#123;)&#125;)_*^&#123;[$^+(+%(&#123;!(@&#123;#(^[(%&#125;*$_**[)+#*&amp;*[_%&#123;*@)_&#123;%(@&#125;#</span></span><br><span class="line"><span class="string">_+@+_!]#]([[*]&#125;]&#125;#]$)[^+%&#125;+]#@%@&amp;%^%@$(%(^+@$^_$_((*&#123;[&amp;%&#123;&#125;^$[_&amp;_&#125;!%(^$[+%[[&#125;!@@#</span></span><br><span class="line"><span class="string">*&#125;+^@)&#123;^#%&#125;]&#123;!#^]]!#&#125;&#123;&#123;$][&#125;%[*)#^&#125;@![$@%!&amp;)^]^(&#123;![#&#123;$*@*%@+_@%@%*)@]+%[[++$(#&#123;@_</span></span><br><span class="line"><span class="string">)]$%]*[*$(&#125;&amp;&#125;%)&#125;&#123;&amp;(_^&#125;&#123;_*[^&#125;$(+*&#125;(!_&#123;[_!@*[+&#125;*&amp;+^^]]@@&#123;^+]^%&#125;!^&#123;)_&#125;!%%&amp;@)$]_(*@@</span></span><br><span class="line"><span class="string">!^]&#125;()*+&#123;&#123;&#125;$@[&#123;)+%&#125;[&#123;)$&amp;@[&#123;*%%@(%(@[+%@_^%$+#@[^&#123;*%[++&amp;%*(&#123;_]])(@!%!#*$%$&#125;&#123;+&#123;+&#125;[</span></span><br><span class="line"><span class="string">&#123;&#125;)$+)](^&#125;&#123;_&amp;+%!&#125;^&amp;[)_%&#123;(_#[&#123;[[!$*&amp;*&amp;!%*%+)&amp;+++!^#&amp;$%@&#125;)$^&#123;(+&#123;)(@&#123;(@]!^!%_)&#125;*#$$</span></span><br><span class="line"><span class="string">&#123;&#123;&#125;&#125;^)@[$]^%*#])#(]%&amp;)]+&#125;_*&#123;_&#125;&#123;*!]+]%$!!)&amp;%#](*^[)]&amp;_&amp;[&#125;[&#125;$&#125;*&amp;^&#123;@&#125;*(#*&#123;+!%)++*@_</span></span><br><span class="line"><span class="string">%]&#123;#@+_&amp;$^&amp;&#125;_&#123;(#)*!&#123;%+#+()+]&#123;&amp;[+#]([&#123;%^_)+&#123;!)+()!%*#__##^*!_+((%@_@!+[&amp;![_*[$*&#125;#</span></span><br><span class="line"><span class="string">&#125;]_)^&amp;&#123;]#@(&#123;&#125;+_&amp;!+#_([+)!#[%#&#123;[&#125;+&amp;+(!%*&#123;&#125;^#)%)&amp;^()^&#123;((^^((%&#123;#^&amp;!%_%*+%&#123;)$)^_&#125;$][</span></span><br><span class="line"><span class="string">#@^%+(!&#123;$&#125;+_+]!#^[]_&amp;!&#123;]_]]]&amp;($&#125;^)&#125;&amp;*&#125;&#125;(#(%&amp;$%*__&#123;)!])[(%)#&#125;)$*$_]^($*[^&#123;+(^&#125;&#125;&amp;[</span></span><br><span class="line"><span class="string">](&#125;&#125;^](^&#123;%!*[[[[_#&amp;)_(#&amp;$[#&amp;&amp;+&amp;^]$])^&#125;((#%_)+%]&#125;@]*&#123;*(&#123;[&#123;$&#123;!+@[@_%]!(&#125;!$%]*%[&#125;_%</span></span><br><span class="line"><span class="string">&#125;&amp;_]*_@$!&#125;&#123;&#125;(]#)_#)%[)!+!$&#123;&#125;(&#125;_(&#125;^@&#123;_@!#*_()#$!_]%#@&#125;[#&#123;@)!&#123;+&#123;!&amp;(]&#125;][_#%*^#%!&#123;!!</span></span><br><span class="line"><span class="string">*%&amp;[$$]+@)&#123;!&#123;($$*!&#125;]&#123;$!&#123;+^+*%%%!&#123;%^$(!$)%^&#123;(&amp;)!&#123;!^^]#$]%#^@!^(]$$^!^]@&amp;*&#123;)_())!(</span></span><br><span class="line"><span class="string">+)]!(*@#%$&amp;)]]*))%$!#$@&#123;]$#^@]__!*]^&#125;#(#+$_#+@$+]&#123;)]&#123;(]]*__%&amp;%$_^+)$&#123;$$&amp;^&#123;%^%)&#123;%</span></span><br><span class="line"><span class="string">][(%_[])+!(&amp;][#@_%+&#123;##@($($#@&#125;#&#125;!(&#125;*+&#125;_(_[]+&#123;^@@&#125;@@^(&amp;@[(+(&#123;+$^^_%*!##]%]#&#125;$(&#123;)[</span></span><br><span class="line"><span class="string">[@%**&#125;)&#123;@&#125;&#125;[*!@@)^]*+%&#123;!&#125;&amp;+^*]&#125;&amp;#&#123;*[&#123;&#125;]]^#!%_@!&#125;*+(#*$@@&#123;&amp;&#125;_$^^[_[@[%&#125;]@&#125;&#123;])!+*@</span></span><br><span class="line"><span class="string">@)(&#125;&amp;*@+*$$*@&amp;&amp;^](+#%+)+@*]_%&#125;*^@*_!#@%)$![*&amp;#&amp;[]&amp;%@&#125;_&#125;$]&#123;&#125;&amp;^&#123;%+&#123;&#125;)#%%$[+*#!@&#123;*[</span></span><br><span class="line"><span class="string">%&#123;#)&amp;_%^(@&amp;)#$#*@+*)$)+]_+#[$((@%[%&amp;!%#!&#123;_^^]&#123;]@%^)&#123;(+!)#_^!_[+!*&#123;*)&amp;&amp;*&amp;]#&#123;[[^!&#123;</span></span><br><span class="line"><span class="string">_*]#*_&#123;$(!(&amp;#@%&amp;+_$&amp;&#125;@^+]+[(@&#123;[))**![&amp;)*&amp;#]]]![*+[_($!(*^&#125;%@%^)^]([_%!)*)_&amp;+!^#]</span></span><br><span class="line"><span class="string">&#123;!!!]_&#125;#&amp;+^&amp;)&amp;[^@#)[[&#125;&#125;]@+$#_^@&#125;*%#++_)_&amp;*)#*&#125;][&amp;@*_%_!#*^!&#125;[[&#125;]*&#125;&#125;+*_&#123;!#%(&amp;&amp;)+$</span></span><br><span class="line"><span class="string">*#+&#125;+^)&amp;)^+&amp;&#123;)^$*&#125;&#125;%@^+@%^)&#125;!!%#+_@*(*]+)+_@#*&#125;&amp;%&amp;*&#125;[#!&#123;@@%&amp;_$)[]$#!&#125;$&#123;_+!(&#123;]$&#125;[</span></span><br><span class="line"><span class="string">&#123;!!@(+&#125;)(%!&#123;+#+$&#123;&#123;&#125;)(@*+@@&amp;&#123;@&amp;+&amp;$&amp;&amp;[&amp;&amp;&amp;^###![)&amp;#))@@_*!([^$$%$#[&amp;[&amp;+%&#125;$*)[+$%!*%</span></span><br><span class="line"><span class="string">@*&#125;)[_+@!]#$^^@@$&amp;$)!#[!#[_@@@]_*$&#125;^^[]@_&#123;(%#*[^[#[[&#125;@&#123;__+@!#&#123;[&amp;)@&amp;)^#()$^+*[@!+</span></span><br><span class="line"><span class="string">&#125;%&#123;^*)@[&#123;#)%)]&#123;_*__^%!@)#[![_&#125;[&#123;(&#125;]@[)]%(&amp;^$+)%_#&amp;_)])[(&#125;(!&amp;[(&amp;(]@@$!&amp;@&amp;!&amp;*!_&#125;&amp;!</span></span><br><span class="line"><span class="string">#+&#123;@$^$%#]$([**&amp;_&#123;)&#125;#!(((@$#%&#125;)+#++(__&#123;%#&#125;+&#125;!)%#^**+!&#125;%+&#125;&#125;)#&#125;[@^**!*_+_++&amp;&#125;_^_**</span></span><br><span class="line"><span class="string">&amp;^+_(&#125;@&#123;((][#&amp;)*__!$#(@_^&#123;&#123;)&#125;_^$[+)!&#125;@&amp;*$$^&#123;&amp;&amp;()%[+!&amp;#&amp;^]&#125;&#123;%&#123;!@&#123;[&#125;$_#[#$[(_)&amp;%&amp;#</span></span><br><span class="line"><span class="string">&#123;&#125;[_(&#125;*$$)@!&#123;@]&#123;+&amp;!+#@*&#125;_]^[&#125;&amp;%&amp;_^^(&#123;&#125;&#123;]!![^&#125;+^(!&#123;+[%&#125;)@][&#125;]&#125;[#)&#125;]%&#123;&#123;%&amp;!#^#_^[+^</span></span><br><span class="line"><span class="string">@&amp;&#123;!+%&#123;&amp;$_#&#125;(*!@]^+!@+!&amp;$)++@[)^^##@+@*(&#125;))%))%&#123;&#125;%((!%_*]!^)(!$^[&#125;](!+)&#123;@++]]^%@</span></span><br><span class="line"><span class="string">#+(][&#123;!##&#125;^&#123;)$##&#123;*^+#&#125;$)+(*%)&amp;&amp;*[!]]^(**@&#123;+[^%^*)&#123;&#123;&amp;$&amp;[&#123;&#125;!]_$@]!#$@[(]^%&amp;%$]!%$+</span></span><br><span class="line"><span class="string">^*_%#&#125;%+[$^#!#*+&#125;_)!%+[)$%&#125;(@+**)(&#125;&#123;$%!&#123;&#125;!!&#123;^!@__&#123;+#+)*]+[@_&#125;+*^(&amp;^&#125;]]@)($(]&amp;_*!</span></span><br><span class="line"><span class="string">**#$_##%([*#%(*+^(@&amp;_((*)*$%%+_@])&#125;&amp;$%+*$$+&#123;#^&amp;&#125;[#$^*_][&#125;]@](]+#&amp;*[#+*%(&amp;*&amp;(%*[]</span></span><br><span class="line"><span class="string">^])^%]*+_&amp;&#123;)&#125;^!!@%$#*]*^&amp;&#123;[$^&#125;[$&#125;@%[%%@$+^]#)&#125;^&amp;&#125;)#)@]^&amp;+&#125;#!&#123;**+(@+&#125;&#125;&amp;^()$)#%)]_</span></span><br><span class="line"><span class="string">$()#&#125;$%&#125;@^_()+[!(!*($##%!)$])$+@*[&#123;)&amp;+)&amp;%+&#125;[[&#125;^_#&#125;#*&amp;(^)@[_*^[%$&#125;%)#)#!](+([%*+)</span></span><br><span class="line"><span class="string">$&amp;$!_]+&amp;)&#125;[_%[%(!!#*&#125;&amp;(][_@&#125;+@*+&amp;&amp;_&#123;_(#%(!!+&#123;&amp;&#125;_@$#^!#&amp;&#125;&#125;@[%_$&amp;]*$_^&#125;%)^_(&#123;][&#125;$&#125;</span></span><br><span class="line"><span class="string">#]&#123;%($@%%]&amp;)))$*^%+]^^&amp;&#123;*&amp;#[))]*(+]*&#123;[!_#[&#125;]&#123;_^%!_&#123;[&#123;%#]&#125;&#123;_#]&amp;^^^)+!^&#123;*_&#123;+[&#125;*#+)</span></span><br><span class="line"><span class="string">[_)^_&#125;_]&amp;![!+&amp;+_#@*%_#]#!&amp;^!*[#&#123;+%]&#123;&#123;]*%$&#125;!*&#125;$#$_[%&#125;)##&#125;&#125;_#&#125;%]_&#125;@*^]*@^(_)&#125;+^^!+</span></span><br><span class="line"><span class="string">*^]*([&amp;&#123;&#123;#%&#123;[&#123;&amp;@%)%+&amp;!^&amp;]^**&#125;+_!!_(#&amp;&#125;&#123;@@*&#125;(&#123;^&amp;!^*)^]%_**((@++#&amp;)@&amp;*%[]]+!$_[*^]</span></span><br><span class="line"><span class="string">+$!)(%[&#123;]&#123;((_&#123;*&#125;%+_$+&amp;_)^&#125;@@^*+!(_@($&amp;@()]]]&amp;!&#123;_++(^^_&#123;_[!$[*!%@(][(]_&#123;!(&#125;%[*!])</span></span><br><span class="line"><span class="string">!]%+@*+@#$^)^[^^)&amp;#&#125;#($*#&amp;)&#125;!#[*]%[&#125;#*&#125;_@(]&#125;+*]]^)_(%&amp;&#125;*^+%#*%&amp;&#123;^&#125;%(&#125;]&#123;$+)!*(&amp;&amp;&amp;</span></span><br><span class="line"><span class="string">+]$^@#_@[&#123;!+^)&#125;&#125;[)_([!%[&#123;(%)@)&amp;^*&#123;!)%&amp;)&amp;!$@]&#125;@([*(^#%@^&amp;))%*[[&#125;_((@&amp;)]+]&#125;&#125;_))(&#125;*</span></span><br><span class="line"><span class="string">!_&#125;&#125;]@#&amp;(&#123;_#@&#123;&amp;))$^@@*@&#125;]*+[*%)+[[&#123;&amp;!!^$($+]#$@)*%*_^&#123;_^%)__!&amp;$+#]#**)+*@+@%#]]&#123;</span></span><br><span class="line"><span class="string">*_[)+)*((]!&#123;@^!@]%(%@[]^%[&amp;$+^&#125;$$@&amp;&#123;_(!*&#125;$]%_#_!%*++&#125;_])]&#125;$@+&amp;#(]$*[+[)&amp;)([@+])_</span></span><br><span class="line"><span class="string">[+!%^#%)!#_&#125;]#]]_)]^**_^)^%&amp;$$)%!*!+@#*[^&amp;@^&#125;^[&#123;(@&#123;%(![]#&#123;&amp;%[$]))(&#125;[)^((&#123;_&amp;*#&#125;*&#125;</span></span><br><span class="line"><span class="string">[+(]+@)&#123;$(@!&#123;%$%)$+&#123;$!$$&amp;*^+&amp;@)%&#125;![)*]&#123;^%#(+&#123;&#125;![_&amp;[@]+!@*^&#125;&#125;&#123;&#125;)++_$&#123;_&amp;%!@((@]&#123;$#</span></span><br><span class="line"><span class="string">&#123;+@&amp;[&#125;^&amp;%%$&amp;())#!_##$!(&amp;@@*&#125;^[%@$^#*&amp;!@@&amp;_[(!&#125;+&#123;&#125;*&amp;+&#123;**$)&#125;])%()!_&amp;_)!*((^+%)_#[(</span></span><br><span class="line"><span class="string">_^&amp;!&amp;(%&#123;_%*[($])&#125;%[&#123;@&#123;&#123;^_[$&#125;@&amp;&amp;_)^()(&#123;%![#][(&#125;+&amp;^(]&amp;&#125;!*@#&#123;)]&#123;i]%_]%^(&amp;]^&#123;+_([)$%</span></span><br><span class="line"><span class="string">&#123;&amp;*[$@^&#123;(]@&#125;]%)(@&amp;&#125;&amp;)&#125;_@$&#125;&amp;]&#123;#$^&#125;@@&amp;[]#+!%^]@!]]$+$]#^_]&#123;](^*&amp;!%_!!&amp;&#125;$^&amp;#!&#125;++)_!</span></span><br><span class="line"><span class="string">^@]]*$*_#+$!^&#123;$&amp;[$_+#^@@&#125;#)(#*&amp;)$#&amp;+#&#125;+&#123;&#123;&amp;@$^%+&#123;++[&amp;&#125;#&#125;[*#]^^()+(#![]^$)^#*])%((</span></span><br><span class="line"><span class="string">*[)]#!]$]&#123;+([^)%@&#123;^_$!(*@&#125;#@&#123;&#123;^%@&#125;#&amp;##*!_&amp;^&#123;%$_&#123;_+%)#&#123;&#123;!$[&amp;&amp;]#^)+!]*&amp;]&#123;[!^)%&#125;&#125;*%</span></span><br><span class="line"><span class="string">_&#123;&#123;$%_+*^&#123;+!*!$)&#125;*)_&amp;%@[$*!&amp;*#][!!&amp;#&#123;]$&#125;&#125;]^_$*!*&amp;]&amp;(@%_$*@+!&#123;&#125;^^+()+_$(!]*@)&amp;#[#</span></span><br><span class="line"><span class="string">(#[@!$[+&#123;_&#123;^%+&amp;&#125;($[^^&#125;$&#123;^_[#)(&#123;)++&amp;_%*&#123;@+(^+_%!_)%)^+@#($&#123;)*]&amp;!)^&#123;[#%+[*))($&#123;&amp;&#123;#</span></span><br><span class="line"><span class="string">&amp;$+#])%@_*&#125;&#123;[&#125;$!&#123;#&#125;!^%*)++$]&amp;]!_&#123;_+_]%#&amp;@&amp;$&amp;)*!(]+_+&#125;&#125;]_+#)&#123;[^]#^+)$#!)&amp;)[+#[)&#125;&#125;</span></span><br><span class="line"><span class="string">)*(!%&amp;]*&#123;$+(_()_%$#_&#123;&#125;[]_%#&#123;![&#125;&#125;&#123;(!@&#123;#$[*&amp;(^((*+^(^(_]%&#123;!]&#125;+^)%^&#123;&#123;$**]@$$$_!]((%</span></span><br><span class="line"><span class="string">(&amp;[$&#123;_&amp;)&#125;[$$_&#123;$[]&#123;#&#123;%%!&amp;@(#+%@%)+_&#125;&amp;*##]!&amp;^_[^[*]([*!]]!]&#123;#*!^&amp;$!*)!&#125;_#&#123;_#*[%[^)</span></span><br><span class="line"><span class="string">[!*@]%*[_^!#&#123;&#123;)@![$+^__[]&#123;($+&#125;&#125;&#123;&#125;[$[]^&#123;+(*(^)&amp;*&amp;#^][@&#123;&amp;@)+^*&#123;%@^)+++&amp;!&amp;[&#123;(@&#123;!]&#123;]</span></span><br><span class="line"><span class="string">)%$]&#123;()*&#123;)[)&#125;@&amp;@&amp;@%^#&#123;*]@@]&amp;_]!))$^(%@+@+]&amp;&#125;]+&#123;*[]+(!_&#123;]@_[(]_][&#125;&#125;_&#125;@[_&#125;##+@]]]*</span></span><br><span class="line"><span class="string">+@*_*[&amp;%%(_++!&#123;]*+&amp;(*%%@&#123;!!*%!*^&#125;]&#125;$&amp;&#125;#[+*&amp;+@((#](@(&amp;*&#123;+](#%!%[%]@#+[_+(^[*&amp;[&#125;$&#123;</span></span><br><span class="line"><span class="string">($@]^)!&amp;_*]#&#123;#&amp;&#125;(&#123;@](*_&#123;!&#123;*&#125;)%&#125;#&amp;#_][%)]$_*&amp;(]_*%]%$(&amp;+$(#+[][*&#123;]&amp;+^+!&amp;^@&#125;$&#125;(&#125;]$</span></span><br><span class="line"><span class="string">]*%@_+!&#125;&amp;+&#125;_&#125;[%^]#&amp;&#123;&#123;+*%$&amp;_#&#125;#*]&amp;%%&#125;)$+]@)+^&#125;)[&amp;(+@$)^#)$&#123;@_(%!($]&#125;^!&#123;@&#125;)&#123;+@!__)</span></span><br><span class="line"><span class="string">$]&amp;&#123;*%#]_!$&amp;@$(&#125;#^&#123;]!!%^%_#&amp;!$+$&amp;%^_#((#)$@($[+&#125;^[_+$@&#125;_)]*!^$!&#123;^)@&amp;*[[%!_&amp;*$_$#</span></span><br><span class="line"><span class="string">^+][](^[]^^($_#[+&#125;)__&#125;@&#123;&#123;%_%*&amp;_[)!&#125;+[!@&amp;*&#125;&#125;$#%**#&#125;%&#125;)_^$^&#125;&#125;&amp;+*&#125;(&#123;(]_!*)#[%(!+_%*</span></span><br><span class="line"><span class="string">)+@%[+#$(+%@%%%_&#123;+&amp;_&amp;_]()$][)($&#123;&#123;@(+&#125;+_$_!+##@@&amp;&#125;[#+!(#+!)&#123;))@*+((&#125;@#![!)&amp;(@@)(]</span></span><br><span class="line"><span class="string">^#!+&#123;_(_$+!!%##&#123;[&#123;]($+@)#&amp;$%)))&amp;[&amp;*!^%+]!#]^#&#123;)][()**$^_!@)^&#125;%$&#125;+_]+&#123;[]*_&#125;[[*)*&#123;</span></span><br><span class="line"><span class="string">&#123;+]@[!%)@&amp;^^@$%!!(&#123;##_#[&#125;[+@_*@]&amp;@[]&#125;$&#123;((^[&#123;][]+#%![(_&#123;[*)#&#125;]@&#123;]#(^])_&amp;!%&#123;^!#%&#123;@</span></span><br><span class="line"><span class="string">_]&#125;]!^_[!)&amp;&amp;&amp;]_(#]+_!_&#125;&amp;&amp;)#$*+^###[**@&#123;&#125;&#123;%^[&amp;#+&amp;__@@@[+t]+&amp;)^&#123;*((@$!$)%]$[&#123;&#125;$&#125;&amp;$</span></span><br><span class="line"><span class="string">%!+$[(*%](@*!*&#125;)!#+*#+(&#125;$(*@*[#]#)[^*#@&#125;*_#%@@+@[!!&#123;*^&#125;)_!^&amp;^(&#123;(%(%%@(#_(&amp;&#123;__[!+</span></span><br><span class="line"><span class="string">(#&#125;)___!&#123;^@*&#125;#(%#)_]_%&#123;&#123;]+@%$&#123;+![^&#123;(*$+)$[&amp;[$&#123;)&amp;#%+$![&#123;&#125;(@^+&#125;]#(&#125;@#]&#125;($($[$[+&#123;&#125;(</span></span><br><span class="line"><span class="string">&amp;&#125;+%*$[(_+&#123;#!+]@)%#)&#125;_+&#123;%&amp;*)#^[$@_@&#125;[^*+_*(!%&amp;#*^@)@%^[@%*$_&#123;&#125;&#123;&#123;%[@^+%[$])])@[!^</span></span><br><span class="line"><span class="string">+#@$%^@^#%&#125;+)*!+!$%(&#125;](&amp;)##$+&amp;[[#&amp;^*!^$]*!#&#125;&#123;%#&#123;*+&amp;[]$)]%&#125;*[*_)*#@^&#123;%)&#125;&#123;+$^)_&#123;$(</span></span><br><span class="line"><span class="string">%)&#123;!&#125;(#]^_(!^](&#123;%@_@$%*&#123;*@)*#!%$(*_(]!#*#%[*[&amp;*)^[%&amp;$_)!$[_&amp;($]]%&#123;!%&amp;)[(]&amp;&#123;[[[&#123;+</span></span><br><span class="line"><span class="string">&#123;&#123;@]+](@&amp;@$_^^(*@&#125;)$!&#125;&#123;@$_^+&#123;*)[(&#123;^&#125;_!#[@$[*%!%^_*@@&#125;#_&#123;[&#123;_@**++)!]!@&#123;_#]&amp;&amp;*&#123;+&amp;$</span></span><br><span class="line"><span class="string">**^[)[%$_^)*)_%+]&amp;_[)&amp;$&#125;&#125;_]%+%)&#125;^_]#&#125;]__]*!&#125;&amp;#[[##![$[)%+_))_&amp;)$_(@&amp;@&#125;&amp;&amp;&#123;)+#_%![</span></span><br><span class="line"><span class="string">]&#125;(^#*@^)$$%[%*((&#123;(^]&#125;_$+^%&#123;$#*#^+(&#123;)[*&#125;@]+![&amp;%_%&amp;_$#@[$^+@$(##[[$&#125;+*$!@*!&#123;_@&#125;)&amp;</span></span><br><span class="line"><span class="string">&#125;![+_#&#125;%&#123;&#123;_$&#125;&#125;+]+#&#123;]#+$![@(!%_&amp;$$&#125;+^*&#123;^#^^[&amp;&amp;(^^##**$_&#123;+*!]&#125;][&#125;&amp;&amp;%]]*&amp;(&#125;&#123;+@+!](&#123;</span></span><br><span class="line"><span class="string">!$@+[&amp;@)]_!__&#125;)]+]+&amp;&#123;_($!$)#$)&amp;$]&amp;&amp;&#125;&#123;!^$)$&#125;(!@%$%(!+*!*#)+$&amp;_&amp;[[]&#125;)^#]&#123;$&#125;&amp;@$^&#123;##</span></span><br><span class="line"><span class="string">]#%@+!^)$^+&amp;^_&#123;(&#123;+[&#125;#()_(!*_@$&#125;&#125;!&#125;*+_[@^&#123;&#123;&#123;#+)%&amp;&amp;&amp;&#125;*&#123;*))+&#125;&amp;[#++&#123;&#125;%@(]_@$![$$$&amp;^*</span></span><br><span class="line"><span class="string">__&#125;$)$+%$%(*^@)++@!*%]^)&#123;]]_&#125;]++$!()&amp;[&#123;*^$%+]+*_&#123;[&#123;$[#*[[%^&#125;]&amp;_[^@^+@@^)#)$&#123;$^&amp;+</span></span><br><span class="line"><span class="string">(&#125;$)][$&amp;&#125;#*_&amp;+%#)(%^)&#123;](*]&#125;&#125;]&#125;!+[)##&amp;!^!+&#123;_!@&amp;^[[(#&#123;[&amp;#%$!(#&#123;__&#125;#&amp;@$*&#125;#^*#]@!&#125;^_</span></span><br><span class="line"><span class="string">!^$!@y&#123;$][%@+^##](_*(##^_&#123;#)$+$*&amp;&#125;[#%&amp;_!+)*@&#123;][_($#_$*&#123;(&#125;_[&#123;+)$[)+&#123;#)+($_]&#123;&#125;!]+#</span></span><br><span class="line"><span class="string">(#_$!@*+#%+(#@_&#125;&#125;@^!$_[&amp;_&amp;@&#125;)&#125;&#125;$(]^]^(_^**@%**#&amp;^+@[!]^+&#125;+&amp;+&amp;[^()+$*$(&#125;$!%@!(&#123;^[</span></span><br><span class="line"><span class="string">)]*&#123;(%#[_%&#123;&#125;(+!##[)%&amp;!((^[&#125;&amp;(!#^!([)[&amp;!_)(%&amp;#@)&amp;*$+]&amp;!]^#!!^$*^$!(_+![]*&#123;!$&#123;@%+)</span></span><br><span class="line"><span class="string">^#)$#&#123;&#125;]%%$(*&#125;(]#&amp;&amp;$)@_&amp;+)%&#125;&#125;*(([]![$!!^&amp;[%!&#123;&amp;^(&amp;@&amp;%$)@&#123;!@&#125;!&#125;$_*$%+#]&#123;])@!@)@_)]</span></span><br><span class="line"><span class="string">&#125;]&#123;_&#125;!%&#123;^$))&amp;_(+&#125;+#&amp;+*&amp;+!&#123;_*^)[&#125;(((&#125;_@(]^)_&#125;!]&#125;&amp;&#125;&#123;&amp;[((&#125;@&#123;+(([&#123;])_&#125;^(@^+^+^&#125;(!)&amp;]</span></span><br><span class="line"><span class="string">_%*&#125;_!^#[*$_+]@&amp;#+&#123;*@*+&#123;)]^^!](]_@^&#125;#^^%(*+]@^@]$*%_$#^*@[$]]_)]$+$+@*&#123;$[&#125;[%*&#123;+)</span></span><br><span class="line"><span class="string">(&amp;&#123;@%^+*&#125;^(^&amp;_+$#(@$[#@@()&#123;!($)^)!])(_&amp;%#*&amp;[@&#123;]&#123;]#@(]%@&#125;&#123;$&#123;[&#125;)($+++@*$&#123;+&amp;&#125;(^%)+*</span></span><br><span class="line"><span class="string">&#123;#]!#)]*&amp;@)+#[+_)@&amp;&#125;+]+_*&#125;&#125;]*&#123;&#123;%^!+$+#$(%!^**!])%*_&#125;$]!)(&#123;$^_^+]*#&#123;(_*[&amp;!(*))#@&amp;</span></span><br><span class="line"><span class="string">@^%@@&#125;]]&#125;%#%]&#123;&#123;#(#**[#(_#(#$]]*)_*#+[_#+&#125;&#123;&amp;!]@&amp;[]+&#123;*^]!%^*_@)]^%#++$&amp;@[)([+&#125;!*](</span></span><br><span class="line"><span class="string">&amp;%+(&amp;])^[)@$](**&#125;]&amp;&#125;$]&amp;%^]@)[&amp;(*[(#^&#123;$+^]@[%![_&#123;[#_[)&#123;_$)!%![]^_%*$!@+&#123;[&amp;%)!_#((</span></span><br><span class="line"><span class="string">$)[__^&#123;%_!]_#[&amp;_$(!)!_&amp;&#125;&amp;$$&#125;](]%&#123;^(&amp;&#123;%$!]+[+_^+&#123;*[@+*+%[$@&amp;#+#$*&#125;&amp;&#123;@%##*@((&#123;)_(]</span></span><br><span class="line"><span class="string">&#125;_)[^$&#125;^&#123;[$@^$@$&amp;##)@[#$&amp;$&amp;_@]@&#123;_][&#123;&#125;!(+[!+@%&amp;^&amp;[%&amp;$&#123;()@@_[&amp;+^^+&#123;)#^#)&amp;%_]@&#123;$&amp;(*</span></span><br><span class="line"><span class="string">&#123;()&#125;$]!%*+&#123;[[&#125;!+][_*!&amp;]&#123;%+)!^)!*&#123;&#123;&#125;)_&amp;[*[&#125;)+[(@!__!&#123;!]&amp;&#123;^@%!@]&amp;[&amp;^&#125;+#[&#123;_&#125;@!+_*&#123;&amp;</span></span><br><span class="line"><span class="string">^[%#!^]+(*#&amp;))([%[%$_[#_+&#123;&#123;_%!#&amp;)^&amp;#)#!](+(@!(&#125;&#125;*#(&amp;&amp;+%!&#125;@]%@#$*_[$](#[@#[_^+(%&#123;</span></span><br><span class="line"><span class="string">@#(*!__&#123;)_#^!&#123;!&amp;%_*@+*(&amp;[^_(*$#!@_*&#125;#+$_*$&#123;@!&#125;*]!&#125;@)$^@_@&#123;^(++(%(&#123;[#$)!&#125;!##%]&amp;[&#123;</span></span><br><span class="line"><span class="string">!(+&#125;(*!(&amp;_[&#125;&#125;&#123;&#125;+#&#123;!#)_[!)&amp;))%%#&#125;_!]$&#123;*&#125;@&#125;)_)&#125;%+&amp;#$]&amp;(^*[^+&amp;&#123;)&#125;+@((&amp;]])%$@((_(^$[</span></span><br><span class="line"><span class="string">_@$)[[+(!@]_()&#125;*]*+[&#123;&amp;@&amp;[##&#125;[&amp;]%$](+*&#123;]!%)]_&amp;%^$+%_@!#&amp;+@[(&amp;&#123;)&#123;)(]+[]&#123;)!^&#125;+!&#125;&#123;[$</span></span><br><span class="line"><span class="string">&#123;)@_&amp;&#123;_[^++^&#123;[%*!(]]@_]&#125;_&#125;)(%+_#!+]$$_&amp;!+*[(])$(!^($)&#125;^+&#123;&amp;!&amp;__+_&#123;@+&#125;[((&amp;%)$][^&#123;&amp;</span></span><br><span class="line"><span class="string">*&#123;_%#&amp;$&#123;&#123;!@$)$(@%&#123;&#123;*%[+[*@#$[@_&#123;&#125;&#123;[#($&#125;&#125;_)%)&amp;+*]((&#125;*)+_%#&#123;%]_$]%][!+[+[%[@&amp;&amp;)&#123;!@</span></span><br><span class="line"><span class="string">(&amp;(+*[($&#125;**&#125;$^_!@]_&#123;%#&#123;](]@&#123;!#&amp;&amp;&amp;)[$!_(#(#$!*![##!$_!*&#123;&#123;$@@*_!#[%)&#125;%^%(%#$@(&#125;+&#125;$</span></span><br><span class="line"><span class="string">_#@&amp;(&#123;+)+&#125;^*]^!^&#125;)[(^@)*+#@]%_(**_+&#125;###[_&#125;]*$$&#123;]&amp;_[&amp;&#123;[*&#125;+@#&#125;&amp;^&#123;]_!&amp;#&#123;%())](^@&#125;%*</span></span><br><span class="line"><span class="string">$[%@##)(@__+&#123;#@^_$&#125;&#125;$)&#125;]#^^@#&amp;_^++!$^^%%#($+]&amp;%&amp;+]&#125;^+_@%$&#125;)*$^*&amp;*+[##@_&#123;(&amp;&#125;@^*]_</span></span><br><span class="line"><span class="string">_$_[@%#[+***&amp;@%![]($[&#123;[!$&amp;^(]%(&amp;#_!(#%*^&amp;#+^*!)!^&#123;&#125;!$#&#125;](_(&#123;@]]&#123;)^$]^*[*]+&#125;&#125;!(&#123;)</span></span><br><span class="line"><span class="string">[%%(@_$&#123;[(#@%*_+^]&#123;&#125;+^&#123;&#125;!)&amp;#&#125;*#%(##))%(+[+@!&#125;$^&#125;](!_$%&#125;$&amp;([#%&#125;[##*[#*]&#123;$^#*(^+[^</span></span><br><span class="line"><span class="string">&#125;!&amp;]!%!+@)&#123;](^(*&#125;^_!$%]^[&amp;*)_^&#125;!@]*+((!^+_$+]_%[@&amp;+(*@&#125;&#125;+&#125;!]#&#125;)!*&#125;!)+@&#125;^&#125;_+*#+^!</span></span><br><span class="line"><span class="string">)#$_#&#123;&amp;)!$@]@@[#(!]^&amp;^+!_+@^!&amp;[*!)(*)*&amp;[&#123;_@%$!__!%%[#$(%#(]$$![[@!^#%(_)#!&#123;%]]*[</span></span><br><span class="line"><span class="string">+^$@$&amp;!^%+!^[_&#125;&amp;*$__@&#125;&#123;])%)((&#125;_^)(%^)$@&#125;#)]_)[)#&#123;!&#125;*^&amp;&amp;__&#125;!&#123;&amp;)]#_)[$$%@&#123;@$&amp;*@)#&#123;</span></span><br><span class="line"><span class="string">^#&#123;&#125;%^&amp;]+&#125;(%$@+&#123;*^&#125;)]@^#^#]@$%([[#^(%[)]%#$&#125;&#125;*_$]&#125;^]*$@#%$#[^[[%__*#@)(_![&#123;$&#123;&#123;&#123;$</span></span><br><span class="line"><span class="string">^*&#123;##%*!!&amp;]&#123;_[$#_]!&amp;&#123;(!@*(+%*[%_($]*#)($)%][^]#+&#125;[+_&#123;&#125;)@)&#125;*&amp;(]&#123;(&amp;(&#125;%%@(++$&#125;@(#[_</span></span><br><span class="line"><span class="string">&#125;(#[(@])[+(^$&#125;&#125;+!)&#123;_&amp;*)&amp;&amp;$((+[+)+#&amp;]!@^+]&#125;[#&#125;$!*$_&#125;_$__@^))$*)&#123;%!@&#125;_)&#123;(@^($)_&amp;^%</span></span><br><span class="line"><span class="string">]))^)^][&amp;$+)[!(#!()(&amp;[%(&amp;[@$*!&#123;]+&#123;&#123;$(#^&amp;_!!%@)%[@_(+^]#@$]#*!$%#()@++&amp;&#125;+%[[_#(*]</span></span><br><span class="line"><span class="string">#!&amp;&amp;([_&#125;[+]]*%_$+(^[^)$*#&#123;+&#123;!$%&#125;_*!%_([&#123;*^&#123;*(#&#125;&amp;[$@[[_^$&amp;!()*((&#123;]##$@@&amp;@$&#125;&amp;#&#123;#@!</span></span><br><span class="line"><span class="string">&amp;_@+)&#123;!($$(_&#125;++&amp;+*%@[%+([)(&#125;!%%&#123;$_&#123;@$[*&#125;_!^)#+)+&#123;*&amp;)^]+[$^))+&#123;(++%*^!](&#123;!&amp;^&#125;&amp;_(_</span></span><br><span class="line"><span class="string">[&amp;^#)(&amp;)[)&#125;[&#125;&#125;+$]*)+)&amp;_&#123;%&#125;(!&#125;(+%(]+*#([+*##&#123;()_(&#125;&#125;[%[]*]&#123;$&#123;+(&amp;)&#125;])&#123;)_^&#125;[]()&#125;#$@%</span></span><br><span class="line"><span class="string">]_&#125;(_]&amp;&#125;[&amp;#%!&#123;+@(##(&#123;^[+#_)]@!$]_@+[[%*_)&#125;]([$&#125;&#125;*+#$+&#123;$+_&#123;&#125;^][]&#123;!^!#^&#123;&#123;_$&#125;$(%)+[</span></span><br><span class="line"><span class="string">[^%]]+@&#125;_%)&#123;$%&amp;[@!*&#123;)&#123;)%##(_&#123;!#(![#*(^@&#123;$$))#&#125;@_]&#123;#_@&#123;)]#!]!#&amp;^]!@^_++(^($)^#^%&#125;</span></span><br><span class="line"><span class="string">*($%[*(++@_([!@)%&amp;%^])&amp;&amp;]_%*_+)$[+))&#123;_[)+*+**)][_@@!]&amp;[%@$(!#__@]+_&#123;$@+*+)_[%^&#125;[</span></span><br><span class="line"><span class="string">(++$%*@_](&#125;_(+!&#125;!(%!*([&amp;#[$@]#&#125;+@@%^[]&amp;^[%]+[&#123;!_#+&#123;(*)!*+@*&#125;+(+!*+#@[@#!)#*[]#%&amp;</span></span><br><span class="line"><span class="string">[_%^!#%_]$&#125;#+[+&amp;[@)_#]+$%&#123;]*_%#&#125;&#125;&amp;[&#125;#*(!))@_+@$&#125;$#[]&#125;*@%!&#125;^^&amp;$%&amp;]_@&#125;!!&#125;&#125;&#123;_&#123;&amp;#_&amp;&#125;</span></span><br><span class="line"><span class="string">$@$+(*!&#123;&#123;&#123;_&#125;!+[&#125;$+_)_++$+&#125;$(&#123;$^!*_@]$&amp;^$&#123;%$&#125;_!%_&#123;*_[$+)@%+&#123;%&amp;_^%%!+_([$_]+&amp;&amp;%_%[</span></span><br><span class="line"><span class="string">*]+[!%[^_*+&amp;*$(&amp;@@(+)$!(!#)&#125;!&#125;&#123;+*)_^_*^(&#125;^&#125;+&#125;][&amp;*_@#%&#123;^!&amp;&#123;)%_](**_%&amp;%!!&#123;$&#123;#+@$#^</span></span><br><span class="line"><span class="string">%)^!^$!$#*^]$*&#125;&amp;&#123;]#&#123;*]!&#123;%%+_(&#123;%)%+&#125;&amp;$%+_(&#125;_^(%&#123;*++!@^&#125;*_&#123;([[_#_++@+(*&amp;$(%+)+$&#125;[)</span></span><br><span class="line"><span class="string">[!&#125;&amp;#&#123;$+_@&amp;_!&#125;)&#123;&#123;$(&#125;[&#123;*@%[(!@]!&#123;&amp;&amp;%$!#[[()&#123;%#%_^#_&#123;_!&#125;$!&#123;)$$#&amp;_^)&#123;[(#&amp;$_^&#123;%$!^&#125;!</span></span><br><span class="line"><span class="string">((*&amp;@&#125;&#125;&amp;$)!*@$&#125;*^!]+]))!!*%^[%(+[&#123;!(_%]&amp;^$[#!#]&#123;+$+]*&#125;[[*@&amp;&amp;!+^#%!&#125;)&amp;$]&#123;*(&amp;+@&amp;+^</span></span><br><span class="line"><span class="string">&#123;$!#&amp;$[$&#125;$!][@&#123;%@$$$&#125;([&#123;)(]*+$!&#125;$*$&amp;+@%[$*)#]&#125;_&amp;_#@&#123;^#@!@@%+@([)]&#125;&#123;!_[@^+^%]&#123;)&#123;&amp;</span></span><br><span class="line"><span class="string">$@(%@)^]*]&amp;%%_%*#[@(&amp;]])#$#!$%$&#125;@&#123;&#125;!&#125;[[@&#125;#@#](@)$%&#123;&amp;)&#125;[&amp;][[_%%(!!(&#125;%([[)&#123;^$@[@[&#125;</span></span><br><span class="line"><span class="string">%#**%&#123;@_)%&#123;@&#123;*[@#(+&amp;+%[]&#123;+&amp;&#123;&#125;_*[%#!!**+&#123;&#123;_^+@[[@^&#125;[$@(&#125;@[$&#123;@@&#125;!*@!(%&#123;&#125;!#*_[&amp;^@[%</span></span><br><span class="line"><span class="string">)]!)(*(@]#@&#123;%_*+@_&amp;(&amp;*$+&amp;$$$$)+&#125;+@$&amp;)@&#125;&#125;+_*&#125;!()&#123;@@@]%]$&#125;@%@())$^]!]*&#123;!^!$&amp;!([*%*</span></span><br><span class="line"><span class="string">&#123;])&#123;#&#125;@!+*%(#((($+(_++)*$%#!)$*[]_%)]&amp;&#125;@_&#123;#]]&amp;!##&amp;$$)&amp;^@&amp;&#123;*!&#123;&#123;[))(*&#123;([^*&amp;$&#125;)@$*&#123;</span></span><br><span class="line"><span class="string">&#125;]]&#125;%&#125;!!*_%_(^%&#123;%&amp;*)@^&amp;]]_!*[*&#123;[^%[(]%]*!+])[*(!&#125;&amp;^)]#&#123;&amp;&amp;%*)$[(]#(*@^&#125;[(!](+_[%[</span></span><br><span class="line"><span class="string">%@&amp;!&amp;*_]^#*_$]^$&#125;^]##+_&#125;*@)%&#123;@[$$#)$*_&amp;)+()@*@&amp;^_$&#123;[@%&amp;&amp;$[!+_)#^_$&#123;+!&amp;&#123;[#^^(*)&amp;!</span></span><br><span class="line"><span class="string">#%(^&amp;!+$@!)_*##&#123;[&amp;]^+&#125;(](+%#*%#&amp;##!(]%)!($#!^^)!(_$*!_]&amp;%@#&#125;**+@&amp;+])[%$%@$!]$[!@</span></span><br><span class="line"><span class="string">%*&#125;_@^$%^]$&amp;#&#123;+]!(&#123;[@&#125;&amp;&#123;+@]!&#123;&amp;!&amp;)#((&amp;&amp;(!]!_$&#125;_!!(#&#125;#&amp;&amp;[@_]+%%[_]!&#125;%###*&amp;&#125;&amp;]^^[[_</span></span><br><span class="line"><span class="string">&#125;[&#125;^*&#123;+]@_)]@)_#*+]+$&#125;+]&#123;]!+&amp;&#125;&#125;&#125;@@)&amp;&#123;*+&amp;#*&#125;#*)__*@@!]!]&#125;&#125;#&#123;!$&#125;*@@@&#125;#^&#123;&#123;!&#125;##^!&amp;@!</span></span><br><span class="line"><span class="string">)##!]#$[@!&#123;*%+)*#+__)_(%&#125;^*#&amp;[*&#125;&#123;_@&amp;+[]_*[[&#125;[@&#123;]][@)#[%(*$[*&#123;%@]]#$&#123;)!%_!*&#125;+]$_)</span></span><br><span class="line"><span class="string">&#125;)_%())]&#123;(]^+)[+)#^&#123;*_^([%]&amp;*+_)][%^&amp;*)++^&amp;&#123;]+]$&amp;_+[@!%$_([&amp;%%!@!%*)+(&#125;]+)()!#&#125;&#123;</span></span><br><span class="line"><span class="string">(^*&amp;^&#123;[!#$](%_!_**!&#125;$$!&amp;[^&#123;(!#&#123;#@_&amp;^]&#123;)[*+^](!&amp;!(@^(@!@]%+]$(#%_&#125;+)$@&#125;&amp;!#&amp;&amp;&#123;^*&#123;]</span></span><br><span class="line"><span class="string">+%[!&#123;!$((^_+&amp;]_!@^%#_+&#125;(&#123;^^&#125;*&#123;&#123;%]^@&amp;+$&#123;%%^[*!#&#125;_(_&amp;&amp;)!$&#125;!_^&#123;[(&amp;$][(%_+$^&amp;&#125;#&amp;((#^</span></span><br><span class="line"><span class="string">!&amp;]&#123;[+)@&#125;%![(#*)$+$#)&#123;)[^+@^_)]%$#&#125;!&amp;&#125;&amp;]$&amp;&#123;*&amp;[$!&#125;%$]&amp;_&#125;[*$^)%&amp;&#123;]&#125;]![[^_&#125;(#&#123;^*!!&amp;</span></span><br><span class="line"><span class="string">*&amp;[(_&#123;&#123;+&#125;($[&#125;$*()&amp;&#125;$&amp;#%!%#)]&#123;@&amp;$)[&#125;&amp;&#123;&amp;_%_[(((%@&#123;]_*^(!+*[[(*&#125;@]%_&#125;])^%+%&amp;([]&#125;&#123;*&amp;</span></span><br><span class="line"><span class="string">+![&#125;&#123;([&amp;]$^[+&#123;*]()&amp;!&amp;@&#125;^#+][(!^*^+^&amp;&amp;$#]_&#123;@$+@[(&#123;]&amp;)!&amp;)))&amp;#*(%+*&amp;&#125;$^_*+_&amp;@[&#125;&#123;&#125;%^</span></span><br><span class="line"><span class="string">&#123;_$^+%+@(&amp;@[[)&#125;*@&#123;!_$)@((_*^_$$&#123;*#&#123;_#&#123;%@()[@(+$#[)!#*^!(&#125;&#123;!@[+%[&amp;_%()+#%%&#123;)&#125;^)$*</span></span><br><span class="line"><span class="string">&amp;(@%[&#123;^&amp;%^(&#123;(@$*(**$&#125;+)%&#125;&amp;)!+$[((&amp;)@]@@+&#123;&#123;]])]]^$#(@%)!(&amp;&amp;]+#+[&amp;[&amp;&#125;$__$$@$+]@&#123;*#</span></span><br><span class="line"><span class="string">&#123;]@]@*)!])&#125;)!&#125;!%[+$)@)]](&#125;*&amp;!&#125;]+![##]])]_[](+$&#123;+]_*@)_^&#123;&#125;&amp;^)_*&#123;*]#[]*&#123;+&#123;)(*&amp;^_#_</span></span><br><span class="line"><span class="string">&amp;[#_)$)&#123;$*!)!)&#123;$*$(]&#123;]_&amp;%%&#125;$@&amp;[**+![#&#123;$&#125;]@$$[@@]@&#123;[#])^$***+_#%@$%]&#123;_+&#125;&amp;*!&amp;_%&amp;()</span></span><br><span class="line"><span class="string">$]*&amp;[)#(%^&#123;]%^)])@#&#123;!^@(@)#+&#125;&#123;$&#125;@_$&#123;_(_&#125;[^[+#*&amp;^&#123;%!%+$))&#123;_]*%+(@^&#123;_*#$*(!)[*[&amp;))</span></span><br><span class="line"><span class="string">^&amp;+^@!!!+])*@__%__@$&#123;%#_(^@@*&#125;!&amp;])[#%_!%&#125;!%&#123;@&#125;#!)(_*^@*_)$&amp;_+!#$)&amp;&#125;#_&amp;$&#125;%!&#123;^!#&amp;^</span></span><br><span class="line"><span class="string">)_)$&#125;%^+_!*$(@%&#125;&#125;@)&#125;)&#125;_&amp;&#123;!@^^!&amp;_]**!*[[()]*%(]&#125;!#))+*@($%)+)&#123;!#@^+&#125;@((*@[&#125;&amp;%#&#123;_+</span></span><br><span class="line"><span class="string">&#123;@^+!([!)_!+@+&#125;_+^!%_([(+)($@&amp;@##($_&amp;!@##$%+$@#[_[$!^&amp;*])!&amp;(_]*]&#125;&amp;)[(((]&#125;%[@&amp;[^@</span></span><br><span class="line"><span class="string">]&#123;*+&amp;_)#!(@&amp;#+((&amp;!%!%&#125;^*&amp;[]#$*^&#125;&#125;$]&amp;(&amp;_&#123;&#125;+_&#125;$%#&amp;%[&amp;&#125;*)*]]&amp;+!_)#[^+%_*&#125;]])+$)%!]&#123;</span></span><br><span class="line"><span class="string">]##]^($^_)&#125;[&#125;[[)&#125;&#123;++&#125;+(^%^!&#125;&#125;%)&amp;[&#125;$&#123;&#123;*+&amp;+@%&#125;&amp;(&#125;)@)+%!%_*(*[!+$_)[!#!@[%)@^&#125;(#*%+</span></span><br><span class="line"><span class="string">#]$]%^)$!&#123;]&amp;_[%%*&#125;_#_)__^[^^#(&#125;)&#125;&amp;^%%%_&amp;&#125;&amp;$_$!&amp;&#123;![*^&#125;#+@!*)&#123;%)+!]_&amp;*[$)%[)!&#123;]!#^</span></span><br><span class="line"><span class="string">[&#123;*__(+#_)+^%(%]_%@[++[((^*($_*(_!*+$+[&amp;!(*_[&#123;&#123;&amp;&#125;&amp;%*%@#&amp;%[#*_[_&amp;@&amp;]__+&#123;@$)^%_#$^</span></span><br><span class="line"><span class="string">@@%!+%+]_&#123;&#123;&#125;*&#123;[]+^*$!]&amp;[$+_&#125;&#123;])]$]*##__##&#123;#!!&amp;)%!@^!!*+#&#125;_&#123;^)%&#123;^*(&#125;])]@$_!__)!#+</span></span><br><span class="line"><span class="string">@%(&#123;&amp;[^$&#123;&#123;_&#123;&#125;#([&#123;+&#123;]!@((&amp;*@!)*[&#125;$&#125;(]%+#@$%%&amp;!%&amp;]@$(_][#)))@$+&#125;@%*#^^@%&amp;]&#125;&#123;()%%^!</span></span><br><span class="line"><span class="string">#&amp;&amp;)++!(&#125;&#123;]&#125;*&#125;&#125;!&#125;(@*@!]^%*!$_[($)!_^^$_[#!(%[!&#125;#&amp;$)@$&#125;#$))&amp;)[##**@](]]$)&#125;&#125;[^@@^#</span></span><br><span class="line"><span class="string">&#125;&amp;&amp;)&#123;[$$&#123;&amp;&#125;+[+%_&#125;!#^#%&#123;]_%#%*&amp;_&#125;&#125;+]&amp;_$*!&amp;&amp;][_%!]_*+#^!]&#123;&#125;_!@(&#125;(*(^^*__+$#@#^]*%%</span></span><br><span class="line"><span class="string">%]^&#125;!_&#123;&#125;!)%!&#123;)%+[___]]$](*^)))*^$&#123;)^^$_&amp;[)&amp;&#125;*&#125;($#&#123;#^^#_@[[+[^&#123;&#123;[*__&#123;%$^$&#125;*&#123;&#123;+#&#123;&#123;</span></span><br><span class="line"><span class="string">$%&amp;+])(^^*$(&#125;#*[$_#%$&#125;!!^%&amp;($&#125;!!(]*&#123;!&#125;(!_&amp;&#123;##[&#123;!+]&amp;#(((%@]!($#%$^@(%))@_)@&#125;*&#125;)+[</span></span><br><span class="line"><span class="string">^]^(&#125;$&#123;[(^!*&#123;&#125;!(_[&#123;^*&amp;&#123;&amp;&#125;)]]&amp;&#125;![&#125;$!&#125;*+])&#125;[@(_&amp;)[&#125;*@_$_&#123;%[+&amp;#(*_#+)^)!&amp;@!%($!&#125;#[%</span></span><br><span class="line"><span class="string">[@&amp;[+^@$&#125;&amp;&#123;]&#123;)+^&amp;^#&#123;&#123;&#125;@!&#125;&#123;^&#123;%&#125;#)@!%([$(_!([+(&#123;)@^(#@!)$[_&amp;](!&#125;@$*$@!(#[$+!@][&#125;_*</span></span><br><span class="line"><span class="string">_^#&amp;&#123;)][@*!])^))+@+$%[%&amp;&#125;(^(!@&#125;([#+***_*[^)$((^*(&#125;([!]@##@$%^[&#123;+^**&#123;&amp;[&amp;@@##)#(@#</span></span><br><span class="line"><span class="string">&#123;+_**$%(#$&amp;^$^]__*)%$*+&#123;#+()[%[(&#125;#]&#125;*&amp;$^%]&#123;&#125;%&amp;(_([]&amp;_&#125;&amp;&#125;*@&#125;#&#123;((&amp;!@!&#123;#+__#*#))&amp;[(</span></span><br><span class="line"><span class="string">&amp;[[*+]&amp;&#123;[$_&#125;*#@!&#123;]&#125;__!+!!@$@#&#125;+@!%^(^_^&#123;&#125;]+^(&#123;)*[**%!@[^)#$%&#123;&amp;[[_!(^(&#125;&#125;&#123;!&#125;!)@###</span></span><br><span class="line"><span class="string">(#*+!#@&amp;+&#123;_&#123;&amp;%&amp;$&#125;+&#125;]!@*$#&amp;&amp;(&#123;(^(_#&#123;+$*+_)&#125;^&amp;$##&amp;+$]$(&amp;$&#125;!&#125;!](%#+^]*$%]%)&#125;^&#125;])#_!</span></span><br><span class="line"><span class="string">@)*%_$^]$@*&amp;(()&amp;+)_[*#@&amp;&#123;+&amp;&#125;^#*+*&#123;[)[^$+#**^^(^]&#125;][$_+]*&amp;&amp;)@&#125;&#123;&amp;]](_]_]^&amp;&amp;&#125;%@+&#125;[$</span></span><br><span class="line"><span class="string">(+[%*^!#)#+(&#125;!)[!^&#123;&amp;[*[($%&#123;+([#[[@&amp;&#125;)$]@&#123;^^#!$]_&#125;!&#123;*&#123;*&#123;![@$_@]+*&#123;&#125;[!#%@&#125;]&amp;#&#123;*%&#123;&#125;</span></span><br><span class="line"><span class="string">!!(&#125;&amp;+%%&#123;%&#123;%(&#123;!_(%_]@&#125;+^%@_!*[&amp;&#123;)$%&amp;)@]&#123;+&amp;_+%&amp;^_&#125;([_@@)$^!^&#125;&#123;#[$@&#123;(_]&#123;))*$(#!(+%</span></span><br><span class="line"><span class="string">&amp;!+]&#125;]__^&amp;@)^[&#125;]!*#@)%!(%#)_*#&#125;%*__&#125;_+(**&#123;[+)]%$&#123;+@^(]$()@([[&#123;(]&#125;$)&#125;#!&amp;+&#123;%@$+&#123;&#123;^</span></span><br><span class="line"><span class="string">&amp;&#125;_!$_+$_($*&#123;!*#&amp;$]%_)[(&#123;&#125;+^&#125;[@#+**%*&#125;#[([@$][)[&amp;+_%!!&#125;@@&#125;*!@%(#[&#125;&amp;$#]&amp;&#123;+^&#123;#_*^]</span></span><br><span class="line"><span class="string">@_%(]$&#123;&amp;*&amp;#^#_@^&#123;%*^%$^+*(%&#125;[!!)(!%_&#125;!@@#&amp;+)^^&#123;##%&amp;&#125;$+*+!#&#125;+%&#123;%#)^@%[&#123;&#125;^%#+(+$[@</span></span><br><span class="line"><span class="string">#%&#125;+%%#_&amp;&#125;++)&#125;&#123;]%#]*)]+)]+^(*(&#123;&#125;+&#125;@_&amp;&amp;!![)^_$[][@*]!%@(@*+*_]&#123;&amp;&#125;%*^)+[&#123;!_%$+%[*+</span></span><br><span class="line"><span class="string">&amp;&amp;&amp;!#[_]])$&#125;%[_*!)@&#125;[&#123;*]%!@!_))]*%#^&#123;&#123;+]%]]*@%&#123;%@+^[@&#125;(^#%&amp;**+)*^*[)[)%$[^#@^&amp;+#</span></span><br><span class="line"><span class="string">+++&#125;%_@@[(&#125;[*%$#&#125;^#+&amp;&#125;+%%)$+_&#123;^(#%*&#123;&amp;*%(*)+([!@)*#[&amp;!@(&amp;_$@%$%]^^&amp;&#123;]@$&#125;[(&#123;$((^&#125;!</span></span><br><span class="line"><span class="string">&amp;%+&#123;#_]&#123;&#123;&#123;^[*_^#^!*@&#125;_&#125;*&#125;+*&amp;(@!^#%)@%[#(&amp;$!&amp;%)][#&#123;*$$&#123;(+&#125;($*(*(*&amp;*$^&#123;&#123;@^]&#123;]&amp;*@!)</span></span><br><span class="line"><span class="string">%&amp;)**+]][!+@]*&#125;)(@)_]@&#123;($!%+%%]_)(@&#123;+!*__@[(%&amp;&amp;^]@([@[&amp;%$+(&#125;&#123;&#123;&amp;]]+*&#125;($+&amp;&#125;%(!%*@!</span></span><br><span class="line"><span class="string">(^)$&#123;)%)]]$*!++[_(_($&#125;(@++[^&#123;]%&#123;&#123;!%#!%+*$)_&amp;@&amp;__#([__$[&amp;^!&#125;%$)(]&#125;@+]+_@*]%%&#123;&amp;(@@</span></span><br><span class="line"><span class="string">$_[(![!)+@[]][]($@%*(&#125;$_(!^^)]^%)&#123;&#123;(_#)*#][&#125;$([)[]!_![![@&#125;&#125;&#125;!%^^!&#125;!*#%&amp;&#123;$&amp;!#_!&#125;#</span></span><br><span class="line"><span class="string">[^&#123;%&#123;$^+@&#125;&amp;_&#125;*_]%(&#125;@*^&#125;]^@*_^&amp;&amp;)^^&#125;[&#125;@]+^*%(&#123;*$^&#123;+])_^%*#!$&#123;!#+$](+&amp;]&#123;@_+&amp;[!()@&#123;</span></span><br><span class="line"><span class="string">@)[[)&#123;&amp;(#[#&#123;&amp;@&amp;(_]@##])&#125;#&amp;%*)_&amp;!(&#125;_^^$_)))&#125;&#125;&#125;+&amp;&amp;$%&amp;]&#125;&#125;$)![&amp;&#123;#_!(!![[![&amp;(+&#123;&#123;++!&#125;&#125;</span></span><br><span class="line"><span class="string">%&#125;^%%#)))!&#125;^)&#125;%&#123;*@*_&#123;&#125;*^&#123;&amp;(^+$&#125;!@$_^&#125;&#123;$*^#)(@^]_@@%)@_[&#125;&amp;[)++)$&amp;]+!&#125;![#]@$%@]]!@</span></span><br><span class="line"><span class="string">^()&amp;++$(_[!^#[&amp;@*@@()&#123;#%@((!(%@(#[&amp;+*%+(^%&#123;&#123;*$%#!(#^&#123;(&amp;*_&#125;!^#%(&#123;*_#)%+#&#123;$##&#123;!$]*</span></span><br><span class="line"><span class="string">&#123;+_!&#123;+^$!_&amp;&#125;%(]+&#125;_&#125;@**(&amp;&#125;(+@^%#+!#&#123;#*@@&#123;+!)&#125;^&#123;^+#(!&amp;&#125;[+*%+@&#125;_+&amp;+&amp;]&amp;+(+)_)((!&#123;%*)</span></span><br><span class="line"><span class="string">([)_+_[]&amp;&#125;&#125;[&#123;&#123;+[)]!%&#123;&amp;&amp;__&amp;$+$&#123;_+#]_$&#125;!&amp;#%[@^^]!)#)_+#$]((*@+#$#)@[)*&#123;[&#125;(()$(@&#123;*[</span></span><br><span class="line"><span class="string">]&#125;#*_+&#123;)%[+!^&#123;+&#123;(&amp;#_[_&#125;_!&#123;!*&#123;[[)]][$[&#125;*@[$*&amp;))+$[&amp;]@)[*&#125;+^___%!]()^)&amp;!@&amp;[*@_+&#123;&#125;&amp;</span></span><br><span class="line"><span class="string">[&#123;]$#&#123;!^]^$#+*$&#125;#*)(]!@^&amp;#)&#123;][$)&#125;!+%^)@#&amp;!%(+^^($(%&#125;^+[*)#+&#123;%!))&#125;(*&amp;]__&#125;)][_))&#125;#</span></span><br><span class="line"><span class="string">())#&amp;##&#123;]$#$](&amp;$%&amp;&amp;$)^&#123;(@%)$%()#)&amp;&amp;*&#123;]&amp;^^+%$##%&#123;!(_$(**&amp;(_]+&#123;%[%$!_)&#123;$*@@++]&amp;^$(</span></span><br><span class="line"><span class="string">@+&#123;+&amp;%]$)+@(&#123;$(+&#123;!*#(%)]+[&#125;)&#123;]]#)*[]%&amp;&#123;+)$)&#123;!&amp;$]+^++_@]#%)[&amp;&amp;^%]#@#@)]@&#125;%$[_*@%)</span></span><br><span class="line"><span class="string">[&amp;*^*&#125;)@(!&#123;&amp;^#!([%@_![&#123;)+)$&#125;_+)%&amp;^#@#$$&#125;))^&amp;)&#125;(&#123;+*&amp;_()&amp;@]$^#(&amp;&amp;&#123;)&#123;)_[&#125;&#123;@(&#125;#)!)%&amp;</span></span><br><span class="line"><span class="string">(&#123;+$[!#()[]%&#123;$_*]*^%&amp;]@&#123;^@&#123;)&#125;&#125;_^&#125;@!^*)_[([&#123;&#125;]&#123;*#&#123;]&amp;&#125;&#125;[$_[&#125;!%%&amp;_&#123;&#123;!$[&#125;&amp;[[@#[&amp;_$()</span></span><br><span class="line"><span class="string">*_$+)&amp;&#125;*)&#123;$&#123;&#125;!]+%[&#123;&#123;!+)+&#123;!&amp;]$!&#125;&#123;_]&amp;)!!^+)&#123;&amp;*#&#123;@!##_(^%^$([!+&amp;+($&amp;)##[&amp;[^_&#123;##&#123;(**</span></span><br><span class="line"><span class="string">&#123;&#123;)#*%@*[(^(&#125;!%&#125;@*&#125;@+]^_&#125;&amp;&amp;&amp;&#125;&amp;&#123;[$(@[#*+%[&amp;%&#123;$$**]]%(!$+$!]^+[^_(&amp;*&#123;#_^%[[#+&#123;]#_[</span></span><br><span class="line"><span class="string">*&#125;]#)!%!_[&#125;)^%*@&#123;!&#123;$)*_+$$*&#125;%(&amp;]%^+$@!&amp;&#123;[]&#125;**&#125;)&#125;#&#125;[#&#123;%&#123;$#@##(])&amp;)(($&#123;^]^[%^&amp;(!_&amp;</span></span><br><span class="line"><span class="string">&#123;@((&amp;@&amp;)]!&amp;&#123;&#125;@#])$($&#125;#&#125;@)#[+$^&#123;%%&amp;*]&amp;_!+&#123;$+[*&#123;()_&amp;&amp;(&#125;%[&#125;)&#125;!&#125;(&#125;[!%@$#!*(^^![+(^@&#123;</span></span><br><span class="line"><span class="string">(+]]@&#123;++#)@@%(!&amp;_#@^$*%^)*](^&#125;#]@]&#125;]@++*^+$_+]^_][]@^#$^&amp;!_+!(^+((&amp;@^@_^@)$[#!)*</span></span><br><span class="line"><span class="string">$)_#]*^&#123;@_*[&#125;@&#125;*@@^+**+[[)**&#123;!)!&#123;##[(*&#125;&#123;)+@&#123;&#125;&#125;&#123;]+!*+&amp;*&amp;)_^&amp;&#123;*+@[*_#&#123;)#(&#125;_*]%&#123;+!%</span></span><br><span class="line"><span class="string">(&#125;_%$#)^*&amp;+[([@*!!&#123;@*[&#123;%@[__)&amp;*&amp;@&#123;__+_&#125;[_#&#123;]!@*%(^&amp;^_$_+[([(($@)])]))%_&#123;(^@!&#123;!#@</span></span><br><span class="line"><span class="string">#*%%[#&amp;#[+)%__]&#123;++*)]&#125;![[_%+__&#123;$&#123;&#125;%!&#125;+!!)&#125;*)_+!#%^&#125;[!)[@[]@@_(@&amp;&amp;*]^_&#123;+[)&#125;@#&#123;#*&#123;</span></span><br><span class="line"><span class="string">*%!%@&#123;$%!_^+&amp;]+@&#123;$)!&amp;_&#125;_&#125;&amp;!&#125;#)#[$&amp;_&amp;&amp;_)*(&#123;(&#123;$[$)]]%#^&#123;^%&#125;&#125;^%#]&amp;+^&#125;[!&amp;_[[[(&amp;&#123;@+&amp;^</span></span><br><span class="line"><span class="string">_()%@#@&#123;%_(&#123;$&#123;*!)(*+$*!!+$&amp;&amp;]&#123;^^!(#&#125;@[&amp;@&amp;[&#125;^#)]+&#123;)__@_[+]%$)]&#125;$[([^&#123;)%&amp;)@[+]!_!+</span></span><br><span class="line"><span class="string">_#$))&#125;!+&amp;&amp;#(^[^(&#125;%(%%$%+&#125;&#123;$^^)&amp;^[@&#125;#$]&#123;!&#125;+*&#125;]&#123;_&#125;&#125;*(*@]&#125;#+&#123;&#125;@@!$(&#125;])%+^!#@(_^(@[(</span></span><br><span class="line"><span class="string">_#&#125;$[^[@^+_&amp;&#125;*#$&#125;%^)(#*&#125;%_+]@_%]%&amp;&amp;()[^(&#125;[*[&#125;#@(%%$&#125;]_)^(!#%]#@(#+!#&#123;#$]^!&#125;))_]*</span></span><br><span class="line"><span class="string">]+%^+%))]+%$]+!%@[#@[@@[*#!+$#&#125;&#125;*#()$_*$[^&#125;+)@#^^$(^+)^@%](!+)^[#!#_*&#123;^^]&amp;[_[_+&#125;</span></span><br><span class="line"><span class="string">$]%@^+!##&#125;*(*)&amp;([]+]##%$)+$_^%^@&amp;((+@&amp;)%&#125;$&#123;#&amp;$!!($#&amp;^](^^&#123;&#123;(&amp;+]_]@&amp;*#_^+#!(&#125;]$*&amp;</span></span><br><span class="line"><span class="string">_+@#[&#125;)]])[((#@&amp;]!&amp;]*&amp;&#123;*&amp;#_[#(]&#123;(&#125;!]_+@[&#123;^+&#123;&#123;!)*&#123;!&#125;]@@^#*&#123;*(&#123;(%#(@@(]&#123;%]!@@+%!!*</span></span><br><span class="line"><span class="string">%(!&#123;&amp;^%%&amp;$(!#@&#123;+*#+*&#123;]![&#125;!!($&#123;@*+$&#125;+__&#125;_&#125;&#123;)@)^*[$!@[+)+](#!!&#123;]#*^&amp;)!%&amp;)%*]*#$]()</span></span><br><span class="line"><span class="string">]!&#123;][@$&#125;@)$__*_]&#125;^(#*!#!_!**@&#123;(&amp;![]$_+_%^#_!%!$&amp;@](!%%((%[#]&amp;&amp;&#125;_&#123;]+[+*##])(]%^(+</span></span><br><span class="line"><span class="string">#(_&#125;((]@&#125;#$^_&#125;)%#&amp;&amp;((!^![^&#125;+!&#125;&#123;$(%*&#123;*$@%][)[[%&amp;^[&#123;](&amp;+^*!!!([__[&#123;^&#125;&amp;%+&amp;^(*&amp;])*$&amp;</span></span><br><span class="line"><span class="string">$#_&#125;*!(+([_&amp;%&#123;^&amp;[([%]&#125;*^&#123;&#123;([@+@]@*&amp;@_!]_+([(#&amp;!]]#$$#]@#&#123;_]][_&#123;@]&#123;*))$(&#123;%&#125;_![@$]</span></span><br><span class="line"><span class="string">#)+[])%]$+^^(&#125;^!([&amp;&#123;)!#&#125;#&#125;&#125;#!&#125;[]]&#123;[++&amp;!)]#]]%^%_&amp;_&#125;!&amp;&amp;$@#&amp;!#&#125;&amp;+]$)^_^*$]!$)&#125;&amp;&#123;#)</span></span><br><span class="line"><span class="string">+[+!_$&#123;^](+([&amp;_%&amp;$)#&#123;$%#[%%][($()+!*_(*&amp;!&#125;%@&#125;@%_#+%&#123;%&amp;*$]*&#123;$(&#125;&#125;&#123;)&#125;]%))$&#125;*^$]$(^^</span></span><br><span class="line"><span class="string">!&amp;*[^]]&amp;#%&amp;%!_+#&amp;&#125;_#&#125;_]&amp;^+@]%(!+!_*](@]&#125;__+@%+^!&amp;[@[)@(!*[%&#125;^$!$(]!^_])!&amp;_!!_[&#123;*</span></span><br><span class="line"><span class="string">(+*]_&#125;%+(%[&#123;)](&#123;#[+$&amp;&amp;[^@&#123;&amp;#!@%)!+&amp;&#125;$@+@[+&amp;_*!$(+#*%!+$@&#123;&#123;^**&#123;)(]*$(&#125;+(#+^&#125;%@%^^</span></span><br><span class="line"><span class="string">!$%&#125;$$&#125;+@^$$%&#123;&#125;&#123;#!(%[]$!*&#125;+(]!%&#123;(^&#123;&amp;^&#123;$[$)]&amp;&amp;^+&#123;+%!#[([%^!&#123;]]#^@!&#123;#(&amp;]@_$*_&amp;!%(!</span></span><br><span class="line"><span class="string">+_+&#125;%@#&#123;_&#125;^#*)%*(*&#125;*![&#125;[%_[[^@$&amp;%)([*&#123;_$&#123;)$^^_!+&#125;&#123;)!)@_[*$_&#125;*&#125;$#[+&#125;&#123;]*+!^])&#125;&amp;&#123;+#</span></span><br><span class="line"><span class="string">+!@!^*@&#125;!&#125;&amp;&#123;]*#^@&#125;_[)&#125;#@%!_*#!$&#125;!)[($&#123;+^&amp;!&#123;[&amp;&amp;&amp;*[&#123;&#125;+*+(#+_[&#125;&#123;$$)#([*!)%@^%_]#%$$</span></span><br><span class="line"><span class="string">(++^+&amp;)&#125;*_&amp;%@#[^^+^&amp;@_%]+$%$#$*)@!(]*+@]&#125;%$$&#125;$(#$&amp;^(%[*([&amp;]*^&amp;&#125;(!#&#123;&amp;_&#125;^(*&#123;(+$#&#125;&#125;</span></span><br><span class="line"><span class="string">(&amp;_+][&amp;_@)$&amp;$&amp;^[_$(++$^&#125;]&amp;^^*(+*!&amp;#_$]*+@!]+&#123;%^_*+!&amp;&#125;@$!#^&#123;+_#([+@(((*+)[()__&#125;(^</span></span><br><span class="line"><span class="string">@)](+[$*_(]*$[[&amp;@^(_*#(*&amp;!^&#123;+]_%)_)^[&#125;@]#]%#@+^+[%&#123;_*&#123;!)&#125;#$@#)_$!_(!*+#&#125;%%&#125;+$&amp;$[</span></span><br><span class="line"><span class="string">%&amp;]!&#123;&#123;%*_!*&#125;&amp;)&#125;$**_&#123;*!#%[[#]!](^^$![#[[*&#125;%(_#^^!%))!_^@)@**@&#125;&#125;(%%&#123;#*%@(((]^%^![&amp;</span></span><br><span class="line"><span class="string">&#125;!)$]&amp;($)@](+(#&#123;$)_%^%_^^#][&#123;*[)%&#125;+[##(##^&#123;$&#125;^]#&amp;(&amp;*&#123;)%)&amp;][&amp;&#123;]&amp;#]&#125;[[^^&amp;[!#&#125;$&#123;@_(</span></span><br><span class="line"><span class="string">#@&#125;&amp;$[[%]_&amp;$+)$!%&#123;(&#125;$^$&#125;*'''</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">count_char</span><span class="params">(mes)</span>:</span> </span><br><span class="line">    infos = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> mes:</span><br><span class="line">        <span class="keyword">if</span> i.isalpha():</span><br><span class="line">            <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> infos:</span><br><span class="line">                infos[i] = <span class="number">0</span></span><br><span class="line">                infos[i] += <span class="number">1</span></span><br><span class="line">    a  = sorted(infos.items(),key = <span class="keyword">lambda</span> item:item[<span class="number">1</span>])[<span class="number">0</span>:<span class="number">10</span>]</span><br><span class="line">    print(a)</span><br><span class="line"></span><br><span class="line">count_char(page_message)</span><br></pre></td></tr></table></figure><pre><code>[(&apos;e&apos;, 1), (&apos;q&apos;, 1), (&apos;u&apos;, 1), (&apos;a&apos;, 1), (&apos;l&apos;, 1), (&apos;i&apos;, 1), (&apos;t&apos;, 1), (&apos;y&apos;, 1)]</code></pre><h1 id="re"><a href="#re" class="headerlink" title="re"></a>re</h1><p><a href="http://www.pythonchallenge.com/pc/def/equality.html" target="_blank" rel="noopener">http://www.pythonchallenge.com/pc/def/equality.html</a></p><p>线索：一个小写字母的两边准确地被3个大写字母包围 –&gt; 那么它的格式就是 xXXXxXXXx</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br><span class="line">1195</span><br><span class="line">1196</span><br><span class="line">1197</span><br><span class="line">1198</span><br><span class="line">1199</span><br><span class="line">1200</span><br><span class="line">1201</span><br><span class="line">1202</span><br><span class="line">1203</span><br><span class="line">1204</span><br><span class="line">1205</span><br><span class="line">1206</span><br><span class="line">1207</span><br><span class="line">1208</span><br><span class="line">1209</span><br><span class="line">1210</span><br><span class="line">1211</span><br><span class="line">1212</span><br><span class="line">1213</span><br><span class="line">1214</span><br><span class="line">1215</span><br><span class="line">1216</span><br><span class="line">1217</span><br><span class="line">1218</span><br><span class="line">1219</span><br><span class="line">1220</span><br><span class="line">1221</span><br><span class="line">1222</span><br><span class="line">1223</span><br><span class="line">1224</span><br><span class="line">1225</span><br><span class="line">1226</span><br><span class="line">1227</span><br><span class="line">1228</span><br><span class="line">1229</span><br><span class="line">1230</span><br><span class="line">1231</span><br><span class="line">1232</span><br><span class="line">1233</span><br><span class="line">1234</span><br><span class="line">1235</span><br><span class="line">1236</span><br><span class="line">1237</span><br><span class="line">1238</span><br><span class="line">1239</span><br><span class="line">1240</span><br><span class="line">1241</span><br><span class="line">1242</span><br><span class="line">1243</span><br><span class="line">1244</span><br><span class="line">1245</span><br><span class="line">1246</span><br><span class="line">1247</span><br><span class="line">1248</span><br><span class="line">1249</span><br><span class="line">1250</span><br><span class="line">1251</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#网页代码上的信息mes</span></span><br><span class="line">mes3 = <span class="string">'''kAewtloYgcFQaJNhHVGxXDiQmzjfcpYbzxlWrVcqsmUbCunkfxZWDZjUZMiGqhRRiUvGmYmvnJIHEmbT</span></span><br><span class="line"><span class="string">MUKLECKdCthezSYBpIElRnZugFAxDRtQPpyeCBgBfaRVvvguRXLvkAdLOeCKxsDUvBBCwdpMMWmuELeG</span></span><br><span class="line"><span class="string">ENihrpCLhujoBqPRDPvfzcwadMMMbkmkzCCzoTPfbRlzBqMblmxTxNniNoCufprWXxgHZpldkoLCrHJq</span></span><br><span class="line"><span class="string">vYuyJFCZtqXLhWiYzOXeglkzhVJIWmeUySGuFVmLTCyMshQtvZpPwuIbOHNoBauwvuJYCmqznOBgByPw</span></span><br><span class="line"><span class="string">TDQheAbsaMLjTmAOKmNsLziVMenFxQdATQIjItwtyCHyeMwQTNxbbLXWZnGmDqHhXnLHfEyvzxMhSXzd</span></span><br><span class="line"><span class="string">BEBaxeaPgQPttvqRvxHPEOUtIsttPDeeuGFgmDkKQcEYjuSuiGROGfYpzkQgvcCDBKrcYwHFlvPzDMEk</span></span><br><span class="line"><span class="string">MyuPxvGtgSvWgrybKOnbEGhqHUXHhnyjFwSfTfaiWtAOMBZEScsOSumwPssjCPlLbLsPIGffDLpZzMKz</span></span><br><span class="line"><span class="string">jarrjufhgxdrzywWosrblPRasvRUpZLaUbtDHGZQtvZOvHeVSTBHpitDllUljVvWrwvhpnVzeWVYhMPs</span></span><br><span class="line"><span class="string">kMVcdeHzFZxTWocGvaKhhcnozRSbWsIEhpeNfJaRjLwWCvKfTLhuVsJczIYFPCyrOJxOPkXhVuCqCUgE</span></span><br><span class="line"><span class="string">luwLBCmqPwDvUPuBRrJZhfEXHXSBvljqJVVfEGRUWRSHPeKUJCpMpIsrVMuCmDTZPcAezRnyRTJkYyXk</span></span><br><span class="line"><span class="string">oLEmjtaCsKmNOKNHygTixMKNaSifidWNbeZYYHCGMtgJiTSlzRMjzOAMuhmYwincvBydQMDPaZclRsYU</span></span><br><span class="line"><span class="string">SeEnkclzGopkBozDQfXrQqHjRvlAQsijPCsrnUawvyskbTAnjctFftReVrIBFBKiLSFGmrLSrcnZKfOU</span></span><br><span class="line"><span class="string">wnCGYaMNKNhadSGMXwBaefDrMXoNeJsUaSGlWgttAqovosuhyBWwqQLkVKnRseXaaPwrMtdWjGiVXPvd</span></span><br><span class="line"><span class="string">sxbXzJwjxAITPpPWoGOnPWcSbHFZjBizKEBUECMLUKQRvVvWgIudKQkNjJmlUoUCaAHiTKVKcIpMeltJ</span></span><br><span class="line"><span class="string">AYlVsrjBTLsWuyYwCJuJaewQSrzwXJNLAflzrZXBBEOCTtItNptaJkriIEhufpNysjJpeWbWcFqdEsiG</span></span><br><span class="line"><span class="string">feIJbjRkOfNLjKIiIqbLfYRtldJPJEdsDJrZreCQGUhiIkjPwxrQfjPvsASxJnsqHKAKMJIPuOHYzxuI</span></span><br><span class="line"><span class="string">THEobVZUgmAlVBlqvPgHEGpelbIfzYKHmAmJFlwbhQHWeSLuvPQrUWEQcLwdkalMnyLVyZiFzomxyhHX</span></span><br><span class="line"><span class="string">LhFYswiIPrhmHVHQSJFzWSGUIaKytHzUTSlwSoPkBDPYJBUhXZuNrlPKzVtNoWnKrngtEkazGaWWNlfR</span></span><br><span class="line"><span class="string">RdYbWMbtMyqlOtyNVFyovtOfTqFaMVSmkApgbyffXFgSNqKxCtrjegbSaChypYNUqcfKxYEbgSiIzEqM</span></span><br><span class="line"><span class="string">lsHiHfJOdvhwFLIGAlecFxXxLLlgkAkJehUMZLrOROOArPPhNiVfPvFPrUPqmVZslfhprVpHoyvkAiux</span></span><br><span class="line"><span class="string">hIrGesluecMjJGkvQkzYpLefAPTGcPlQngoaKzrvnlhtudzYMpKxMUEJfsxihneGfwPVeKqmaLGqIFRV</span></span><br><span class="line"><span class="string">siZNppfwZZhfbaqznpIqZRMiyhBgBLCRqqDRgqQMUknFCGZqjqWSAubRCLQZnIbKDRhJrAQeboQctKmz</span></span><br><span class="line"><span class="string">SaFlMXjNqkujGmgtsWbcfEkRWluWBzwIKlvjCMDtnpGlHKXzouovFOySfqjnjWWlOtEbpbpVtGkWzqis</span></span><br><span class="line"><span class="string">JxASqiDLkjpozYyXnkovzHFCklyKQqiJHWtxMjpvDnVEzcXggQbdryUppwiiWzxDZEGzckGXATnTLuiT</span></span><br><span class="line"><span class="string">SvcQsrZPSmbcHPQEYeXCfFDlXsJdjRhzilGllXNdlSDSOHzCWwWKePFiQeUoDBhqMtmVPbWCXshWGFWQ</span></span><br><span class="line"><span class="string">KtsoUdjOqPSjERRCtRdEpApFFwTDsZfNxVqsUTUgbjIXRJTIKHoWJZdUyQaZxrkaYHNAPvawmOgZueju</span></span><br><span class="line"><span class="string">OCkDgGhIgQvcbqTnovaINOqMvhGDQmgxgoGBZGERWeNwavCHuEqoCNfJlpgSYDWoTbkzMwDptqkTGGZm</span></span><br><span class="line"><span class="string">ghcVJXkjYIfNjLrJAjOAbXniGjnJZPfBFeICxJbgeZKEQIbmjSSMuyLWfrcqrlvNVuNplvFvpFvtwejU</span></span><br><span class="line"><span class="string">wdqCWhmhpULzdVCsphBXFOqucjQsGOwrcmQEejhZjeoqQfeShslpmMyYSPVzCwIstLoYVKceHBmRDRMT</span></span><br><span class="line"><span class="string">lHRjQtEAzRzbjHhleOalUJfwYubSoQwTQuVlLfgYLSwjzJjORHszNNXlvbASfdncJtaggrnWQayCeeHL</span></span><br><span class="line"><span class="string">hrTBclVDdZZXwnuMsxAdIitDotrUoBDnxNiHEWMFZEIBvGuaJuHlqJjZDJybDCaeeBzctgmxVTHTfyQY</span></span><br><span class="line"><span class="string">UlgTgJljKvOEAYrtmDRDNtSYephsQxCVfPIRlatlSlFMXwzysWQcogZNkOQhMASZvQlGWQEICTgYjScy</span></span><br><span class="line"><span class="string">NlJYqhjYnnOguMsqCAjwVbVCyVlwBpNRseONpIGwgKomMbvqYDYXiUpfOCWCzGCxDolcGEUVitfVkWTV</span></span><br><span class="line"><span class="string">zWFtkDsGXxIttvLoCHhNknOxAFgCmerhdDiRhAUzAdPIQaPIrLvuvJANOFydiZrlmhtySXHhIhXAlxbH</span></span><br><span class="line"><span class="string">qzrxtWBtnqVnbNYvGisPtzCEPQopkRujbkdLdjeyxKsiaZjroIDVELfFhgzaoVlHehIxQxOgxSRVxtXI</span></span><br><span class="line"><span class="string">zReYwUTXmZSvtJrCMvzcfJysWvrtniuukisYGdywIgZlmaLuuqoGSwdmRzgbxYPzPAeRZhzsNakETkdL</span></span><br><span class="line"><span class="string">qbZhzXrKPYTYiWIUvQtmADZIPwoSjsmRxxvAOEJbNjPWenKYWSmHfhHCUGOTucQzXJokqjSmHvodFDtm</span></span><br><span class="line"><span class="string">mIpCQStfDwPqIMjOWTlwpqXuEjmmguCSvZgVGpvquNLWZutrejvArhhuSistkPHPSVTLKvIPGWjLlCvA</span></span><br><span class="line"><span class="string">fBvcsqYEuGMGlyGAeikgQsVaVvFXXLTrQeKQCsqoUughmjitWfDAIltxUXBejtRaOyYcmLLPWwYPfZsj</span></span><br><span class="line"><span class="string">XxCpeINTZABaQukGKxfqeEsPajoNXojSmekpHzWlKZcCDsXilGRPBgLPDQVMXVzDPOfpmhGvboAXxmAU</span></span><br><span class="line"><span class="string">RILBSCAZefqpBhHtfQhfezJOXObJYIQuuAYFlXmaiGcXtocQEgzpinPkhcGcTiCHEmTtBlDDRBGZoCCp</span></span><br><span class="line"><span class="string">FOuGAcaQxuQeDMTCmGEHYorVyShXbaaSzIBPXqpnvwBWGIjzhEYjMDblEeMwGwpIwAvruynPjmqyVFKy</span></span><br><span class="line"><span class="string">ZjLlFysrtkTPIYFlpynOIwGiMIKoUSqCcGEcwaXwUbEtdnMAuzGttGPouVICmFfuCeYMRBbjVitmMkfV</span></span><br><span class="line"><span class="string">KflCTKRUkxWsKEJcZZuZQmcjMXNJEZLezgYsEuqqSLEMupAhvWpmYWbIeCbSleuPmGkZXeZYPjHrAsAN</span></span><br><span class="line"><span class="string">LbrdsOoRxhHFcqeMyVlZRdozVMxSMbyIfmJJaALSmwepuIBJCCEatpNtRfhHifPCDpHIVYFVnnJVhoJe</span></span><br><span class="line"><span class="string">FxWTjgAQHAYXLsUFTTluNZJKFgvUAnbRNxlBPZVAwlEjGVkziQbVBnOCXxhFzIfTklsasbzfdqiwtoqS</span></span><br><span class="line"><span class="string">TpwRJGdzSyCblVGYpizzyjUvKMkCVKzIKJGpxxsgLBFXaYKGdgrtTuRGAgruwGfNEnDCyranIXHrSUsn</span></span><br><span class="line"><span class="string">IgMWlWMldVJuLZmfYAhwSjxNIvqjGhdMvHIkDCTWyXYzqnJZPbAfLEINtNziVKnQLIbRBlvWowovBiYA</span></span><br><span class="line"><span class="string">UkRxoOfInqnFgyaOlwmIcICMCmibsrdSNNWzBFXPQGZfZQdoRgfeCsBRPOpuNWFjBubpYgbJuCgIOWeN</span></span><br><span class="line"><span class="string">aYCFUuHoeJsEvoBARbcUhpwlUhWLNyXkxaVcyiTAWttuYVTgjmOtnoGIFSfWuUKXNVdEJmrTmdHUfGPp</span></span><br><span class="line"><span class="string">xrsHmhwDSyvRmXQVfsNoPQcwXWdFhwERobmxIWJxVbMBhthqCSeczJaGTVdFRcXrkiyTvbRVOLtyjVHc</span></span><br><span class="line"><span class="string">coLphpcuewozwclNhREKjylWqEwVYmJNcmmTejtkfKtgUxfGDNyJFxJQiFYdLkySUVIhHyQScHjjIjig</span></span><br><span class="line"><span class="string">XgpphuwefbcAOAKpzwbDNvSXCAtdMlpQsrWybYMRsIvEKmBHqpVWHraJctgLRiUJHzEtjcCuICPTHMXM</span></span><br><span class="line"><span class="string">DQUnEmKcGjBYtKugzrYHLtaoBQQZwoYZcYWyCUxVfhJkCFVYBxuyavphlxNIBjihfYyUkQQGMzKqtnny</span></span><br><span class="line"><span class="string">GdqIQNlQSLidbDlqpdhoRbHrrUAgyhMgkZKYVhQuIACQpKjhmXbQCkrssyUHaKXgvNNMpadUjfnJYuWu</span></span><br><span class="line"><span class="string">dEBRzHBwNOtDRouBFUHGNuzQwDISBpkCEgLTVYEFbkUSPIiSzAtRrFUhmJHijAACBuUJTMLyxXmsBqEC</span></span><br><span class="line"><span class="string">oSajBqlTrwxIUVaeaqgCIMlkshLDBDtODUmyyCCJfFJyDECvwGaSaGiJNMFpLdCebTEGZCZBkZtVOyzT</span></span><br><span class="line"><span class="string">CVSNKKxefhhODBddsbpeaKvyTmLuSNacOEGCYpLLoLVpdgVfYnfFKwsHiDkEgupQDLnVwIBfJywHulIM</span></span><br><span class="line"><span class="string">TkyIeBMAZclTtQHcKFppcJLnsSUSqQlpcbjaUTjfjGrdbFmqBeCxGEfBOGhRgWItKDeyndwLrcMolNTH</span></span><br><span class="line"><span class="string">XAjTqUlUCSnAYQEPkBByKZfebtjOLAwLQAUqyKWupUPkDTnrbBRScmGqrqNjTdmalHjyRapBHlcbFaEE</span></span><br><span class="line"><span class="string">jKdWXcTKRlqILDBNBPrwsuFptJKxSFdztEPjPghGZnlKhmIrvltPWEDCmJOoXIjmUNlamPbqUeVwfMUV</span></span><br><span class="line"><span class="string">eihLfSTbezbaRSSGbpWlZwPTJKKSOkIaxJAaCzFSDzWOlMNWwwCrqRBfkZubvvNiAYEQfWFigTxPbOkw</span></span><br><span class="line"><span class="string">GqqvQguicNCYmKdnxWqWOuhphbHEzzSmWdftLboUZaXMuITrcQgxuRsLdoAtYVJrqKMEseqDmVQsrmWc</span></span><br><span class="line"><span class="string">dQbKxSwcHyDRgpVPPIMoBkGWzTbZxHMxxNYvudYNueXxAhiAjxwjdXzKrGzitppKeQWJxBnCThVheOdD</span></span><br><span class="line"><span class="string">DHzbbEOmruVvPDBCRovHfYTgAXiCjEmRHQhyIhBJdgoWzJSgQAuPDOeJUcxBavVRrclzFCRLbkeCbDAx</span></span><br><span class="line"><span class="string">nKDZsHQJGxtKyQHEhneFbUKVKVIHkHvZXYdEHGHMHeIijduUQxdCBunPLXGlhgRmIvlniLlyLsKrUgpd</span></span><br><span class="line"><span class="string">QpEvCIHToMPGIhNhcQUxXRqzLLNUATnsHquUDhXqgvwrHgqYrHLdTDQnxDyoEinZNtTmSoseNrrzmCtS</span></span><br><span class="line"><span class="string">JKVxDizekLuHBjXaeYFitpthjQTZZkZYepsYwXvKpUgSGCCGOBKreneLKzhuVGimMFUvDzGShlXZvpKx</span></span><br><span class="line"><span class="string">uuXcAtqdzsJedRKIrsSNsKuAGnFuhthNIsWpzoCHIdgWxZBQwhyflaLPiSrZfDBUKAzcmOUQFfVTUmpx</span></span><br><span class="line"><span class="string">VFUmqjivdLUQUVANaXjATmMzNDaVNjAsmVBNTbxVFGYFspIRpfUCRplmHkXQKRlguhjrCPaMWjpAkkPH</span></span><br><span class="line"><span class="string">VTjPqipizICoBcXpuaFlIkJuIyYUfINKmWrwPMXgoZUbANizGYCRdTRrCxaZqUwVFgPGDnpjRqPxVNvz</span></span><br><span class="line"><span class="string">BLTwTpYnDoRGbFpVVpPnlkIlDmayqDiCDuYGWfOoNtUcPYlahTqpuKeAgKGbOApnjNUOyNUzWabUvMcR</span></span><br><span class="line"><span class="string">RXmhLrpOFfqRVVQotuVKLuIiZeIRzHuprqSNKZOWrdsDpzQpgsYUvNypUlatDynACJxDfHoagkWeHYRA</span></span><br><span class="line"><span class="string">OdHIZdjjMnfMcWOeazWwYktAhvJQSXzOvVBVXIANnJzRgMGZxzpZkQGuZzPolAPNsDsHpyjmFlKnmMxj</span></span><br><span class="line"><span class="string">OMDgqLpYTMFmlRsKYqRyUHXHCKmknKTWJTRWXDfEZqBHnBHcQaDseMoUjONIarxTWJwZPfVPEkhQZylK</span></span><br><span class="line"><span class="string">sIkVuORXFsIvtaPuJUuGwFsyhZHpHWWTvenoaPYfwwFqTYhcYcsjaHliyIotgstirQurQJLyMcwEliIk</span></span><br><span class="line"><span class="string">EUBkywIQmZLNURadZzPuWEKucvTNConMvILAQekRhmwlnVTbeGqZGEqOqSnJvqxXIzsDOJfcENBdxRkk</span></span><br><span class="line"><span class="string">mkMFlxpLfDgwiwjFaeJKLaApQLNalgytHcyrVtXRGbNVKCWiWAtiZKkShJbJwEAyEfUYySCGvdigKokL</span></span><br><span class="line"><span class="string">KgBKMyFFbikGyZioXmFpxbAeFUxijcsFrgxkEzgbLRYiYTJRvQgGqsEaEHLADBVyOXpbVzliNKmxWawY</span></span><br><span class="line"><span class="string">DVlFmZCtmWCDJUEKtSNvSAotvLewsIgeVDDuwPMuNUWBgdHcPiNMkWFXAyUyMQcmoMiJHoRjsDWFXaDD</span></span><br><span class="line"><span class="string">beojPtAJrNYwLKUZUUSdOZzFXQiElQfVGNWbyktFQifQQbxPCAQwPFNBGNBqQTCZiNCEKJObmydljteL</span></span><br><span class="line"><span class="string">WvTDLoliSxlWPkUjjXYGMUtZGzEeYmrbwrsTlpJBkXQYYqxVuqmZUUObeKFmneYetSoJVbhNFIvmpbCK</span></span><br><span class="line"><span class="string">lkYkezlwPgFbznfFmbWOULkAQxmZalZTHFmilYHFGMBYlsZDtosNLiOjzHRnDTiDgnHkrOUOZHerijvp</span></span><br><span class="line"><span class="string">obzAyAKNnpXIESqgRYGXmfVtynXTWbNdgOaeZPDOdOXViaSLZqovrEcSHRXORjWFTaCmicmOHCPpNMqI</span></span><br><span class="line"><span class="string">OnHHRLYqWldlHGukaSwhRQkzmejyojEwtdkQMVmixNoyyCmmNYRRObZULDHGDLspyPZJLrSYzPmZjkSM</span></span><br><span class="line"><span class="string">IZqsubbQbfVIisfCsSOcrAFCoNzOThldUYgJdOHcqBqAyGduwZEFqvYtERSwgRuJjiuCWssoZaimEYAT</span></span><br><span class="line"><span class="string">cfFtkYjJRkxAMvEszJExvWFAILMMdjJxxmwzTHfUQuWsoGHrgTJuKPdfPVGmnTjqluacJCNXHcorguCi</span></span><br><span class="line"><span class="string">tenwLpXRhuqVRKkNlfkRCqtrjOLDelTrahLykzupZKFxlQRxpfarfVTZBjMEgYBMGhFlroPIGsjzNedi</span></span><br><span class="line"><span class="string">sMQcyrjEIgSCZScrjiJXOYyhXvesWGwNCvpOaYMIxEAhvbekfticnzAbGDcziZezOCTJVylmpdVNdvEy</span></span><br><span class="line"><span class="string">szxLXwMTcrIILLvIkmiakUHSSpgLPObdnzWCJhAryAARMuEzlHVrnrpTfoUJnWjUWDXzQOPRLXEzcZee</span></span><br><span class="line"><span class="string">cxVPDEPHYgtqPyIRuRcnijpVkgtFmBdOAthuEUudwcaUfwVwSHpJSZFVLHGsDZTiiJnIwGVsYWYbjLWo</span></span><br><span class="line"><span class="string">AEWddUfyPmZogFGJhRHvjKLfRldtmwNIhEZsAplmmxikduMmtlKnjWiAaBmtbJMbcLHYSiWamYgvMRQy</span></span><br><span class="line"><span class="string">CqoXZMIILUAlVaUyuGAREVNzEAghlynWJBmqOcUnDuZhYfsxzbjnFrhvzPHduZUuWDgLLAzNpNilcGzE</span></span><br><span class="line"><span class="string">AetfaazIagalKIHlQmCYioXsvGExmLaZlodiGTWXtSQrweXIwAkVmuadLdThbqtZCkChIjZEGQzdkIAz</span></span><br><span class="line"><span class="string">GCPMBftSlYlWksieHzihvgBXMOShthHOidwlGMzqoxrCzPxiEHcWDfKTrzWixSWRbtVWyPxbCqNeiGCX</span></span><br><span class="line"><span class="string">ooJJemWODeyhlAIKuRJjMcEPhhkDbSNpudalaMDKFSqztExZkMqzvqGDjUyOBGzXhJeqUnHbeorXzJfQ</span></span><br><span class="line"><span class="string">qkEnQubCNqnzFtmnoqRxIBWpySeuFGHiXduwTbvqNsCUKAaxIxindTmLIcKPwhXeroiKmwAjxcyaldhU</span></span><br><span class="line"><span class="string">hmPfnvrslckfdgenYNWMjuzawptMJFXXUXbKpCboIUkyNZCDXeFZbtlexJULmBfpNDjdoMXThWARAUKV</span></span><br><span class="line"><span class="string">xaUxEjKNBUXkttDUxfvWGqyfznxUsTVAVGWtcdngzeQtkZFHFSPWNkaTdiouHQtDsgBFqXzXqKTQlaqI</span></span><br><span class="line"><span class="string">DwOFWPHFhdhbSeYjoMskpGLjgoTehJlPSVWfOVIvwUztfoMZtdZwTNrrGxqbWsoAjZNvmBikxFklTOeK</span></span><br><span class="line"><span class="string">LjMdiBwwVQqGtKMDACxInfGbGnZkvyUXiwliPofSclCIPzbFvQHAsfxfxueGkjVUjEerTYLrLnxcsfig</span></span><br><span class="line"><span class="string">RIyQGzpnUATABTuyfZFPLibeldXzDkiXZBgcfcuPBGTuSJfOYLRNzgdNpVNiCoQMkSoViQFKFXUplSyr</span></span><br><span class="line"><span class="string">EDkgHtzcePuQoqhDBgLvXaexKKHCCaNjOEVCuuHHolkYAZiGvoyeQnwvsscLQjigUekgqQVLzmEWUcIG</span></span><br><span class="line"><span class="string">azXXgdnLUYyudqsGTSXUrANUrfAtLQeTqPgRgRXVDpcNtNrIrUTrllYIJIZIvoDQnEMhkMikvHNfcWSM</span></span><br><span class="line"><span class="string">kkjwzDqTAHsftRnDxXpGMjMdtGHoxusVkIRaTLLrkvugDBmqoWcMcemcNwgyDVwQrUkqItVHNrPoMyyU</span></span><br><span class="line"><span class="string">ZQhLNworxfWlDzhOkrrMeeYLcUGcYjSSvgRtMvVgGyJFQMTbPFZJIpmFwNCWEHkTGdSxflSLSetMLbPu</span></span><br><span class="line"><span class="string">sbfQuAzDXGIlRQOwfFMhmuXIVKstDvKCCqLRGNqsxcYjiZGrLKMXDmxroqwBJaSwhxFYPJAmaMcZCNup</span></span><br><span class="line"><span class="string">RmDOjSVyXoaOBSVPCzSdgfPmJGklmbLYIQAgTRKraWdPViXnPUCkHUaMryMwLvLQSWnfGFjIkZPwHpev</span></span><br><span class="line"><span class="string">redOKzPsrYCeaJLKVdpyxcuhfQLxiWdLwQlxJDLvqmwjNFuzTFfEefDmVRGYFerEwHbDtxCHQQcJiPSV</span></span><br><span class="line"><span class="string">NTvkqLSDftWuKBRbYmTpRMwTMzxhFmAuxbmIvWjwyDbDAONFghYsZftVauOvrmlgdJUvjNXJFMQCXEuW</span></span><br><span class="line"><span class="string">voDQoSXdrdpZDLfbVXskEoLzaQSpuBfCTDpyrumNcjbkFDVbzayyUcQkdAIhwcPRDpfQkHWwJWWfBgRj</span></span><br><span class="line"><span class="string">yikgYCmELeZGphaAVwzUayZwqbzvGThNUNMSrkYVrIemmMLhsIKGcpKEiyzPTgrZQoGNKsEgOTrKlbUC</span></span><br><span class="line"><span class="string">HSkPZjxqjsfUPYsYXGUFvOObfbRHhiRnedwCyCkigTLYdnTIjWiOdlOfXFgxTIqWwkgAIaPLxcHuQsRq</span></span><br><span class="line"><span class="string">LpLwzVrqKmCiilpkvkcxKeufRZciwencGgImsMTpIdxiVuwaMxgvZlXiEcPlIzrKWChmrQCHLghnCUND</span></span><br><span class="line"><span class="string">kfAwjUfkkYBpydDIcTAegVTcwfYNOJwBYpviSJyzrdLHGuNRwuvoBObmhyZDgtYksOChSMUXRDSDbLUG</span></span><br><span class="line"><span class="string">jeiqwiTUrKGxMobqMQBcWuDLqwynSgWaPSflZmqyqABmESOJSKWhqEmSMJniqhPHCmTuLruVHADodqnv</span></span><br><span class="line"><span class="string">noEKzdtovEQLGXQOySOMrLyURHUdbOMZcrJdyJJgbHQzRUiKHRtoydBJudFZiyFCypQolrIaVuNaMiIb</span></span><br><span class="line"><span class="string">vejGfNTtQVyheIZNyariSyKbjYtbcdKgEDSBtEHqPGjEVRdheDQYtuFMmdsILGOuqVMuYxVdZfXxwdHx</span></span><br><span class="line"><span class="string">RVCuSckGFUhIrbubeOKkKtTNzxUvedDdETOpzJofUZpQmhcAcaIYTIlgTUmxEBElCdhdinpPOrzbIuXB</span></span><br><span class="line"><span class="string">JqvVywZdxJnhfExkkxiDTExXmuPSLTVGQMYwseqXuhZBlXSFdGKijhGbqJbPWDFxDaQqPzefZPZKgFYv</span></span><br><span class="line"><span class="string">BEaPoHgPQfwDxZeJdmhgzKiwgiYZKiqpyuPHTIcclDUuZkgslsrJwHoAiwaElQBWBUULqAosjBBvWIRl</span></span><br><span class="line"><span class="string">nYkYaycsSARutBqhZQZxsAUiTSeeFgAmKcRxjWweoOkwwVszQMXeeGffviuFtgVpBGGyHevSLyjPICXK</span></span><br><span class="line"><span class="string">TfTOOTYNRWmzgeXjLLOLdUQSshAZAESaDJIxcExEsIAgKpjCbOsbtGzLRajPZImwrrGDRWsaymUVZEtC</span></span><br><span class="line"><span class="string">sZvmggRScwSTumcJNmTwOzLchzqaqTMtmQalZdWIfTmbZdIZCyhrVTLYGDVLnKNwhGINmwEradkOAnGM</span></span><br><span class="line"><span class="string">AtqikrfpKgBcIeZeapqaEslIRGoJPtGebMpUItTHUhTyxLTcqHiDJmRmLNVjEFLZpoqApPuBkAgUsvUh</span></span><br><span class="line"><span class="string">QyCLHEBWKSnfJPEucAtmqbuRGZCETTqSoCpJbxNBrqZecFaQiVPHtySbxVmwQLqBOsFCIQgMRzjnfIls</span></span><br><span class="line"><span class="string">FJaCDNyXWNNWBlYBtrtPpOhMArvikRFGjekKrFjtdcarbwUsdfbgomoVevZDFCzgdavVUthzbkgInBXF</span></span><br><span class="line"><span class="string">ixGvzBzgDEHidSRHSIhgDCPJqzmHTqcUkhhkRNSEXtFEiztfMjdOpWrZYAzJPdiYToxDGczUCrRvNala</span></span><br><span class="line"><span class="string">SaRqOFEwUrQVjwJkwKrbbezoIypvvlGRGmgLykBhrQfwQjFlvPVOLTCoXSgGMYTsrjgSomAtFyMZWUEp</span></span><br><span class="line"><span class="string">EFaPCMsDBafhhyeuUKEgXHRERsboOiGAhnVTaghwSAFjnDMivhKkkrBFNdLjwpOcNzzIEzZUWvXeTysT</span></span><br><span class="line"><span class="string">WXULuSZpRXYBxrtoSPhMepELZWNICqDmCjZbOlabMbFGaDvTwDAPQVQHbitxZvjxXOBKCkmtfvaSeNnS</span></span><br><span class="line"><span class="string">bkzQEhxWqilWFZJKVXhcovchQXrvAaevLwMFqJVkWzWiEDznczHrpAtDhFPMPpOKsdfZImjXThlnEWZZ</span></span><br><span class="line"><span class="string">KZxOqyXMvLUbXrLTnUWpoMmRjYXDVVDOTHFNCcVOVPeyWLIbUNIKgwwAyjnzoYjRlgjMupjCVAgjRpSZ</span></span><br><span class="line"><span class="string">MsiECRbsQxJdeSDHxUdYiGkCvsZtywukCLoaFagyBaKVnHyuRsqihBBYaGnHRvFhTHjFTJCkCzxpcIEY</span></span><br><span class="line"><span class="string">jibOfyCIrfypFAWdIjgvvXfzsbemxLXWEzgpHvVJLHdhRXJOHYJjwUFObjYrQagrDQZJYhliMeWQMLlA</span></span><br><span class="line"><span class="string">PVwwxOAaukSDfaBDByUBxVqbvGyJYzlfvwWtplMgMhYLukioxpicGTGWIwYgqtVnNgJPXUYEyvgFxDCe</span></span><br><span class="line"><span class="string">mbVpvpxahLFlrZqGgKDNjDZfOhIOEQIFDfYEgMOMEWfqZwJsMZibCOrkYUvTUMtmrkDnEuZoiemxLEQr</span></span><br><span class="line"><span class="string">pgXLhIGsDXJyQgAoFfwAYhZvRyZvSCseHOcjuUXrDyHJUDDJuHikRwOteofczKADHeJnvjUNKWJFKOTS</span></span><br><span class="line"><span class="string">wGSBYXSDjVKVXcIEMkLfFkzDPdERjpdTZIlcAUqKfrljEhheDjtWtPhxPKQdwNCNStrQKpBcduNctzdI</span></span><br><span class="line"><span class="string">DmbpzSAwjxkjUpWwkrNBJoMDxMrwCTqNkRlaFtslqFPebkDBbzXPASGwZRWmqCkNLzoGCikObCHfiFjX</span></span><br><span class="line"><span class="string">aamTRByoYHoUVkYHNrriVTARhKsSxKXYRgBKHAIjelNtUBlDIQJcZrZydPhtDrscEQqzSKcyGuhgVqGk</span></span><br><span class="line"><span class="string">jqiwnaodmUuAZHeiYOjuZjtVLLizuhhWpdMRImfqsWbgaWFOHVdVrBQNFRtuaomOWnystCFYPYmLnEFw</span></span><br><span class="line"><span class="string">TxfgnLEAwnFbtgERhXrVCUkRysKSNidrYbukMRAhQuvRxhUfwicQamYmPIvPABUgWAFfPJtFGdIfXGMB</span></span><br><span class="line"><span class="string">xWgHJcHtyXTWtAIWXWmxKOdwaXVNyEQinVndzxtJiKgtxPSZzvWxnkFFQkOpxtPwsmhINrTuQBYdwpet</span></span><br><span class="line"><span class="string">qwGsJZAobNrLUnVMOCOwRgQtFXfvQVOBsifMoKBNciBMvpdorQutElOsIeaByGCiNAmrrjZtxlcjnHYU</span></span><br><span class="line"><span class="string">duwblnoWDoREeimDNltOUcYuIephxkHFadPsNSOAybJWrlWRkuBGVFlGcVFCdXSpxaYncbRyqpVCrKwV</span></span><br><span class="line"><span class="string">VgLlUwwqzcXwGDpncbyEvcgPeGqaBwfPQegAGxEXHFjPJdRxuANbvwQoMaSUomOtNzunJwleUmUiGNRt</span></span><br><span class="line"><span class="string">gXcuznYWPisavbywBTDiqSHNYOObaOCIDKELdJFJUmQLGemjFgTvSdfXMNHLOIRQrlvPSzhGOJXmXMkh</span></span><br><span class="line"><span class="string">ShJIKXfKWMwgdTSnGNByaNJKvgJpzxCYowGRiEGoruXiUKyXtIZsNmDqYVBlRttksVKeauzGlPQufJao</span></span><br><span class="line"><span class="string">ZVCjITMBlzrKGwrbHKalmhbpcXbFoMHUNRAwxWqVJhSAzNuUeLZlFmWVoDpVCvMIJmZUqNtvfjUKaBIA</span></span><br><span class="line"><span class="string">pnhnoxvgsxYoGiNXsZaGleJolaiMttVWmkKFnrxMXtDlYQVPetNrTAFQXhwEhtSLUikWuGjGgxMQJnmd</span></span><br><span class="line"><span class="string">gKLtwyOFznUPXKaZErAzkGxvzHLOEbQrvmDCvCkISxvpMKaMOPPmGotBPamwmamGoNjNQPAEIBZeXBbM</span></span><br><span class="line"><span class="string">KPcphRoxMwYKdqcoFgZGMBatkbopUhWuqsyJtLIVEFWZstACEzAExVKBrLMvHPGOhbUulaCoMBjxcECo</span></span><br><span class="line"><span class="string">rhkXLLGrJGbiAQYTzBmWeNlhbgjqjhGNfCFqkqXZhfWNPJkwccXThqPQZeKCAALxRiRcXCaUurcXFgXS</span></span><br><span class="line"><span class="string">xUksVTZAWsBjqEEaIJEQWPOhTxXYICwEevvSAHSHYhLbbTZYnVegsnPfKlzYbcETlMxHvaobhkfgZpAC</span></span><br><span class="line"><span class="string">mpCPQSaAqNxODDvXpmatZimnoTDiTBzUvAJsnmjQlVrgcVRKqLiTBLufkIikMYADdaAmlHTzsYfTptvx</span></span><br><span class="line"><span class="string">ivTpXStEBDDbUMzYhZuKXnpHkGnMAkNiwYoUozrFKkqMtgIgoFQvtYitWZyyzGmQEwczyPBcNnFtWIVc</span></span><br><span class="line"><span class="string">drwqHwrGVfxaotCzklCQytcHwScKUcCDxvzwXDBpQjvJJJwgpjCFjAhbWPAkeuPjADlVszqmhvICfAxO</span></span><br><span class="line"><span class="string">pTVSdihIonXuKNlItdVovVeTdDjQUYmegUfVwQvvLiBNITJSBjZQugPYoqNDrYvnPFqbPSdgeFdEUYPN</span></span><br><span class="line"><span class="string">tWAByhFvczFngjVlkyfVIfGctUNmWKNsvAYGwtscyuDquGZRNBjTjwHHthPuRqZYvlrCSngluqnYnCVH</span></span><br><span class="line"><span class="string">ApHcEfEVdFQqmNXnchaYcaFUeMaXdRdBDMMRhYtgPHEAoCAQGjrflNempcAzkjVDKMMUvcAAsTHhtyoa</span></span><br><span class="line"><span class="string">MrXryGtuzPwNALIDXkAxPzlnEdumfyyFoEpVpPxPOPqRfdXUcuMnPEklqscrUaURGIBcRDeFWSQwaQyW</span></span><br><span class="line"><span class="string">oYzTwbyRkYYKeLcVGhYTjxfgsjlzrpYcejXiMCNJCBLlcgLXXBWjboZiCCcOzQEShdOgJiUppMmXcPWr</span></span><br><span class="line"><span class="string">MwFyzECocuxUThLXWCeIeCLwJCqhQHRVWrGElvmzYPHOGcrZnqNCTbbfCKJSIKFDkCYvADrIQUcXDtNZ</span></span><br><span class="line"><span class="string">IgiScZnkrGasaabpdRTSSBoLXgvydvWhJIeMwuDsQGKMZCiSWfZUhMHVqRzWjVQjkSvVcZXenHPxLJEA</span></span><br><span class="line"><span class="string">WdUszbPlgBpEFIllWUYLSSrCFzRaxnDdmeKMafRJObKINEhXNQNCTNqdJrZgwaiBLPnJEnfaCBeFedLr</span></span><br><span class="line"><span class="string">UKeKgVgKjMJGHOgPKtDtJuVHSNSKBcIAFuCrpbTeWWXLmTNJjQtSJYWcPFbYkdiLOSGKGXqJrecyCRyN</span></span><br><span class="line"><span class="string">XYCLLsQIaQBswfBqeRdweHIUXphdGutvfSRpJYBHJJRgdHyTRQHOxJsTNxDVvoHUKWDESaqlFKXsFUjp</span></span><br><span class="line"><span class="string">YswynCEwuuJxeWCQyqJlgzCsPoPzZzNrXSHSvYSxYiBPWZSxTOxSSfmaVwaHiJbQqPqxKYDxEIzXRwMK</span></span><br><span class="line"><span class="string">OXpSwUmsJWxOgJpWINZGjhDVzavHaKrZQXHBSMQQfyRUSSqxaCBSkaCfTgkIMiHUfGRVqitkhbtxeNXT</span></span><br><span class="line"><span class="string">NFWXdDNMsfOKIVBGAhcNRCfdgXRqNBgFBjFDHdkCfmgGIisQRdpBJiSdnEovouHCclqSlxtrxLXiTAuP</span></span><br><span class="line"><span class="string">iwKdflSSFFpTVmRrnUXnGhRlFXRUDqdTVXBzbVKTNkUPzgesQIFlGTvDHrCOPyPBniEjzMeFzhAgjDme</span></span><br><span class="line"><span class="string">kpbAGoXMrUTnNzFcuAatWfAfnREdgDCgbwoowdEhxSyMjDgtcrrQrUyOHsaLqlUOHwqJubbypbNeMaWB</span></span><br><span class="line"><span class="string">shONFhkqHaJjBhqJYMUCYVDlHSJUUdSwzVSMftLcswQTgdrlILUmwgxPXCJtyrkTxiIMnrpMCdTjpbWG</span></span><br><span class="line"><span class="string">VKXCskRIpnstSOIPZzTFMRVVFXnmYCgZBhqSENxVgZSiPoEtvOvVoaIcEVBEMxBOJVBEBsXKmDViExkT</span></span><br><span class="line"><span class="string">nIdHxvBOfbHewLetJhpcKucAcIBxdUtNsQpGRPWBHwXZtPkkNYmTelapZlnqubIuzLdyrGmJtvohZOzq</span></span><br><span class="line"><span class="string">knuzmGoLoLWXoevZhnqUGYTTFDlfwthkaWcnDdFePxCHzxzQeFAydEwbtScanupNEgrcvJHEaTDUDKot</span></span><br><span class="line"><span class="string">xfAmPalpawdjaWJcrdBbLzovievkqoWfwQOEIWfedXxmwheYzHMhrLLZNXwFiJwSMwFsRfLoWoaJZdWO</span></span><br><span class="line"><span class="string">ExEeFWCVtdZdHATKEojblqrBRkTiozrhkqWDHtCzKbKWqovUSSfZwADhbRweEcYJwefQrLIpnBpPkEbD</span></span><br><span class="line"><span class="string">WvblUKqMzQYDUehEhdKmUyztQwYVsQLPIaSbSVLqrbriclOBFBPZSmWuVzXeHBUuNyTyjqaBCLsvposN</span></span><br><span class="line"><span class="string">ZgQSBxHOeqhJOVQjHOEIIgnTXFMogPRubgGCoAXUbeWOwsKhzwErZFlRhVyekmqVikDmHhoqthHtfPwJ</span></span><br><span class="line"><span class="string">cyFEiqsvjIqXhnsfdlgrGLRKSSnToQPigyYLDinSwBcWjPZOEIxxTVHNshimQdDkFJlEjRCvpaXeLpAo</span></span><br><span class="line"><span class="string">AUOSNHPfsqyMvBShSMJTmtjOenUyqIJItAwnajNxQlXvQTmFCASXbzGTdXXbDwZAqaFYSZtVimjYDJSv</span></span><br><span class="line"><span class="string">eIrjOaMNefCkdbnRppdketixIDyfucQDAseDPfiMrDWDgHtTjcaVshntQCEkycELLQvuPFtzNcozMhEe</span></span><br><span class="line"><span class="string">tTCSVOGWzgQNXfVEsArjPqYSIruIHpxFDSdOowanKuAjGWyIEMWWLLjyoakBEQXSWGcmtjhkfimMUmdT</span></span><br><span class="line"><span class="string">aObOONOlFuULDuofFbzwrJuukkCDTSvTPRMaovdcgILDADJgmabOVixkUzHDlCfpYTWPVBKdCvAXZrLc</span></span><br><span class="line"><span class="string">rerMOoHerwRQzHSsKaJYfRUiFrDnhlSKbbVvCNzKTeLpnrYKqBhJmIcLxYpzymwQXWbaiLIvqYfwokkq</span></span><br><span class="line"><span class="string">TVgZUHUfpkuPqEigSClUvLpQhFKjyZFeUSJlttPHmwOSSZdbuRhGYYqPeyVQnRBqMyvxTBsYPyZAbgIX</span></span><br><span class="line"><span class="string">OcHTytvWyKVEAROTmhOqsqVxkNsqJUGWlazLNaPqjHZbdyiAGUONrxmEacqsvGSlGwfuupJRpTOgnxPW</span></span><br><span class="line"><span class="string">wrYebQZiwCoHcqWWCyKfOExPmKEmIELCJWEuZqrBZhGrJiyMzhjcwJEgAFocJQXKTqtYWAYIHrgHnNKb</span></span><br><span class="line"><span class="string">cZoExqHxUzeOEKiVEYjRkeiQyLXLRUAiPPviwCyNaOzenFIkNDxKMcKanMNLNVrYociOBCVoqQPgsrpT</span></span><br><span class="line"><span class="string">OuEIVIrNDpDaYKYmZPxzTBFnvvJcsddsMqNufmMjlgmBezLzIYAbcxjGzteysqbKEjrNyZsmtAjRpZwx</span></span><br><span class="line"><span class="string">VaBzxBBlwUPqqFFGjrsCMmgLleONXsYRbUuhjilpjWnGmWBOIPyezGfykdVoqXwYogobBuSYiOKAlygl</span></span><br><span class="line"><span class="string">PpZhzLPVBbpjuoVnFiixHTsLpDzOtXvicTuCWvZTZKEEIGQUVAxfnLWCQvRjTZhtkaKlbNQgXgPxXCbB</span></span><br><span class="line"><span class="string">qhsBlDzDvfsMDPkWdEqetzqLGTbcMEVfyGNkcuryLRALrnFacZUGFDKlZFnpabuBJfRFnKgPFfQcoXdV</span></span><br><span class="line"><span class="string">aMPEEYLanBwCorIgVHAGkoByfeKKSKrmHNftXxppyQkRuPlYnuCxVUIOtZAUfYmeVHqkayoJntuwIdSq</span></span><br><span class="line"><span class="string">JqNaXkkEzlRAAzYmIhyjysMhdmiWoZYbCNjfKTabKHAVPoZuuwGHXJHTwNwHxVthJGIBllCAAEWMwgEY</span></span><br><span class="line"><span class="string">ZXhBMIVxpBFPVsOHxngupQyzmjeugBPJEeEMIUkJXYrpxstDMuRijoaXHuLIrxYFICrlrZUdnCdNDzsL</span></span><br><span class="line"><span class="string">uUWxtCMGOEFWESlvsvRmWUZJGjgdeNORVzuThEkxgeubvkuIHoGwIhEbRKzvoOuIejNYfbtWRRhXIhyE</span></span><br><span class="line"><span class="string">bjhCRhmwiJwxsrtOgJoeLkehKVyJgcjAkcVQLlkJzFjrurajmrbqtoNYCfbdpHWDcPDFKkeNEEuDdzSi</span></span><br><span class="line"><span class="string">pmBFiayrFfYoKQElCPlZZGukmHmBWaQqFpNqXOrHddEgjUeDLBkhhYDjHASqNqmCMymxqzIdEdySmfJk</span></span><br><span class="line"><span class="string">BOsnxuaOLJHIHridyuJlyrvPBguFxHaQtRCmKiviTrOPvqBcbkQvYtFzXgIBdRMIeOiJOPGybPBCocgE</span></span><br><span class="line"><span class="string">CnctEvlfNKaFxddrEQsDDHSSlQPdTwynNrxYdCEHZDvuSernrcpFHHwqdnAWxIYQynKJOppbuadbtQjJ</span></span><br><span class="line"><span class="string">ckoBSzOalnZoAgnfkcxvQpFWaBMqaTOMsEOepUUDLTNRKYKnolBFJSGbnzdaDUKwKOdPfjMzAxVArQtT</span></span><br><span class="line"><span class="string">CjZrcUhtaEnnPHbtyqQKnJoilIINLujpMbfPkAgiQnbwkdROzgHYGjalACeiysIipZPhKMqYYUDDfuIv</span></span><br><span class="line"><span class="string">WTLpFySWHkfOFzbLnBsgNYxUtXRdxOIDBWMAjqkEwLBbghrFRLUPQQghKCUmqWPAlkpzInJQJtpbSIVz</span></span><br><span class="line"><span class="string">DlWOcKqqKkndFjrCeMolygMcTwegfAEBYPfMoCxWlYqpxUBmczVBCNJTsLnjzsJTRiDVwMBvZKqfCwwZ</span></span><br><span class="line"><span class="string">MYkyslcYRrWuKehFUHxRNeeZlHeRXjcnhlvfAUKpDBjeaWkFmVJlinyeoUkXdhYJCiIdxlklxGjUnTqB</span></span><br><span class="line"><span class="string">rmNyXvqRyeXfFGqguhDSgZNHKGNyEmDcSbVDOMtSsimWCZagSEdcteWRKSSHPMLnqJToSlPAyREhXYpd</span></span><br><span class="line"><span class="string">BKKYrwBRObhoZchLfAysiMtSejuBChwiLUWWFdYjwbGMpFGjjfOFlJZTlogPaCqpFlHYUHQvYlnMtdwT</span></span><br><span class="line"><span class="string">kyCEQCswnBZQCgQSBDIZsHVvpoSnvNTrfyiDaDVEYlDHtfaxiuAvuNcvbokSRdehmmVxknxJfgMXiVCy</span></span><br><span class="line"><span class="string">IbaLpmJjarPKfRTuqQIgSDhaNgAFjVSBpCiBOyffiZSPofczKprLNsEZKSvLhAkfzkUXXIdGgIUZVtVL</span></span><br><span class="line"><span class="string">qTwQZeUSzVQRmyYEsmzpoDNGCCObvSzfnOWKiHlTagCLjVfjSmOWniRTSpERUEfgXxxlqHdYiKaLHWZB</span></span><br><span class="line"><span class="string">wpUBQMWPvddmtKQaHJvydcKLLzQYnmaRxaoUERtLttDvLfcaLVKRkWJMxbHsEOurAdJsypyIDEGBcCAG</span></span><br><span class="line"><span class="string">NnfFTkxrwNtZoSMwcxSbsuNVRikDVitQjHNBThTNlVpgRJgGUzHEThEPvBvpEktiNenTDxSpPaJCkVjB</span></span><br><span class="line"><span class="string">CIwnAeiTfINZpSIpwbAUCfOxQhuMDyOFlyyeFsjtzAvWJMtTyCXstQSrqQMHOjHwlojyoWehOhIWLsTa</span></span><br><span class="line"><span class="string">kymFrtrWWYCAzeFmQUExAuRxPEhOHIrsnGmJhDclYaZhUZQedsDjgvVSuPhHdkkksRMeaowOVKADMlKm</span></span><br><span class="line"><span class="string">ofXKBFkQRwtpbFJSXWfEZEMmAysgnXmkaqGjSrUjUIYaNAxsTknAXGxgpUfozlXEbgZwUylGrOFuttIv</span></span><br><span class="line"><span class="string">WKbtXPirrhQUTnwYtcDQYLwPVtYtgCHzASWzuVfzkNzaLaGjbFrsBsYUXcolElMsbnLlMFVxzbQmSYdQ</span></span><br><span class="line"><span class="string">DHfPrcyRouzZYyPssmDngVCqVUtqoNcoXzFAyVJFHGQJArtTINAXAtecplVSJwVPYUViwJFgNBqvModI</span></span><br><span class="line"><span class="string">mkAZPHfkTZCoQqoCEQakqeqXyymBJvCcKFTjICipyYwloOZNMSTTxQGzSonzVOADPFEpDxuElRwdHkeK</span></span><br><span class="line"><span class="string">MgfcNZwMNXbngNVFaXiqTHlkDFWqZxmXiJtqNCDtoMenlzZcQTPZKDZwOGkTpbkyRjIQvhCrIYvrbWOS</span></span><br><span class="line"><span class="string">LWqPNKcjbwxTmRyrtQZhWLXqloHYHSuecSPgLZbbNVBWSGCFFhHrSrjlXAZKqIHWKGUpcdlrIQDNFkXf</span></span><br><span class="line"><span class="string">BBVJEUeUtQpkcrdglscTOXildskXnahYssJSuzDEwoQmvSFBGMifhgPKlmdQJCfmPFkUhNJLQRWqghHB</span></span><br><span class="line"><span class="string">xFcKRWkJfIQMaUsadnOSBXnoTXwIfvWmOhjvnZXuUoqdCPWVIsnaHwCFvMJKDwHebLtPdBjZUIQqEzTa</span></span><br><span class="line"><span class="string">nEuyPmaFgTolmcnRsmMIfoKJQrXgxGQHaVsbhCdoQlQnEHiqioCzaqtydzdKWGZSfbUrQWLbSuMnsTqW</span></span><br><span class="line"><span class="string">ydzdWWVYHNsxzoidjcfOGcYDLyRQayQUzcrdzTsQdfMogLEzLkHEhTGjWkPKGFwkvjEbvhjURhEhMidw</span></span><br><span class="line"><span class="string">PFZcQxQOqPgzUreVRFrrkeUWzLFNhbeBSRNeswTlPdxGPUObBDZYyHyGQwxUFWasdvRdMlwkInrvXsHK</span></span><br><span class="line"><span class="string">coWFHGMNCjtSZJjnbCuxCLFUCuhZmvuUCzAfvDlycyiJEULgxmSBiXdaCkvdLvVtRGsWmukktTWAfpNW</span></span><br><span class="line"><span class="string">QCBRQIuMSlXMkwTNAwpTHtyDaebUCyIeLaQmemvvdZglCvOydQyVdvDQBGTPvPUOqqHpoEZleIArTNFX</span></span><br><span class="line"><span class="string">RgMGzPgYUPXGkQDZlhtSNLoZJJAmhJRPeNvzyjdTRsLdrfDuAepKYepXcPihtPECUtiNQrSJdOsSGbzA</span></span><br><span class="line"><span class="string">BGWIxMXaSjzzDzVqkHVbibAisltfssoTuJmUdJPeUENFVMveroIieCsLkCnvGGzUdEuKOAKiHxQYEwyP</span></span><br><span class="line"><span class="string">oioOJjRbnDMonbshoFsNaPdxXlwsBQLrFlrWIRKfLdbszIlBEkqgdATekdEixvLuBdHknwazptgQLxxB</span></span><br><span class="line"><span class="string">evFCAEiFTLFxDUSSLEfsDCBTjyLLasGkbxyvoIRGUEqZPeNcCagzIQzcbVbDbtpgXslVhiZOSxQCtBlf</span></span><br><span class="line"><span class="string">ABLesWbOkrUOGoaqRwjdlgBupkXwRoZXrxbgKIfrfBmdXjDWZjuOHLozjlFeiJrZnAqcAeVfBWxLKbRp</span></span><br><span class="line"><span class="string">jSoIBhATDmplQugGuYQVtVqNlAjBINViaWxckAbLkjHRnNXTuetAmFyZCcaXpEZLBxtXWQRkJRyCCmKE</span></span><br><span class="line"><span class="string">PpgBElXvuusgWfrHQUeFcVtbuAxSepfIVlXXxcDEtaVzYWydOCqnGPpOzNZoGGUEDAFtwbIFVnJsGnfy</span></span><br><span class="line"><span class="string">fnTMBWoQyaWQfFQqptnXpJfJvIsbQwKEdFlxCTBunShAHuWbnqTLPihrielsbybdYeaYubxJsJyAUfqp</span></span><br><span class="line"><span class="string">qudvUckmprXlJqAcJjUmwqALWMxhzKYlHrRqPuTdrbsoeFfJeFQaWFmszfKXCtrosDePvsPdVCQYLJZt</span></span><br><span class="line"><span class="string">GykwDMYjRiRNpMRwGSARgQvLYONgKsuCWYPHMWbWdMnCYCVAKEhTFwIfscmbwsTaxsQIPAKUdHUkGntD</span></span><br><span class="line"><span class="string">FbvqwWtzJbSlAbUlTVPJehiCRwqgqujWFMIZeoTHMKZGCeJLbjBBocuRrQWvaJZWrWgkyYrqPNfDSMXv</span></span><br><span class="line"><span class="string">mXFIeHWGPyaKTtnuEhKAEaIqwVFlMyhxpLoNxYsNIuvAimZDHSHVtBAduDGBzyoJPtxAZixLYRKAPIkL</span></span><br><span class="line"><span class="string">zDpjlKDCIvyLyLyNedBhAGduQNZKntNgxLUHiElQzKcqwGpvmhzxKkagautPQdmlFDvzdrEDtWPzPADr</span></span><br><span class="line"><span class="string">nNPJpXeXDeLGkjSDpGcvMeaWAWdLqkKEMHKuhXdvSNEyxbbSmgHHFfUelKYQpnUKCRWPMueBoNoWYQaK</span></span><br><span class="line"><span class="string">jtUtlBYbXzZbmcMROYzMctrNzNIPYnqtmwWEwKGDTYxwsPdYWFrxinGMVtPCGIfDEpjswmwOGvtTIGtb</span></span><br><span class="line"><span class="string">AFcHFrIYNpXMBTRWrnkqVOYlxdlykHBhXTTfwkEgAUxYTjNkZhHUYOtOaAxXpOapsglsbNsaaVrRTBIh</span></span><br><span class="line"><span class="string">VfkfiPnikQiMyvtchWXlpqKvHdHFfzQPaEahhzDbnZykVIjgGDQpbplzmaSjHgMaprAtaIKturuVBsvY</span></span><br><span class="line"><span class="string">aEKURXCujyLDaBlzHIHTrtHbFUZViUEXKhgvJCfOHZBbDCjIgxkXomvXUHTbUbcSTVGWAVytlETfErMv</span></span><br><span class="line"><span class="string">ItwBzzQDKiKKTFIlFEZgZjfTMaxOTSlkjRyzwRWFRTJHYuwLBuAiDLflUJHsTiFdSfDbLmdImCeiOiqK</span></span><br><span class="line"><span class="string">CebCXyndXIEAsHhMmNvUaxjCbzdkqQhHSWTQUKGRdwEePIVvGdpoxRmXDuKONPAOUefQGmKwOHTLjVWB</span></span><br><span class="line"><span class="string">gqapSEdFZpKDJfeDcbAsXXsthvzCKKLoIWwPvNiHxoJHHSdOdJEFYCaBIWIoIhDJlZfDtgQYKxOwnFvK</span></span><br><span class="line"><span class="string">oAItxJIVwhyLexXmXUqrOYskMwYRpdtxNkZAmKUEUrrXHYGCQLcdiPGYVhjHWuCTwIwoYXjIuTmwuYmh</span></span><br><span class="line"><span class="string">BzyzVTaCqEAAqibouxrHnJAudAAgVJYxwaZADnMCZqTiPwMrMKThramDajoDliFFxZSVlgLLZOZRUvJL</span></span><br><span class="line"><span class="string">BCuVrBIfdGuAevbTDmjVPSHhjLUovAwMsDJocZaQSuPnnKzUjYTJidbhzcsqhaTWyGzEUKyZzSfRVmes</span></span><br><span class="line"><span class="string">dSHqRRVRxMlpvENmlotlQjTeSdFRbzqCUkxEGdwOCVgKQiSMfedafoHVQhqqiwsLLkSPPJMykVrewtrv</span></span><br><span class="line"><span class="string">yIRxGfyEQuVCNawJlaFfPkDMkQAWWrIrxkkEawYzezZdQuHPJTTVPAEGPMYxvjqtjGDIgAtNHtrKHMGO</span></span><br><span class="line"><span class="string">byLBmGeSgoNiTrYYjZTOkmfAsRKwAGSoWfYyWOvsQbWwHPzyaHIxbpcgEREYAvUSHUGTVqDVSqJpqRSH</span></span><br><span class="line"><span class="string">VkToHGidcmPLnCXXYgZzNsptZMchnaABxAmMvDBtGGFyfkJZahmMgJKsBGpjevwpMkMIYYPATfrqIhIb</span></span><br><span class="line"><span class="string">pvvfbUXwQhzoZxrjqvrXocQbnUuKgzjnufrSfsYYYUUPspWXtFHtQVRtcQENGAtEtNYZOmlFKspXdiIH</span></span><br><span class="line"><span class="string">NBEyfTtLtKaLrCWOSLetLgWLQOlOaooWGBKAvlHbGyMBUVwmVzDxwjFMjrsnGXqxqiecWlNykPEsdXHw</span></span><br><span class="line"><span class="string">vARXORqGmAAfUwxMKcmsgcbWllzfgSQuEeZJUTPGwnsQWmFLIhZKgURkcIHfwyBBrAbIcqMQywmlHIzf</span></span><br><span class="line"><span class="string">UPHlxrWVFdcbcXSACjSmNCzIYqInTBcIvFbjJWePPvlFlzGBMGUuVykltYuwrWKusMMFFqAggZAmxLVM</span></span><br><span class="line"><span class="string">RiTLyYMDaMbaqGryLVRJIneLDMgXEabLZzCWqScbrNbCQytUuXngihlmXEvnfXMnIZDJocTpLVxJHMSg</span></span><br><span class="line"><span class="string">mcTbaSIvGdRPiFbmfPodhhnjLcuPtzWoQWhDuBGWODlbEjQhBaEDhSfLvwfskZEcjHTFDLjSMMVOqtyC</span></span><br><span class="line"><span class="string">eBhxyoGgXHFrtuAeSfvGwofQGaYMTjeNdwEQROfXSeMppntqEzfHOyAYwzpfWkjPtDWHLFOTrMfDIwRh</span></span><br><span class="line"><span class="string">nqczBQGCkmKNMELQcRuiaNCkyexIcRKdpZnGVUZKKEcKXzTUMnptpOltRFaKPZBFNEDjFZVPWwCCyxYq</span></span><br><span class="line"><span class="string">zWFozudJphWfyitiEJFmdQZObBWfbvwNDBWgVANAfKprhpLDxGpVGqVeLxSzZMegsTRZqjgsUkBQnuCc</span></span><br><span class="line"><span class="string">aodEAzGbytDbNSHFelncfsGORqcIDdpoBjHQFGaJvWljCrYaOERqZiCNvuJwSwjgHzlucUZdZCjbvbzR</span></span><br><span class="line"><span class="string">DiDJIJrihgKKYjUkeLbUIxtlXyTNISgwGBQQrRpaZojKdgDYHkCjUYvHqwYaxPOcsBkXuxyTcXxQWOXV</span></span><br><span class="line"><span class="string">tPQaCxRulVMLWkMUklZLWfIcokRzCqYfjPFLAaqLDJRRHxDhQcghDZBpubUaxeqDfZAPHjkFbsNcVjRe</span></span><br><span class="line"><span class="string">VCOHhyZUQTikaOgcDRCRUEJbwEZNiVmlVPdnONZGGVRrZVkYJqmVWWgqBfackacKscdQVfcAZJGVSyro</span></span><br><span class="line"><span class="string">gDXAFNBUtKHLRNvwhmwDhsWXcdSYkFnDXgVHeOBdZLgwRbgQVCmtoYnQzqwVgUjzHDsvpXooUyfIMiPw</span></span><br><span class="line"><span class="string">YmysIfIEweWJxniRNsKFhxiqHLvLYeDiaoQbIcIHlNXPNnSckAmNpyWjBIiwFpCvvFnfCBbprBuvuMJY</span></span><br><span class="line"><span class="string">kSwasPyyIIcJcAqnTuZqwkABmbmdwlvdEyodyUQMGcYHYDYiXCplALPjARaPOKzGtrRkDKGmpnIzIVBX</span></span><br><span class="line"><span class="string">ZtFYQalbufXohcEgNugMeCgaRfqHshDAXGqlllKJbOcwgkFZllfDdFosytEeAilqQUGqOebexdRGTqJh</span></span><br><span class="line"><span class="string">GghElmZsdLyTWNlqvgaFRYzgHuUnQTeiQYOQXFpLMMdcNGUOZVaDyHfxgGzfyuVsBufICpTqHVOmMxVJ</span></span><br><span class="line"><span class="string">xdtltabNCOujEycLtiKdbdsfXCbXUBLPSjKtsBltwcaOyRJACPZMDxAihkROmexEJDenUTTmkhxjLGKc</span></span><br><span class="line"><span class="string">MCSRvRcaGYDLymKzADvpMNonCHrzxUKJCXpVSsLKlnduRBGvuyrjeemEwNXIDeDXsRFCXPAbHLjPKKKA</span></span><br><span class="line"><span class="string">tlsmDvkPuxmIPiaUfGGZEMKOUVRzCixtcZkhISXjIxjRCiKEAXiXugEkEmZSLUaXXKeeJKEdFJWQSzgb</span></span><br><span class="line"><span class="string">qGDJVjkPnxMenroKtdNhHnZFlSpmaUsfUJuayiofDzFTvgxszJJbiCCgilhtXUPDBHruFKmKsmJearYX</span></span><br><span class="line"><span class="string">IEmCPvFsogLQBFhutMhhbYDTdFmcjrxMmfRphlmvTxdNpwFouBskObnWTSxnPWJnhBRvjvRdrkYSGCUX</span></span><br><span class="line"><span class="string">MympZGIzmOoQOPmOkFuXWoWTEAJjHZyVmVSOOBeUjQGHVlldMumXIicYAVwmvIwbrScWfWEkAScmElnA</span></span><br><span class="line"><span class="string">nJKAIhBZyHWMVWVYRzImgMFAnIaLBmlthKllzcxqGinKZnqwjQlRQexCcAgGhPtwOjuigvHPrUiigiiN</span></span><br><span class="line"><span class="string">McUUSPFcoQLIeZZaOHkfuHYUZGSoQpbsYhhpSwnzsHJnvcJuJSVpLgmrnanXBHIypNqiAOkVMFZRpTDk</span></span><br><span class="line"><span class="string">EpvlzZKfQkvSNogmopzwowtIZipNGXnPQnKBblCkaZeXCbfByFmisPxjqISoimVyntCULdsHxoxPDHWX</span></span><br><span class="line"><span class="string">zAXYyRbnqoeFdwuClEnyyXGipqzWjmzcmoqxgHvmSBOKevKXNLzSDxRymZFBiGdWegTpZHAwOmDnnJLM</span></span><br><span class="line"><span class="string">lbiHxMqkSnCKYiyLzvffMSAzNtJIegsRYrgFupCeyezMUJGaBTvKvrrpqYUGooCdSVeAYNBoksQAafgD</span></span><br><span class="line"><span class="string">eRczFXLjftYRJmGpPaqBkPyZxeftOIXzqCxIyILvkPPxcUazpktehkgpucTAriFpHBelkKiCxHhuiFYe</span></span><br><span class="line"><span class="string">htDPQEpdaAHnKWJutWDuTBjTvIMDIZrWyZUFUQKmtcdlCPIuuCgxYThHhefYempGsryVSoevZXZFVHiH</span></span><br><span class="line"><span class="string">LrWaQHmlRBrJyIOIEdyhanEWspfizFlCcmyziGmfRvSjBZtoJbxHIasbabBsfrOmlcDurpkTmBOMBvRc</span></span><br><span class="line"><span class="string">xRnxxysHpyOSlYGfONixMlHREjmoGqtJCOscGVJZegPkFNakLTkZyMQmgNjfoPDTbuEYgXOCjhPxVMHx</span></span><br><span class="line"><span class="string">wKenJdmMwttaqOLhlNuLOhMNeSQAWGqTfeAUwLrhJbUlJKbCVxlKgDtmfllgtNnFgDOYupXfgIehTRxq</span></span><br><span class="line"><span class="string">BZVHuDrSPRLjJDNXEZDTyRuHdlWjGJSioQRIQSPGjrSwvDaLeGJjeeCknvIObCWBHTDsvddwESblbYlr</span></span><br><span class="line"><span class="string">ajzXxGtWusxtqGldzuPktaCuzZWVkYpGWdNaKshVDLyiBqcwFVUVWkQDHIEMMwioKCkfncsoxRiAAsKr</span></span><br><span class="line"><span class="string">HqrGWikhYNHVnHFgVETojFiCAiXuFGVCWqwqoUFYZKiIrTKqkKUSXPvGmhKQfAVltFrJzkuYwmFLSxwp</span></span><br><span class="line"><span class="string">WGnatKradVKJrWsSgvzrjRWPhXjwiWnemBzxMOrfXJIHXqLfzidPeAwwtDBhxeVvSRNObnadjcSZqtxd</span></span><br><span class="line"><span class="string">rvnWPWVpTePmzuRnpqKsyBtOSwGNtUVRCgxRZFiNbNWjBrHRybcAJXzQnXVmBruJcqukaUXWCTTbiLWj</span></span><br><span class="line"><span class="string">oYaghMJbILirjdEKfuhWvdnjCHyMucvyeiFWpyqMzZqcjXkWnCYlLbknibHgkLRSCQraLmlKKtFQSLBE</span></span><br><span class="line"><span class="string">RamducRBSiyxvagREWOYkhajmYhmNNSQQKhLJchqHiDeVHmIEpeELNhffDrijNQWLgNEGPxwqYAERMDL</span></span><br><span class="line"><span class="string">uAETFcxKoGJPKcMELCbPPPblFHCgmCWSZXxxhubslaKRzbGNOLfBNfcfWsEWFRIqduaGNAhptdTMNerh</span></span><br><span class="line"><span class="string">EmSMyAjBSEbwQILZCZTvsiEdQAoPmBVhRAXwaZlqEDymjtuRvzllxMNwzTDMslgqnXfhwFFmqHYbbDPv</span></span><br><span class="line"><span class="string">nGKmaFNSrwbukcCxykPUtkehCVwzOejgFalfLurrenvDTRRtIixVHIJRqydUjykMegTIxHYBMznwCECD</span></span><br><span class="line"><span class="string">iMosgBcQMQrrCHoZmPSuogrDyNzjaIjFhHpiIFfhEvHFxTnYgMOnjeFKDobPzHRbJgHttVEZZytPpAly</span></span><br><span class="line"><span class="string">NFtTshLEfvOJsXmccZxEiWXstbTGkNbjdClladdKwuDbeZKrjTTwPqxfNTPkBnrFFOrXNcipgRtEyfcc</span></span><br><span class="line"><span class="string">cFeymBJmljXAPPZYnTtWkbKLMvXUptrChFzIIipBUHdLtQDprqjFikfNGtKlJncDsuxqvKpUkdOuldIO</span></span><br><span class="line"><span class="string">DPjXQcDuavqKLzdKRODZHXRAomoQYIDgmAqpsabRqwYzWSTwCIpTBEXCUWABKWFwdDsmFhbeeZrAOYOm</span></span><br><span class="line"><span class="string">RJBIFHsZMmvUmQJyABevhJMOAQlLBDOjqqbzBeAuulobucnIJAAuKPQdhFtWgpemMufedKYMNcqnXsOG</span></span><br><span class="line"><span class="string">MeZnwiUTFEGswSzhSooxkAPYWBVbBrzgQHmAeDHAgIUzPrQSzzhUoavELRxadAnfSKKbqxsJAkXqhLHE</span></span><br><span class="line"><span class="string">JhfdFpIUVrZbbGNyOQvCyMareDcoAuyKvwZwBgFwdWdgISeGoSEjbTKgslphXdCgZYoKJRGnHQaRWiAo</span></span><br><span class="line"><span class="string">jZrRYUqwaOxvyWtwuTrtIYJfQxqOAqSRlKmIXRJfrbqjEuAOTmrjcKEqhEICDiKMheHqWStLhvvxXtIN</span></span><br><span class="line"><span class="string">cjruyqNOTTGHmUOzMwVyLvrZemQnEeTPklgPHsEZbEHPoZntcPONEnpphbWOoFtEehRHMbqngyvzHPeL</span></span><br><span class="line"><span class="string">BCzjFWzkuQslJwpySgSCQFKUVsBUitjZAZYFODtFfUlnLfeOAFGSKRtmEhtfSCZlAyGxmEsEoeNBHCQR</span></span><br><span class="line"><span class="string">lWylbJXXjiNuuITGPBKBtuWXKhOxzCScgcMmndAccGAyoBNJscNgKNHaHKYXTRmSfGgHLtvZFXkHoyhg</span></span><br><span class="line"><span class="string">ZaxeAfsEyBjnoqESAsCsnniXyAEYzFEtStqAxBPdXEzLgyQgOsFlnOlKRGMCsKUrMohUTqlaGsDuDOvz</span></span><br><span class="line"><span class="string">mImcUmxuaCQKKrchwRLlVOkZOcDAYQKxyzinZqeYRSBSxnHjoaKcKTCpmlCtpoCLTSYiNYKjnvpmtSUs</span></span><br><span class="line"><span class="string">TWTfELsPZvYfnNWLBdknXyZykebCESJhoXdWdvKUutbeTwYWHJinpEGnvslSURQTwwCWoCJFoyfDLshy</span></span><br><span class="line"><span class="string">wZxvIuMPINgiVXoaoKPiuCGNjlYJgfrBKpAJCeqNIGsAujIyTmFmBrMYJUdHVAwaSgBbLjSNylBrUiZC</span></span><br><span class="line"><span class="string">xPuvLwFSOFSQHesBIjhGNARjxiMEZEgIGBKgGoQqpGMOhiflhlduOueYcVotksOXmzUjLRyQoeSBIbUW</span></span><br><span class="line"><span class="string">unHnvdvbGHYAuZPFhyJGAZIMOlIZsIERQHFnxsJtpYZiZLvTnifEpZpDbjLvRTHTmACEDkSeTJpNPIEG</span></span><br><span class="line"><span class="string">mZcQZYJGSScwpBgTODtKXmLaAguWYSrnNuPceTyggWebhqkEKThkAIpOOyFIzuKiCTZgPmzTasoBPdtK</span></span><br><span class="line"><span class="string">bIxwDdateIPvTClZlYxcQEHFaACrVCdAOlUjHEZqkmxRmbwTaCPjeBJfkzEIqqOdQYnKoKSZqzWjGscY</span></span><br><span class="line"><span class="string">gJYWxGggGKFcjfdRdTNspAbgRfDhmpGlYnBGjncslXvnKKJinsXFuxcvjfjrtpZkXwBpXoCAmcMMeWgT</span></span><br><span class="line"><span class="string">fcjWCUYTYphUKGzdCDiUAWeuZoDiXOCcuLBspagGbNlOLAyillWIclOuUIttvucUmkYpEysuoDRHgSbi</span></span><br><span class="line"><span class="string">jScvFngvPJKZigDwbtHtHaNuIOmMQAPHCDdCbZjhOnlDoOLDrjtVanadGCbgIuPQUBBLVszGcfvGKrQC</span></span><br><span class="line"><span class="string">MHlXFKZymdydvxrRoOdGZFzmFcesHZVWpDhfDfwEZfdPoibcdubWjhIglXEayrXAPmEYcLZOcaAVyOQm</span></span><br><span class="line"><span class="string">IkjPeAMKTcZVQtyLKYZdJQSruYFCgowDaNMwjWFxpIUSzdxNQaTSIIwjaWMMbodogqFTDDGsIBJZfJLc</span></span><br><span class="line"><span class="string">VcLGrDJleVQfyxfvTeXUPJAaMilfehxanbAuLCWtOZbBASbpsgnUIgfLfvnTxucBkyJpmQRapNWvVArk</span></span><br><span class="line"><span class="string">rokQeWrvwbBNLmigUuyRBsIPlLZsSdNBvpxGbevNKgRNAULkFOQsGtSpAMsMugcKUIvxJPDFtxBKROsf</span></span><br><span class="line"><span class="string">uRLUQaHohRcRmLqLZogFgeryzOBgbYaiyGBWTqgtdlebIriohWNxQnkQesrkNDcfMnCzKDsTvtcwohLz</span></span><br><span class="line"><span class="string">BeJamVQjlGmwTLwZjQCwYirfCofEWvJaFqtyMeUHGPUXBeEqOBUuMKPDmbjKpcfYpOJphvjhJKuneWfT</span></span><br><span class="line"><span class="string">dMkaMYrQQoQxjrsYaUFrUEVlNgWGECymBkDkUNWdWyQdCRbySuVipihIkOUNWleXrkjlyVgmSPuwmijk</span></span><br><span class="line"><span class="string">odqIJmJdPMWWNuBarcUDEJKnFQXBSnFwQHuZFestfLArYTNwhthVChBYcFzhzwsEjOclqeTSvlwpJrTw</span></span><br><span class="line"><span class="string">HjldXNlqCtpyJtAHDJOdJpiEoCmblycZTmBaQxIzKxJqsrMSOeyTvuTbEyFvTeDtcpYEkCujKhREVswa</span></span><br><span class="line"><span class="string">EWjtZCKAsxHpgIIpwKRynphPXgSlnknjLGvYCaSqMsEZexdxfpnChBJxCFtnMFthfONBCXjHwFZAvhSl</span></span><br><span class="line"><span class="string">vdaGdPajvNzQrQvDkpaQQGPEmdOhAbQTdQpxZnyuasPjocwDiokHarOHdqRLYZPoJoWfsWGTVuBJZwak</span></span><br><span class="line"><span class="string">UQiTISTROVrdPhWXqMgyjeKzolwybYMgJFByrhpohQpKQyGwcvizRktWcHiqboyZlkKeoESgQGpMygyF</span></span><br><span class="line"><span class="string">JHEoZhhwLvjOmGufwXNWEOhULvaNiYkxdPVYYqdmcPMaJRqXrIeuDgmJqsEbNSxoNpJUZDdmBBDNpYNx</span></span><br><span class="line"><span class="string">CHWKZjOTWRMNXfPJMtiKhwVETHCLiZioChbRaYRIpvxiSvEMqSwoPEsRZPqaKIwKVfZTZLolAgJKXAwJ</span></span><br><span class="line"><span class="string">tRwFzBUbIakQywdDYkeSHgxAcBejsHaCJknNDAwlPJjupTWYuqiGhQOiWvLqSbntdXUbPPCQuNOzYnVS</span></span><br><span class="line"><span class="string">eNTsybAzgvWSLSiANzCXyNntNxQxuitOsuHwIfnqNWcVUfUmyEiZrbousxiyUpGqghlQhVhnGYRYkvcv</span></span><br><span class="line"><span class="string">DrHvxXMePxsFRNsNipCZYlReBqhORHnAwOPENYbhZowTAXqXvjhAmefAYjnSqqgfaJXhjmZDtYYvVrZh</span></span><br><span class="line"><span class="string">FwUnKSDJhNYfEPiCoJIJnqZaEeUoZoFJBkJFqPkJQpjOdEkDWFrFsNwIvFUoEdFbUgnXvhDIfHBAMgjP</span></span><br><span class="line"><span class="string">bPafIChIwmEByxkRvpifdbWCXQbudoVFeeVSWlgKnjZPzbHYYHgwNWYyjgfuLxuylUhlotTjKxdFRuKO</span></span><br><span class="line"><span class="string">CaXhZGCzjRcxLunlNegbTykmYhEvNiNuvxDefShwViwcNHIcELNOIYuiFPyZdAcDemZOvgexGKYmcGDi</span></span><br><span class="line"><span class="string">tRranefrGQoQxQpRHbvFpvDQqCvrggtdQIbDCKRYHIjLACSOhILXvrkZRVJeBGlFBoCASBykXFbWaThh</span></span><br><span class="line"><span class="string">ujyUhWaRrykgtnXBlkzquujLjuhMvVUvDuLxdWhkDFFFyBGnKWTUAnqPuySwcrkvRSGwkCgwBnbQWmAa</span></span><br><span class="line"><span class="string">zxszuhQlnBofzeTQUVOPErqsgRxQIeSRFYSHJfNEErclYcRtBeMmlZXlZiIHncABUEIoEBpYlInssFDT</span></span><br><span class="line"><span class="string">jFzlAgQBdJCDzVYfhUpnfwZLdFsFDNjaSyUFzKLJGWDlwrYZfYIoXqUpfQSmrLiGYdpwfUocExYCEVVt</span></span><br><span class="line"><span class="string">FhtHFYMgKEbkuLgbVjspNCJWIHRaiEkFYdNqxsthhAFCKOYMgkoviKLUcGrICRDVBTXbZTjKvEiUmezT</span></span><br><span class="line"><span class="string">lCmoBCJZPlScRpqpprRqustzcodAXwPSETjFtEfJTCRuhjzEqQrYWbZSdyrjoEVWlHfUoMNUvXqZKULF</span></span><br><span class="line"><span class="string">OUtEeCYQBTmYYYCYLAbOSYFEbynlyaFAPWYzVIONpOKXXnntLViWEOWXyxkERonpvAPouPSgNSSjcFkq</span></span><br><span class="line"><span class="string">zjnLKdDXbSSiZCIMUFDRJULNMPccfNaEiDDjVPqdxGDWGyOrgTXsHHAUmTQciOFvrozPHLmgfSDZbDqo</span></span><br><span class="line"><span class="string">vDRDIheKQYWtfiNCZsvXcqRxnZxgkrOewaebZUTkLYNgoJyOywInOdOoxsIvjBqCKDhyqjAzyQZdTgmA</span></span><br><span class="line"><span class="string">WfXtQAtnJsmOffFGYkyPcbZgIwTYKPzFMDCbQzNxCiAIFICkgChZTgHrDZltDGSSEvWlgUXbpdKgmkAk</span></span><br><span class="line"><span class="string">TYaoTqGgyAEycDkVchYNKWZGLLGXOJpJBfoauDWvmVLAGmgMXyqrpYnlXeDirpOCHOZbJplZHkfmZqMM</span></span><br><span class="line"><span class="string">wTmOdanskKbNwfiDzzZjCatgeocyQEjkjUFWWpqeVBwMiZdtPUWsnAgWjBUvRBxhSgoXRmglYsDySfMK</span></span><br><span class="line"><span class="string">uLKSDjaLQjofEDfazMKwqngbcsJZPrzisJTayalAlWPxgjHxpKIXhNFpTWxEhVqbrCsmpMArkmNSfkJx</span></span><br><span class="line"><span class="string">tCKWcwaVSfiRoGQcsjWjLRefYgnMlzDccELJJWRwGeJGJVccWEyUWjuLcmnquLpZQgjhSrXBqmzlTjBv</span></span><br><span class="line"><span class="string">MyAwGiLzJhWumDzeioBCRExLVzBYgutIUEZwDvDVTKJINyrjSYaOmsTKVjgUjqgoFWNJckprekZaghdw</span></span><br><span class="line"><span class="string">KJqnIyopMEtVxrBDAlYAkOJKHrpCCnZpSKeCqHtEkucylbAYejFAERfgIcizJVwrdDiqcersevsgfNvs</span></span><br><span class="line"><span class="string">jLwkHmCxaGQcSrnkdMqQxJqbhlbIvScuGIZsRbMvFosXsqmkjUnsMKumVOaVeYjJuKmrnNzrHgaIRNxQ</span></span><br><span class="line"><span class="string">GSEzSkQnMoTvOLNGQhXelbrDtJGFtPhdUiRETuoPWsvOWEGPDQAAlTrCUgCDEGsFLBcTYiqqDGWjzyYI</span></span><br><span class="line"><span class="string">WjfwicgTDHJJetXPPcbhERKawXWkVUckmIwkqxHqdomDbiubueRZJVjJTgioctKZwigJdfQmCCKQcVWi</span></span><br><span class="line"><span class="string">cepqQEySwGwKmIIDEZBBeQFeopEYlPGozGYAmuQhuqJeoEGugOqzDMHxarmTXmYFVIvRlhUsUgRDgFCo</span></span><br><span class="line"><span class="string">bITTdgBSuRlhVsLQhFUsUriWPkwGqBUqhmUCubvcsVXpjoTSxXXtwxsnfdDMReGxdzbxDNfClcChLAYG</span></span><br><span class="line"><span class="string">NCWaQUFNxXWuCeTaQAIecnnLWuQBaxVnVKrZfdWENPwblIiyfHsxACcWynyAYhdCYXrQQqLYPcqsdznm</span></span><br><span class="line"><span class="string">NGuFShlFimfSmzOmYBtGBZGPoycSdbKjpUCJokfkyQWpLJmBqhCIqmTunSJDgPSzZSghnYllAHdGUYjE</span></span><br><span class="line"><span class="string">iqwoRZBMoURgFNCNARsliikFZEFRzwjOQEJrqQaqiMZZMYLDnmhfDsPvDxIddsvbzvTEKeQGnLAIauzI</span></span><br><span class="line"><span class="string">LQTmjVYdefiwUFhNXAiRstGiegQLCbnMwYCVgqhoLuaaAzbAFOLeoeQZQCYEhhoMaJQYjJyWdUqVljMs</span></span><br><span class="line"><span class="string">qnkrvRdIoDkiQqOZNilnrtMmOniLLGDsOEYQrjCpzTvxVqJFIVmqhubBUlwEaEjsURcEaCQehjBjtmdn</span></span><br><span class="line"><span class="string">GuIQzCWUgBiTFPNlCyqDwRSQgmuvNMacATKngRtECLdLHWBgrwCpxiFWFrgwxjFBfrdvozLEcupAVIGh</span></span><br><span class="line"><span class="string">mvIhQyNKwrjRVwbeYQAeBGjSuKVOBTcFviENjGYOLZJFbCYzvNPrhmKQtTFZZvtUQnRpXyHuwfDpDkqq</span></span><br><span class="line"><span class="string">WttDFFrbBQtZyjGYfDmZQjUyCYeGOdczzoQVAmYtvRVDBwEZvMGUQIKOoDhhMOiYgkXuTJoAQFJVPlpG</span></span><br><span class="line"><span class="string">ynuEFZehDqfADSsmKIPZQZKxPRVjyEEYucDLsDQmiGgTCfwmQeGrsFLaCZlvygkrDXgRXCSoZdFZKPld</span></span><br><span class="line"><span class="string">abnSQcUDGwJrOnAaQQchRPBaWQlXyWkAjqBSXDhLGdkYJalftcwkNdQRUEfWBoblKqxcBzZajrGesmIZ</span></span><br><span class="line"><span class="string">ZIlsPrMHcViZkKFNmMFwmKoomvYIwxUUMHURRVCEPhcNbuMjgEicPVPRubqchrtJiSZtkWtFAcGQriQz</span></span><br><span class="line"><span class="string">HBZPtmiWpreaTQLRsVXIXETTIanFOkQEihqcrxoQzgRtcoiXESmfcyQRVoFczOPjvLfKxpflZznHzRld</span></span><br><span class="line"><span class="string">JiNjUvPObVNdazBeqAWeXNDOITpkwZMfiqOVeCndpCWWCFqMLCTBhrsEOCRuQoykxyUvNZulJxbmWgSg</span></span><br><span class="line"><span class="string">BfqDIYFSIqLBGBdZMKiZePbOaaWliGVhKyitHGLvbPfTGvlPJTEohgnecoNLBfeRNigdpxNgXWURPkyf</span></span><br><span class="line"><span class="string">yzaZzTQFHVzfskpVcMUQUResMFeCaQfdZsCYWeDEnBvpubUDNYWYWConhAFmWuchkstITRIFEqJLEJTs</span></span><br><span class="line"><span class="string">yOSsrrJYBGNHVrZFyCOMBUUgWArxCTuSFPAlGBEAmqQpUgENWFaNWVsynvaeVsgMlEzLtIfjuzZdSxLJ</span></span><br><span class="line"><span class="string">gdoXHMTUZcyqeRpTRpGaPokQtGenKSmrhPHrHEIepnpUTuaOWQSBUTrcFfEufYHiLWQPLheKiIlYqxwF</span></span><br><span class="line"><span class="string">jeHvMRMlaGuVtOqICFGmStysPtfbtHumOablrdCdjduBZHGFNXuhQVVRRsjuwVNeAGVwbJYwpgxXchOV</span></span><br><span class="line"><span class="string">ABsSdbSFEzHxxnwlIcUeAQgVaEOiKgWaVkzsRVfSyZXbRzmFUhQUfvdZdnXzZiDrEpJIYeUSBCNNwTrZ</span></span><br><span class="line"><span class="string">HCqkbMjcOMxdDokfBUODlTkikeoNKCWQiPOVKRtgmDIZQHbMRyaLpYDEIntPUrAKvUEwIeaYAFmtCQrE</span></span><br><span class="line"><span class="string">lHskDBslPKjXhLpaACPsGXRKuJCabaVSGazqwrZWLSZJLjHVQJCVDMWsqKtScGNIzUowQoVQHKjsfBrt</span></span><br><span class="line"><span class="string">LMNSTeKuLHuSTDHCgseNeCTntcNnmulGKtaNpWLTeENKLzOCJHNJTZvcSEKQOHMIDHyeuxvlFMwjoIKW</span></span><br><span class="line"><span class="string">AoHsfawqFrhghLEvWbrqeaMYWSPAAHmeDiVqfCMLYtKaRNHHtpdRDJynmJtAxMsAzrXNYKJhkUvNyxch</span></span><br><span class="line"><span class="string">VAvYTZitHKkKbJowxUwFSvsJTXLgNxwmGBXkQQwPaFVkfpUNaBmpEprVJxstmdmrUfkzuBvJzxyOYthy</span></span><br><span class="line"><span class="string">kMfjzLqhnwvjqpRVzsmMkCaIMtANOWrwbMHGiYDtZzIjRZgVVGmuPesMFCWNfBYQsbrjaaxmogFWfOFq</span></span><br><span class="line"><span class="string">cZnHRBvwCZSuBvisyFrmbNwLQcjIYDdPpcGRheJqneNhqLKVJqzKSsmKPxicrlLnFPBhSnUsOuvkYrAS</span></span><br><span class="line"><span class="string">PSssoevlaoWXPxOtITEsWonLikFCikhvNFBZEBSYlHWzByRmafKVWNsbmJCRkfEstjIslOOIUyHvlwHI</span></span><br><span class="line"><span class="string">eAcGgAFktolXUCjSLAJBUEsjAauvvtCuDJdUMjWuJQLlzeUOssAgOHPbnEpNpzLmqqASQsLxiRsZYMsn</span></span><br><span class="line"><span class="string">CmCWGlLLentUStLUBoovCzUdiCbbcOWVZuDbGkQhVIlDpxScsQDiFdSConXLNkitZwpsDLguUgrnMnts</span></span><br><span class="line"><span class="string">oGIodvjjFJLWpDNpWNEqsNBOLKfMXSJfGqadujWlRyeQGYbzmBTLExkQYoIgNixhhRBKXUEJbWeBPnFW</span></span><br><span class="line"><span class="string">IQsvWPweFiXhkkAUAYdseXkfKFkfDVnBBkxecZlYxgbaeHoGQVPRQFPoBndaHOCcoQKxIYyhWAzSgHaZ</span></span><br><span class="line"><span class="string">mubPViDscAfrdpKgGMCKxElJrIVWMXVSvXJiRVOPCKCDXdUJTiIraFmyfzsuwzklwWkniUpHDQlEChUX</span></span><br><span class="line"><span class="string">CEYOKyteFStnQHbjvHlSWfqsMTBDWANDyfKTXVuDfuONEMmqNjoqvFqbLnQwWeFVxnSxwdQFIejKJmym</span></span><br><span class="line"><span class="string">CZTJyvtkYtFKmoJvIjgCcIdYoxBlmvVxJMGSGnqkFBVpVzMqrNRsfBDUtHyTAdXpxPCdsJlycJCnFCUK</span></span><br><span class="line"><span class="string">uiSaaqCaRSrQWoXXCGCQceiLfdbUpULonRXhvOVBeFzjArhrhhCkGzYKKJkFIuREkuCYUdywnFgMdOza</span></span><br><span class="line"><span class="string">AbwBIEtykxRZtefWuGgIYpofnyfinnvlljEkLwPhhCTNEKFPteYeRlwmKVbaaLeFBdDhmGSbvHDYVGRH</span></span><br><span class="line"><span class="string">jVcUETXuuALGFVYDxFtyStPvvgQecRIJpdRvuCRSMaQTHLcnftLnqJoyVZzrFKexgHMfVyxTlzVPiMWv</span></span><br><span class="line"><span class="string">lHgLtxUAMTfGmugsJuKyKnSJbNodsIyWpDzWLCYbpHMsxHvVJGFGOoNZDmgYqztnBlCvdQgwWRNtAjMW</span></span><br><span class="line"><span class="string">aHQjxPdzdutoXcTnvnutFHyAlPzNtWVSzAiyDfteJBBVTZIadAuCJTRWOiwbUfJYvvbJaFbdYDVmxkxB</span></span><br><span class="line"><span class="string">tmYuNCGDNlZHYWBmcgsYUuwJsZmulaLqodzgXkEIGUbTrFlQANidMHfnuNjbmfFeEFycTlLUIPIPVkUA</span></span><br><span class="line"><span class="string">CGHBjqOGfZAxTGPFyilVZyVPYgljJvYCqdbbUDhjwWYYKjVVNQYmkdrABdQHMQbhfMQvIZahkOszvOwZ</span></span><br><span class="line"><span class="string">zrwcpODIzNUrFxWWwAMePlebSZOaOFVOpGRAGvdwlpyJXrwnAHceNhBEtZnIUTSiFwTWHJDpcmvdZJuD</span></span><br><span class="line"><span class="string">cilDHkxcdoYypOEzmQWkmGZHazcNZwNiAxwKwZtxOZaKVXMEqTmoOPozFUjqbnxRlSHQNkHNzJFVZgGi</span></span><br><span class="line"><span class="string">wQHlXmXZpwuJukuXTEDktqWDsSMSbOEzALjMelfUrKaQGeODFzskVJhLrSkIuSjaCkdAZZayPUjghjXe</span></span><br><span class="line"><span class="string">wpjxEEeLJTWGbYrmhatqjXwQxARPLSJEjbqfPbstkFdUpsavJmniDprviVNoqDxKelLfgTlIjeyfInBK</span></span><br><span class="line"><span class="string">TcGmQvSEedAZSnhTTchKYNUtYatONmVCGtoUAPLQGPulbWYBXWXIpgbznxwXOHqfxJnjooXZVEDWUkFB</span></span><br><span class="line"><span class="string">FYFRuCdHRkViYIQDWfmYrQeFJuaoDbqMcucuhwOmttNYdrTQByQDQTawEtNXBbdpJpGRipZuRhveLxzF</span></span><br><span class="line"><span class="string">qsrzAkIbRnwGcJiZGurVNIhubpEyOfXCogDHBiIcbrhLrEiJVmfkJCdbelaLQjIrCcvwylqffKTVDCpO</span></span><br><span class="line"><span class="string">HLZEYwkJiyCLYfSuGtdMpdJnMqVnsWoLXwXPGVHZOgDtZqoMXmQFjlwrUEhurYbIbgdRvWqzqJdIKVHD</span></span><br><span class="line"><span class="string">RbfzfLsrxVUtYNjMEIWDZIUuOnArNoSQLgSwbcPjQjVIZYvHbsKrlxlIUbnHoptRHQaSzPqcwgGxpkcH</span></span><br><span class="line"><span class="string">gRCfQPLBCXoDtWeqcvNkYexeyPwasQQwWGJiOwQUrgXbpPScNgdRflXOITjnsVAOAytBXaOFwTGXFHAt</span></span><br><span class="line"><span class="string">kfRybCdDHqnzVLyyruFjRUOszezawSOOVEAdweAXUasbLfOkaaBualogmunJkSfrjkHJMTlPatBGpOrF</span></span><br><span class="line"><span class="string">FYlrtiPMAacHvdLzDBeiEFxdRQMneSWznJbFMitaaSVrIuwfgEKVybAnmrnQmcdCZRXwABRrdlqMrbcC</span></span><br><span class="line"><span class="string">utqGupYszwhXarpBRuyhMlrXutFwUhZgPcOrKkTvmkpgsPZxKpBKxRJjZdEguLPZOKyPsmyRwHMdQMZB</span></span><br><span class="line"><span class="string">ShLamllEzwXmqSxACvtXuiWBxUClZxyGNQQBKZPhJcjEWcSvDdPACDWGErloGfqGIBAVxLDLZkdkdsSH</span></span><br><span class="line"><span class="string">NfcRJEzwbBkijaMfSFSneHagPpwXfrlRDvdvJpcmFUTCxmpOEuauphztcbRzZJgfumWOiViUwxucRFPz</span></span><br><span class="line"><span class="string">VxvTFMxumsrsycRyfZKrybQGDMDdSNloiwXPNorlwuoACiAkcJdsLSQQxfjIuxhPiUAzcXRaKNCZsABb</span></span><br><span class="line"><span class="string">rNjkDTwOPJUNbfwHlQIKSJotCeqcQToUohLkMnHUIZJlBhXcmbiaOCCmNUaAGzIBZRYUJyNcfZMQPGTq</span></span><br><span class="line"><span class="string">KUaGzWaxfubbfTTJnLwNnAssepFqtRKOAHirCuDtGTZIbCjeNUISaJkWjQtNjMzQnSwPEsLhfjmyXtvb</span></span><br><span class="line"><span class="string">UEVRBCjOHLQyxLivahgqxxuDYtjlyiPgcdsZGlKKZraoYxOynmAOuIGSKtHQYAjlebmAQXabYuApWmbL</span></span><br><span class="line"><span class="string">egPZRdArNMmuJZKBYQXrGqaqhagMReiczftkbaKWuDSFkfyDWmoFNgXTsmnMpIjmUgxfbLJEPVPIXlHG</span></span><br><span class="line"><span class="string">UewZDjzsKuUjBrVkpQScQioXwgxDLWZJQmhdwFEjwRFmpiPoEDDKbBFilePTOhTHJTFMWSwVHrEgIhXN</span></span><br><span class="line"><span class="string">mbrJMLglaVOEnMllkOvvuIIzCRgDRUaWfCXKynaOgVLZkuCPDYQiBmLuHWOxwVrkxTqtMuqPTanPirya</span></span><br><span class="line"><span class="string">JISIJOApmfnlvXkRVaTFJmvyQPpsnglmzBqOqxWVlzVhoxJcusGJRqBSDEFlKHvoOwDrJDGLjKQUiaZW</span></span><br><span class="line"><span class="string">RsQxrYUuJtKjiVwzwYtkpQogpVTIJTSDlUGixuJqQWuxlXKaLshqnzhIKoAYlfZNMrCsWsLUnbJSseZT</span></span><br><span class="line"><span class="string">sGMWzubGbWuUKpsSoPoSJmZtMOBUmtrufcNDhpWPMixGYRFxsTJSArctIzCqCdeBsNBxtdUxXmPjKIxk</span></span><br><span class="line"><span class="string">OqWfFpLcHoVejqjQsexojVtXuRdmlQfowMxhJudqHWbDCoRPaZOMXgFxyDZRDkCBMMnGOXYNXxjQTEVd</span></span><br><span class="line"><span class="string">phDyQGFsaFduldkrXeysEitBlvPFtBumVheefuGIFliVZPwNpVVbiZLjxyZwknYxHRIsxHKdljQpayMw</span></span><br><span class="line"><span class="string">WrManDWqSsFpNOvBltPNrzprkwbyjXfWpEFggrFFYCUAXyyrMUTnFHYDrTSzLjIhJPogBDssLBmwUrQN</span></span><br><span class="line"><span class="string">oMVBeJdAuwAkKBWBlmEfDFtrUjaYFwgzyhOWbyGfHmhMYgUlBVkMNjqHRkJPstDCOBRvcthhTPBucuSv</span></span><br><span class="line"><span class="string">FGUKqobVUBVISShWwgHTVmvwxctgIdZgwanLBxAgWlPKloeRfEaFlakFuCNDeHSBjgsgAQGYHMVPjygW</span></span><br><span class="line"><span class="string">LCCJZMUXKpIvUbswbOMFdRKDBtBkwXLsspVSwHPhelEVaGOGmnfbBAddkTwGWwqGHsZaYMTGEmXiTlOG</span></span><br><span class="line"><span class="string">IbKYlKPzwHMmnHUYGzEtfkDimTAGPeWqQLfYtyWtXcQCjYezmGuMUCFQigPgwSWvYPfBfREqysCGKzGL</span></span><br><span class="line"><span class="string">wchsKcGwpJYqrEPfhDNuXUgPIonCVYGaCoDoaJlUJCqrRlJFqHyibsbCANtlgQZdlNfAayrDiUuxyjjZ</span></span><br><span class="line"><span class="string">DTwvOMyLXyLIaLxJVeBRIZmTlKhxplyBLgHIqVsTYuAOcqNkUKwregPbTHfzBgTfKdcBCHYebdOfqgux</span></span><br><span class="line"><span class="string">kcVWRLEwpguNkzVNbBsmKKgqoadvSHNUZtSSpXfYFcHzKHEDsDBrPqhqjpUrTaquPtwctglSgIngbguQ</span></span><br><span class="line"><span class="string">LMvdkvFluNRhvWXLSlrgOEyHTGnTGDKAXxUFRgnjIhwGkoIRlDgbfwDeEawBnEDHPsGbaAYNajiDQbvT</span></span><br><span class="line"><span class="string">uGYqujvsCQkiYIuyQFsxsItpvMNlTASPqzhelbwEgRdxjlOMpRoMtwmjCTDyOrGcHAHAxuyuheqZEWuK</span></span><br><span class="line"><span class="string">HEMftPPbfwLpGCbWTjHhqAKgwmZFKpNlsxoIDXPgzPdfQkZmJRpObKsXqRzGHcKFOofUudFiqgZcZpnJ</span></span><br><span class="line"><span class="string">tGRmRxvHGVByfaltUeubSmOTtZEHTmASeYdYIbatAwXLTMxRLgfAxOdOEASTekfTrzQUfSVonRNIElrs</span></span><br><span class="line"><span class="string">NMhXGMcwncNRWgsiZTQlrCHUXRyGAzEEajVHbHKGumyqKePVWmqXCGrqDFEiwNOecTHprDcKKYqjotCY</span></span><br><span class="line"><span class="string">mtQyvDsNMbcIsMHeCnTllfvaYjncMoLOUSBkBxOFgcixmLddvijVWiwoQtJDCBOBZTaWsMIfQwzRuuCL</span></span><br><span class="line"><span class="string">OpOsZVGnLNMVVARsYBDYcUzCcpKUGVMPAqLPzWELIaZZIWaKDvLWpSgFAfdSqEzsgYAaGkmAsOGlgRnu</span></span><br><span class="line"><span class="string">ZkcfmYRaDmHQtyMxhaZiKAizfaFtvtcodnLCwvcRxDBUNSgsovEbWRySUasERIIdOMyzCZUlsYVmKtpv</span></span><br><span class="line"><span class="string">scWoZJNTrXxragOJSXkaggExSuLfSTNjtDqWoOBBQccomAiLlzsTVOhUSERcCpTasNWCvXwdnqQNAFfX</span></span><br><span class="line"><span class="string">JpALGFXxWDHtPoyOfuVHixKDlRlbLAPPYLMAHSqRLMOdJmuvbabUJdJarpdVfjOfCFjihlyaDBHLCwqI</span></span><br><span class="line"><span class="string">XqEyABntSbPGAiBYrzWLMIEJZsXlrYItukdFuYwJvSTqkZmwJTqOyRXWFWnbRWZzwndaWNGEqBhLdGni</span></span><br><span class="line"><span class="string">VnETfUTvzkavrjqypdhXpEORjjgdUljLaFRCAuckuwwGRSycPeVYQLmsZTxWHaRRqbkfuzvxxMzcngMJ</span></span><br><span class="line"><span class="string">gyujvVxHPFRPKumxeeVVdMVveOMhfJVgBszExvfjCXZQtscjxUOHuiDOZYajDImIneQObxhJTJQzYfot</span></span><br><span class="line"><span class="string">yXfZgkPnrZXKUrxASxrbrFpxHfSTHIZpEldPQpuHrSbUiarjCoplcRQPSePPODkiSnrPxiunpAspUmzr</span></span><br><span class="line"><span class="string">TXqIzklujiawYkBsaMCZwqStdLHLJkdQBRdyQhYIHdITMMAkPUtGVZYZyfJHfGuAKtxezQjtIhxMNhHT</span></span><br><span class="line"><span class="string">wvUYCKbsjcQDADqphFxRzNqkZtKCuAiKoWHRYQPUIXUntTEYqHryqrkXBWvkwtzUznxkJcimPdiwBMSJ</span></span><br><span class="line"><span class="string">PCDDDoJOCNvwOLDbabflemxjEOQADtUNbrMqkkGHxwHTFRFTWxNsDbPPTDQPuuDhFgnwYHaEkNNKKVXO</span></span><br><span class="line"><span class="string">pvTcAItDfUEptsBGGYkAhVbfjiGukPGxHezrVFPHrvnJAXNRphdYfEhROxGLxrDQBxMzHclIwWoAGsak</span></span><br><span class="line"><span class="string">pJpBGhMgXTbzoQoxvGatZKVeRHWNjeAbUFDuTsGYvjizpZsklDKlzlzausbRIzREQAkXfrvZsUxAUFLj</span></span><br><span class="line"><span class="string">HqcRTHqpkHKIBllyCMUTYEANBMnWiSEjpvAwdzMnxCNCqRICMuNviZhlJzumPvGXjQargVMWFAdfwfrq</span></span><br><span class="line"><span class="string">bHRXrsBPkMkDhiNzcdnsjEmmjHYgVmTEvUnrTClqDdAYJOoGblPftHbKFGNIaNiFmEDNUSLjeQQhvkmp</span></span><br><span class="line"><span class="string">oxbpUNlumKMTwbgylUpbyNgivOCfvQVIOYyvqzHJlYYuDYvbmYzALwGOJqWplUHBMBUNwusBcScYtghp</span></span><br><span class="line"><span class="string">RdUdeohaIBixzUYqXUSWRJswKxBbKnRufRiynZwioKNYYuyzRbPRDLbrWIIGIBaYZojiTOjxQDsKJgQC</span></span><br><span class="line"><span class="string">bmeGDdEQwgPaNLEsMBBUEzfkHMoeVanMbPvuKYUUCXDdXtvToxzdEAxlKljoXxrIPGmhCKihXBofINUn</span></span><br><span class="line"><span class="string">zNMhJNVbiJanEfxCJHxXzwYXVVJupYoNSkMCIirAQyUlZWVEcaBnsNWWERQrmdHpuIAcCODdLsmcZZrd</span></span><br><span class="line"><span class="string">MlpxaqcvmuZEcoEeieomktxNNBkGXnMMREVUPjDKeIkLcciwROjZFSXjKrTbNifFsCmxDSeSXyRDVyOd</span></span><br><span class="line"><span class="string">JSAdUJBEZnhyRHTWprSZoGbMUjXPHmkLeKueqaKjXWblQypHBaafvoyDxuqxgVwFRihwmxQONCcHWQBL</span></span><br><span class="line"><span class="string">cNRMzQnpRTxIOIHGTbnymIgrvGBCVMQPXqrZFQobDtRgLmcKpzVnPTIPvPfbFwvdnCflWkRDGpLlvpFv</span></span><br><span class="line"><span class="string">QREQfovQFuKhmwkHCXbxaRMJGBdLJnHqUmAKGCUFcokKaxnYFCLCJoEkwgEuEOozmysCWqsciwBiOaUr</span></span><br><span class="line"><span class="string">SBkoFClEyOlmIDVgQloaNdzsiPQesrcbHCRVmYCLgqxonNNSixKYTGvtAlXYdIWWyIBznLNPGVbGonyN</span></span><br><span class="line"><span class="string">SAtVAgKZrzktuMXZbiOUTHChaPQFkaSPmvUNwcCMdOvmsxQdrhSuJfhfzJYHmjEVkmLhxincpwXseFwF</span></span><br><span class="line"><span class="string">EOUkWgLPztLesfJsNqueKMVFTRewLdrsrqceaIgtnOXjCVoeqMlgDXprxKFNDeLZtNBRKOESYCCHxbpa</span></span><br><span class="line"><span class="string">rJFfQQQkddgMpmUMYbPcupMQhoSPrviBSkwWAzBhFKzqIgFjyKqCSKJSVFJPWoRglzHsBoNdIokzJtFS</span></span><br><span class="line"><span class="string">TKIeGmopTMkgjhCZvzcJkazBavdFzHAgOsACKQvClovbLKJEHlPAtqIKQOnaQNrgaTuQxlgJFKwMTvFD</span></span><br><span class="line"><span class="string">rmaUhThwhamRtXIGYKOtPlwGaNFHNsVkGwNALSZRBiEbFSEPZqvZVUOlcymQTCzvqlKFRbZUaGBXtdBj</span></span><br><span class="line"><span class="string">AdxxVqoSCSOIPOSZdFxyGOvLvoNtJltfvuRHfMKydysHdXxolprgdIbWSCvRsCDcHGemOMpcekVUcqIr</span></span><br><span class="line"><span class="string">MFobrYpqcIpKEeCwLETizksxBidgjsCtTiQEwEgclmieJTxRUWOsnCkCyYMcNyUxdnqgAZYvGxgRDbFi</span></span><br><span class="line"><span class="string">JjOiCHmkMIRTljKKRRBheqgZlTBSRBYsRyRqNteZvKskYmppsDzAsKdSfGqKhfuMYTKLzFFpirtBhReb</span></span><br><span class="line"><span class="string">UNtRFQuouAJvpIMyaBpMqmTNkCBgnPByRvGgyaKQCwXYijiPBqQkvgIoHyaXGQwiRSHDpDuQMccxtxDG</span></span><br><span class="line"><span class="string">GHmDHIlncoWQAePXfKgniNHZkMtXQmuEACosmawvWwQcfYyOhbnXeGXWpnztmBjEGKJWXLPdPvulOBaD</span></span><br><span class="line"><span class="string">vozgxrpLgmcAalqbUFkUiuaOmbtfYFrKHIDvUHyLnzfYuOtZcCUwikmpNhudNpUoEXNmZWpVNPBMaoyH</span></span><br><span class="line"><span class="string">qFYacieMdVVqxsnugYvGwAlxzbMlWRthmTdkmAwyMJlDrSmdnxNhejLjMzBqflqkZagbaxOvbtBHdgyt</span></span><br><span class="line"><span class="string">hVsbJiGffyPxDXYWsClwBLbRKWkZFrQiMsmiafCwKmIchDtUXgFUIiOuQZQggSjcoeSLmCwMlGcwOZRh</span></span><br><span class="line"><span class="string">SYJVEeAxMvYxVDLHPTCKZNVMnguWIJFMeYcWbsNkdBRIVgcJesSxMonSOKfEJboYpZLxOzopQLUuosbH</span></span><br><span class="line"><span class="string">RUhggLxDJOZDICAlNMWipYilRLZAtOWEVXIIsxkrZlFEwgtbXwbXoGipJXxtpwGKRFjZWcZucEGxbnUS</span></span><br><span class="line"><span class="string">BupSLMkPuMHsjPGRGTcJUdmiaiydiPhellXNlkZzmdyuGCfyoLPMjudmrAAOOumRaskfnKPPkzANuDlI</span></span><br><span class="line"><span class="string">sPkSZoLuaaHBFrTwVPQWSNFyXkHYoAyYnEjCFbeWhpYUhYPVPFQwPfZvgDFMNQJVTaqDeNnMpPiuTYvJ</span></span><br><span class="line"><span class="string">gEpYwzYDuVvdBKOhNkVnSRcQfAvwSPUDkWodojzzYWnXGDYdvsCDqagNDMCDGSbmCRMjTKiUqKKWSSsG</span></span><br><span class="line"><span class="string">clOmFhwrjqSAhztFYjoAjqYFLaEIoRMnIRWuIpHtVUuFNkchhspIGAWTQJGScCMTFSDaXnFCstXdVtvJ</span></span><br><span class="line"><span class="string">NGqCBIKgNGuJstgZkliQQhWJjqztooxrxNNDlEcRXQuNdxQqnpQlVjBTCVJZgrAGAsECCRZKruIOnCVD</span></span><br><span class="line"><span class="string">uribIAqIJNiLbEGOSVnXZytHrwhARlkoixTsCTJUNBUnHUKSqzhgeCUbJeDvPqzcFkfOWOebYxAZmasH</span></span><br><span class="line"><span class="string">HXDMXwJDCIMoBIidSwhTzCHPRYWsjxeFaSbpVRCIFFekwGGQaGTAGCDlyKbBaSzJdJEepIyFHxhUyDKs</span></span><br><span class="line"><span class="string">GApcNfNBTczggVDcrFizpXyZTZyyWHnbFUOkncjjBqSOrEhctRVZbKahHCpqBesRqjpqaxbKOFmrRCyy</span></span><br><span class="line"><span class="string">GcsIoApTaRfMxGLuWcbGGjhTrpNdmDTagjESWKKkAARpmPEXJrMliecUXcZEoMmyTjcWZUmLftKtCxSE</span></span><br><span class="line"><span class="string">bpONbocnqyYaoeSAaSfmCdSghDZIuxRMMkcfhQPOnXrklUrLNBaWppAPXxKJajzgOaDdyfxSRcImXtwW</span></span><br><span class="line"><span class="string">QgZdxHQqxjqdOSMXiZcUsJxbOOlLdPQoYrjuOCjjGHDJKkpyJzYVofSrLvRbGshinyDMubbCPJjGAGQZ</span></span><br><span class="line"><span class="string">dVhZiFseQcMkgBmQoHrDHWdGXalOhjyEOlAamloRoIAnjVBvquegCgSTekjRmyPERSqOhdgpPacDSSqu</span></span><br><span class="line"><span class="string">dmBfAJlPujyHKVQWdkLwDXrqhmLhAeBptkvRZttCpjYhhwwRVhmshJoRrjwOmLEYQymUTrwSqiGEwzbG</span></span><br><span class="line"><span class="string">vSKpwFWqYDpdwBUREFHnDpqNWYhuHOIGMGfifHuBFCixcYQnpxGcyqkJuraDViHEgwDOhkxHDlkzVBzu</span></span><br><span class="line"><span class="string">fZvlARUlQtTGIzAyhVJvUdhZBzHAcOxRQyTEHUpBcHGexJkUInBZFVDiyoioTHEvKXoSakKxXAuoxznq</span></span><br><span class="line"><span class="string">ZBKkJiQzNzEJyYPuGWBScfiJvoyebEqVFFTnHpqndXKaIWKNtRcfKNQnxteRMXDqlpvpDgXCWwNPuGfh</span></span><br><span class="line"><span class="string">BKPjqSvahUGVKVANxBIXOdRSFLGpAVsZdslsdYWcCqGecQHHZENRwspOfBtmRUjKEHZuYlretBNuEuPL</span></span><br><span class="line"><span class="string">AHPvcEPYetgAZQTTbZmAvhNhamgAGNSwjyUQZHSGYcJKrJMylhyUfGrJPlTiWyYPAZHGPGCsXMzJKmiG</span></span><br><span class="line"><span class="string">sJwbcKWXJVMOXvypmswLxHTfWWDsfHmekrqLCtCTWWsWktuItgFnzPvDuldQUODvxyKoJIDUicbduKfR</span></span><br><span class="line"><span class="string">TTIshWVgMBWeRnYKdCKJzrXYJzRBsIqaESaUZfJQvpEKGBbsmkrtCfoukLWbUTuJqTbmElqMKcBvxyQU</span></span><br><span class="line"><span class="string">lOHTprKWNcHiLgurqvAdtEWHcMbNvZLZgKqxMBqBTnJHyKiLmfuWxvHPcWdtBAcltjbFoidkZBizikoN</span></span><br><span class="line"><span class="string">rKmCuUfPWEnfxnTPNKtGUSkakSnDUqTvLYlkIWDhxQEcAQPvvsEXZgaElAoSJwUtTXsWzVlRDxPnmuIs</span></span><br><span class="line"><span class="string">rKkkJPvjLmsrBCACfoyEZvXrLgECQJxZSrhsNpJnsNXeWhTCaHwyZlVWRgTvhYJIkeNxtBYNsHtlxIBh</span></span><br><span class="line"><span class="string">GlImfOclRmnssnxGQNEDsZdNVHszVRvjVYrCUzWXbToRCDBAYTzytYMSyhADmNJNgzYqUWiUQArVRwLr</span></span><br><span class="line"><span class="string">tyiQBTKmBijSkFNLZHGyxQgMlSpXsLvrkabFpykDpqsiDMKUSAcURghjVdTbgPBDIlqYCfDvOSpBBxTM</span></span><br><span class="line"><span class="string">YEeTLJQXyKQWPnxBnSZMwwJXmnlHClgODTqmEnATGouLIqRPhNiEdPxUTRgomEDyMaPmuWKrMvgPpjbz</span></span><br><span class="line"><span class="string">JjXlhDygvoQneobUjSdRZDsDtafuKNWHdQJqmsIpTUQmnXyzfxpOFvjjkDjCxRUBHnDXeHBdCbgXErTf</span></span><br><span class="line"><span class="string">IXSuIyaGYbyfIKMdaGOkdUjFkBztdhRYbCxEEHOnsaCmANUtZGIXfPYJaNDuAKRsRauAyWWNZWSOvXMi</span></span><br><span class="line"><span class="string">ndjleADCxBtJmvqUmzrCYAKaWpCqLWeNrrpOUpLkEPewMhsfBxYhUNQXwurrHcWgeVvTfOWfYqujpkjU</span></span><br><span class="line"><span class="string">tLDwyaayrRHtfaOhNozwunHAAynuGxXrWlIWkoyjtpXxbOwnsmRHnLmvsDLsxpnBjUlXhoLSzTpYmQpu</span></span><br><span class="line"><span class="string">QFhaWiuEArFDzGenTOuwUMZoGDmUwcJSeEBIfitXOzmJPpdkBQXBzPpMJTYPNjXdobadvwPqCjXpkckx</span></span><br><span class="line"><span class="string">CkOnkqTUECUEtehRxybMaomLILppsDytYuwepqmkXAYAmqoonziVYKWUYXcMgxPPBzhumigRRJjKJsna</span></span><br><span class="line"><span class="string">LufdAZdCLgAGSVvPKbUczdXIkpictSZFXLIbqjVXNsKrXOLGSNXLFiIjaxHijORQKkTePEtCxffioZjZ</span></span><br><span class="line"><span class="string">ERzqLxunnVhOQqJsoJRSZbfCDJQCytWaYxPPWLyVomBOcOvyUdrFlVJhGgiqJFFSSaAzgeGKVgNrjIzV</span></span><br><span class="line"><span class="string">neZLDSEmKRhOZrOIBoUaxzbIDXTkNGdWMzrUDFAoxYLMHBLMvrVReMRlNuDhJfdQmuiQvtJuiGlqSfyF</span></span><br><span class="line"><span class="string">NabiivxwTBBccSFdEcdEoGromCHCWhhWSvjibfIhIxcRConCOGYUKecvjDnivyVcYgYnqajaTHjMOdio</span></span><br><span class="line"><span class="string">kdNYZfpHVbAtqttPgzKYaabklTudxtIAKVTXgVuWvPrhomQrlJMdigxPvRCxXydQAkyQmhPDwneOeVmd</span></span><br><span class="line"><span class="string">aHWaRQhKqaggLnPtiWgXTHosadLMTIsqktPvFvywoSrfKANxlHDkvvMSXprwaBCpgsihgWhHlzLUOfVz</span></span><br><span class="line"><span class="string">pyxWkNBlkLxyqMcqjYLRKRGrtZAjNaYwUfMnNbcmPBNaHRLRcIaYMhNKCYXRIBhSFgsFxZAoHjRpOMfI</span></span><br><span class="line"><span class="string">jgBmJWHaWPLHbjqKrPzMPSvleuvWrMBqaQWtDVhJOwBeHLrYgQAPofzzkolheUEQJAjypBgkgsMtEISq</span></span><br><span class="line"><span class="string">yDVanPZUPVYAQUrXhAatWRcLpEorrrAKhgSMQLTApyJfirHwZFvOnDUAIMngubOKOSZQrdtxuQarYBTQ</span></span><br><span class="line"><span class="string">ouxsBiSNvnnlBUVixMvegACKQGiDilDKROpiElEEfsxqCvQdpvLzizKhIZeWFjZmWZWrBezjDDpstUMc</span></span><br><span class="line"><span class="string">sDUwnOsbUXUAGtXdJmfFMzWfJpkRmWVfDNXgqOPVmhYdGjbRGVNhXqGrRnfWlzRYjbVDRJBiRooxlilc</span></span><br><span class="line"><span class="string">VAndQvNGunmwtPeswKZhTpXkgsxWnhhMydOKxOTkpmHsXNRzVNqCKbwdWJreSaEMTfiSnXmQNKglLMKI</span></span><br><span class="line"><span class="string">PYFFnbXYNPugAXXrQgHGBhtJcBnGZRWRHGXatRBkGGFOlJBTCgtLlSHgdkbhPgGVVxVFpgbILFsOFaXj</span></span><br><span class="line"><span class="string">rLEuugLcudWncrfnszEZTPhLkPOguGiegAnnqKZtDSSqnMaVQNsTejySsPAwhqSIOkVmnUoRtowlNXrk</span></span><br><span class="line"><span class="string">flHsuxukAozqxvoTjkHKPreyErdSVJcbmEkcUVjscdQAsAVLbregdeeHfFzouBeaUHDCsvzlIbifDRSr</span></span><br><span class="line"><span class="string">hfITEEHCpdzHMnYimFXptnFUESRjxAsaOTuAEKafZeVWNrpSGJbOpTPWBQiyNWGbJqBclcizbGFcyNoY</span></span><br><span class="line"><span class="string">yJDOmaOpNpcVlXxPXJjSbxjekgfYKApqaVZFCIFUauFniYsjDEhJSprrskgcMXdrSpSXHhENSMYlOAOZ</span></span><br><span class="line"><span class="string">OMExXgoWqprIowrrtXtRudBJbkfxYkSjvbjsayovTlYPZHVrjrkTgrZSPXxgOJJHgUIIDFPaUJAHBiGD</span></span><br><span class="line"><span class="string">nKPIgoyXYZKwmLPBlrtGjDfIzEStNQigDBxnibYSKAMGaPGgcyOaONQYJGvloMBRsfQWKYbIVENbUMzg</span></span><br><span class="line"><span class="string">pyYgtqyVZsGrQueTHjhZRBHIBAvQcVaNyitztYFYBAwHsvrwhkNKBJSWUyiaiMNNnJsOkgitQNKzKsxq</span></span><br><span class="line"><span class="string">tHtdNXAYlQcMotpiIfKanptVlNlblMhEhbGqkxKPhwfiTlplzYKqOKpsUxOfRKTpkohgozfTWngSPDEU</span></span><br><span class="line"><span class="string">UJvFlbUVRIuDbhsyBnCAKrFmnqVWRJBKCyAmtLLGkfkyQKSCibsOLnYbxaMHlHBKeQQWWDqOblGflmuY</span></span><br><span class="line"><span class="string">MhFZMHOSjEggpwtiCWgPRQoaDrjjWeAgfHWoxTLmLyDRCkFTDRPyxzfBBHLQxAIeQqVaJQWEmSFbZRiN</span></span><br><span class="line"><span class="string">sEcsHbuOwmdNATmwToxAoTgweebEEDwZUyhXlEfZDypFyCbBlIvoelWTSqZaTQbIeFbQfwhjNzstaVpj</span></span><br><span class="line"><span class="string">gmLbgKxvvQWSozRvfjfhbNGrBzkatKpLSEMWNPjjDkxzjZVhQlsoEKdhNXknTybcTVqweyHEIXLssasr</span></span><br><span class="line"><span class="string">pokrhkOlUGtvjzAfVNlccAHwQgGDAHPnHokBoIISUSfGyWIWnzRMTyDFlFSsSglhkezFMOFgEobbzZdd</span></span><br><span class="line"><span class="string">HyNTuujQvTncpciMeZfiWuSqogtVFumYQDBGtljDkabFZJPPsRXpspNIpWluFvSsclOyTpVFEAukuBwX</span></span><br><span class="line"><span class="string">ZYDDQfWAQYnnqisDtcgBIWIwNlBjStrSfISdOhHidMIoyTFSNunNyltJtyQUeCbmHqKTKamaeCQQmSxK</span></span><br><span class="line"><span class="string">LldRUwQsOIGnrKCjjcEOuMtvbCqFTTPKVrGGsneFTlzbAPGJgWZzSvJYszvbAFDeVTvEbgBeeDWIveTC</span></span><br><span class="line"><span class="string">mQltjGvPQdfzfVofXSIImGLVAKTJXDiHAbxzxSHyhdhAQjrDeoPcZQMzkqDatMNHnXPxRwcdzVeeCFlu</span></span><br><span class="line"><span class="string">EhHLDuNufQswfgLHiFLgFHLNgkCaYyuDzjlkFjFTKJEXkhgKXPvFpXZxWKRUopvhAUpOmgPFqqkSEHTv</span></span><br><span class="line"><span class="string">PwIYKzuWgVWdJHnjkXiJBtzwIWGckYzuUhthJrBxMWTNKSbHdDSZNyRRAhYzAHsNtIDkVDBZplXubFGm</span></span><br><span class="line"><span class="string">sBdTjehxRBDbnhRrkNOnGsgKWSrzbsBehNKhjNxhYUVchIRVuYMagCuugbXxDocpVpFbwtFQrhMwwIfv</span></span><br><span class="line"><span class="string">niNWwQfTspKUfdBapEQEujBsVmFLBljEBvAYTpdoZbqAXzXBTrAwzwBjeDwRrrONowjyNFVdeuvSUFlK</span></span><br><span class="line"><span class="string">CiIVQCBlaxHhmiIrSBNlHDvxDRVRAVUHiXUXHaHdBtMnhBLduVBhdmABKswEEqzxGFnVARmCCLIqtNJE</span></span><br><span class="line"><span class="string">GkVrXEBaRVpVlRGUoMRaALjKlthnHVaxMaeeUJrqDQidfxNofruYrbkIIowggIXqaHKpuCtNHqYPSyWc</span></span><br><span class="line"><span class="string">uAEnRllTdjTPICwBIXGjHuZjQycIXIvzDQcpMiElyEOpENXCgkwPartfeUUJtwWXQicUQuczVPbqlRGM</span></span><br><span class="line"><span class="string">qpLJKQtrvHwQZJrDUABPCXkYZTTdrvOPlbJHZNjDgqGNMnMdNFibnIBawRmahifWEUGRiGabeccnrJTO</span></span><br><span class="line"><span class="string">JUZgLzpYTRyNChFVFIWHBpZGdqQMtsECFhXlsrqPnQQJBEPZsJgRkWQHLfiKjIlJEUNSrpUIkGOrsAER</span></span><br><span class="line"><span class="string">KfuXJUUctGQzBZbrXMIBKGLfRDRRdvMNQaIJoHPeUQkhbrVbxbBWMZECNANKiMyPfGSAUphjMAEAjBRf</span></span><br><span class="line"><span class="string">YkWcWjGyUsgjMqDMkZGhjJTbuiCUGblpIEJMaBxjBldAiESccBYoetHeVuduZIaCPvKtlvoHeVnLZjNh</span></span><br><span class="line"><span class="string">JFMiUzYQJTvNehBcwbnwjqkADCHDbslWMDfnSzxfEijxguFPbaOanACLdxCzNExOatygqSKCMUJjPNzn</span></span><br><span class="line"><span class="string">abhaJYjntZtrJJbjYCfNDFCycGrLnPdbaNPSFAfAIXeaEXLjOujBRQysJettISTZNqmaUcBkicFTeOwd</span></span><br><span class="line"><span class="string">aIqIrGODMBbxcnmmVuVEvgBFbIHNIbiXYYgpNVdIDIhrNFIwZvVNzEDIzfVfGXKyJFKLyBuHUyrTSSgp</span></span><br><span class="line"><span class="string">xHdTkEaGDRWlvqbuqIuWPEKsOWdtEKHDVxUsUIvkFXXgtCzaagkFaJWpfTQWEwjwWsVzWCDkCZpYsIvM</span></span><br><span class="line"><span class="string">CArpjZHgewNFLYRyCmJVcnRfSZLrvOdRFwMUNlYcfFHEEvlmgEBfAbTNqKGBdXjMQbxXSnprwAuAMwkD</span></span><br><span class="line"><span class="string">XCEqkoUIfdCSmBbGTBtdJgZEcEyVoxKZtpdPJsTVkdzCUUEXfZiCfaKMttKxWseqgbszpnrOsrljxRBu</span></span><br><span class="line"><span class="string">IIqPnclXiekaaBFLSIXAVTnteuAxEmDsezrcnaxXPnDjqAOJvtAjMZUGxMHkDcouVjHaYAVAmdCtqDBX</span></span><br><span class="line"><span class="string">kWaJnJDtXGktmiQvMVQWAXluhbgDGKSiQxwGunqjMVNDIgmXAIKtChuhzjyQnxuexgtNSnRBFIieNrTy</span></span><br><span class="line"><span class="string">dCluokEUrLCFXEyemXyTjgDKpTmtjezQkohhMUDomReDnMZbDvvaBdttwcAyBxlEwZhPUFfIaQseOXJt</span></span><br><span class="line"><span class="string">eRFRkoPodzkPDHPpMxwmaJAXxUldjocDKejfIeNZXDHUqDgfgtXczTJyjWFMHTJLjGRpWEnrCVCojnyG</span></span><br><span class="line"><span class="string">jvAzCjZurYdGAUIesuUvhDtceQgRMXZPJDeczvGBfrRhnWKFoJvVzNKooOCZqvcglBMTltXxNlvZnVLr</span></span><br><span class="line"><span class="string">zegyEWtyEUPwzAFIKkaGjDxXpJQWWMhgTEQSITiftIzfEatMnEeMXCIsqlDGluFYNeUStjDjDquawhLh</span></span><br><span class="line"><span class="string">IiREjCkphawFOqyIGCBmKisFVKBlDsowkWAqaZAVWZycInCizCidSEEGoQykLHJVhWWpJuGqZQlklfpK</span></span><br><span class="line"><span class="string">uBEVRxLWcKrggxvmPHmXwzbTafMmTzVHamYBQyomWJSXFGLSnDOaOvBfAhSMBPVWmqnosUfZyIoqfqWv</span></span><br><span class="line"><span class="string">pYoOaXolEzNaTPKxSwacRWmoOsafXgDOTbBzpjIjpAeEbcdzqFkqiDVpOHwEvFTsJLKdPnyPZSzdvTSe</span></span><br><span class="line"><span class="string">CANLBuVknNXBFjXtMtyqABwqfcmJgvBQmrCBzgzvXBkyDCUvPknsCoMEoqJTLiayawndSFiBepUloUwE</span></span><br><span class="line"><span class="string">EjxOlVbstNygxFoOZHzpMswcxsxsZkSDoARNJLqnQGWnkOIXdKBFhFJqqwRrasvDcGYzSDnOOLPPkats</span></span><br><span class="line"><span class="string">PLNBzVZegVfuGGIqkKIsoeQcmQDKaERsOetqyumfNouTiYNtGTidVUdGNbnBSOCoiSisOtiXLndRpPaV</span></span><br><span class="line"><span class="string">uFJWacEAIhYTeKsYJhdLlEncmvRMLBrGqYGcUHjdFVeZYTtUdQTowScQAbNqwhwEPNMgzKMtiJYTnKtK</span></span><br><span class="line"><span class="string">hsqQyNyVLeGOJDEfXjYIHkgvBplTiYgVVLEPApuzDIXFYbOValCirqCpTcBVmhKuZWwhefyIZGQgMFYs</span></span><br><span class="line"><span class="string">UZnxeAlzeXVsPHxwggNiuYYtEinNkaYEEECTkjJqWilLkmLnwwGaEaGIEiiutPLMHoyHwkGVarvIXLDI</span></span><br><span class="line"><span class="string">ZaxaPwvBuWNmcxXPWyyTBsMdxZFLflLeZJpabUCmOnQGcjTLKhCGFEGdFdbbsJFMjbYgKDQuYFybOIQK</span></span><br><span class="line"><span class="string">eqtMAvqGciqgVHtUBXiPPhXZtbHigVaiTAfLFjTEkgMwrwbIHpROGAUasuqnVUdGazjsecBFMWyGiThf</span></span><br><span class="line"><span class="string">llwuozcPZpByuLYqWSISCrjxnDhSZmJpiXLhEgkfkktFVsMsgzVnlKVgReiyfVnTFCozFvoVLpkRZAbn</span></span><br><span class="line"><span class="string">TDPSBAiJWUTWktFtuMCxdWwKsLVoCcZsHNFbzjYfAmNekwMveWFaXzJlKLFaaIZTXQZhxZIIHHnqOzNK</span></span><br><span class="line"><span class="string">rAiPzGSnYPMtbdFPSJCCMZnCmGvQDnWrxTVqQGMiYMsXRMZrSxHYYINRRuBZQDaZtChjNGVvKgkSDDGu</span></span><br><span class="line"><span class="string">oSTKQTHbJpqARbCnrsywJVepXCvHzxAKcAsUbEtIZUyQwQdkTshbMhdaBavcYnrskjfTyfHVKCAYOxfT</span></span><br><span class="line"><span class="string">tGHyLVWztxfwiAPGScwEYybRhIIRnJNCITXkBbzdQEKOAxZhBwZZhBduXKMRMPbTSakrYSLOXoigkwjU</span></span><br><span class="line"><span class="string">NagFiwfzFOOAPIwxHhYNFjEnEljBkSqhgCRExQgyNHVvBUvuntMANfoXakCUTcJapLCCUeiIhVJMJBNZ</span></span><br><span class="line"><span class="string">DRKojHtwTJdYGQtsMGSHoKdpdFmZkiVjoiUpcJySJQqmKkXLSgTBxKNTqclTeWhvZUopRZdXJVlGZVme</span></span><br><span class="line"><span class="string">UGifoAYdYMikXHwxsABrPekGdVQcsktAnJYpyrRsAJCfyKNrBUjukiAGqNmCkDGfUyKJBDtkbBFjtJJt</span></span><br><span class="line"><span class="string">KvWuGDfMtdEtBwhZsOGJupEIHmglfpNIqZaPcspKgCsCWapdmPXwrguHpnsbylxVPECQxPeIdbIvBhOn</span></span><br><span class="line"><span class="string">qWuaNZspQMaeayjBwqUkBConuzEayesviGgpzzqEchvvIuEIlxAxqLwiAukGITvEtjuCYBAyoJfmurEG</span></span><br><span class="line"><span class="string">PgkSJePOakIuzOyJSkhePaCoMJVNgkqmKIeKrTmCfEpiQhRWbfWaryfbgaomIoTsHZGksZlBMZuRhgbI</span></span><br><span class="line"><span class="string">ZNofNbIqCGCYajHPmJlPmmHUlrUkSLQWnqiRNQEPodjuINuGxfKhTsvgsDLONCOGvsxgXuowqVzMNlVI</span></span><br><span class="line"><span class="string">EGQRIWOvBeXHiIxSrmPiHoLgmrNvzgdViaNLmoMsuNlounoLCOzNZjrDaWOlfwDamDMFRIcRmpRjujEy</span></span><br><span class="line"><span class="string">ItZRRldRgbnMIaZhZonGSYHzRwvrTbXCwSbNLBXzKVilkenPyjSWewbNbqtJUAPlobAuMPEDecJzZLij</span></span><br><span class="line"><span class="string">CUuRpvuTDLfgKifGiBqQwdWDrLFdWUaEbOaPHisawvWqqWEOSVHxOeqndTPCttyjTddpgpSadJCBjjbb</span></span><br><span class="line"><span class="string">qRbWzEIbLOMSAZSVhuSnTzeFtNUPSEYVetppXjDRHtyATwajhlTcgxnjouHfGnDPPFwBfWXsjhXbAQxn</span></span><br><span class="line"><span class="string">zRLCYPrCXGlLkTFIfGtcQEyZQkQpWQmfusErnaxBmBxHNrhBeBYXAYWAfvEZcRAbgYpXEgfrlsQCpKZA</span></span><br><span class="line"><span class="string">oJHOKqFiKxAsUROBgMdajzkaDlrNErQWcciuiMTyNsumxZQXBXnVifvmhQUCsGhgyLroKXytZiLkFfpH</span></span><br><span class="line"><span class="string">XpnBXUuppHLTQzjvOkTofroLZAKsRDmRlcoxXAhglLXmpozQIZCUarFLYAvGjOQHiHBBGHkfEIIiYGcc</span></span><br><span class="line"><span class="string">sJybSqlXMIDkehivzTmIfBhjApaUklHmCWfIHSKOCJsfIEdaXMAwKHWOOtdYwYUzrgmkvzzpnKcPjtIm</span></span><br><span class="line"><span class="string">XujqDfphWzVCMvnkDkinwQVhDSxlxPeAUmonwEXNtDNnRHexlomxcMaOskEXcWlKjqpUPVxaXKKAfteB</span></span><br><span class="line"><span class="string">MqDkimZRaOapZFHtyDhrIUmdqpsXTMrcZpkEMrkOEOgMZPCbafrXYrCmmOmmHaDPcTvFLrbuQxrWskHA</span></span><br><span class="line"><span class="string">yYHToynVVpVjQFDHJmnJVjNuJIaoHwDvRGusLtSdWfmagxsaeJKHQHLCNCRiFTbpBLbofRNDpeLwEFOi</span></span><br><span class="line"><span class="string">RIlrIpyHqwHYnRiAIRxvwPnShmWMxoRlAKZdqfFiGjCFJOIZDBfsZQfirHeEOOgzAhKylqFTBfhjVRpd</span></span><br><span class="line"><span class="string">KlYzsqJJubibZPlSaDkaOGtCxwEUOkvfjhzBbsycEUMlwQEveEaaJyCknxfqrOhHcxKPSkwrluPRubYa</span></span><br><span class="line"><span class="string">YmQBTACWGwIvVVPxtPfeeXGwWnGUqtsbhwmtrDcJRThTAjWpGSwFfZoYHeSdbteZPhOaQLKIdnaTQxRM</span></span><br><span class="line"><span class="string">aeoZBrVJbRgaVupkRsslucxFlUXnDwdePFYRKkDMHkXxUyPYsQwYqlZnoQkoggPDZAFbeJSFoSTvJvOl</span></span><br><span class="line"><span class="string">SqADhQocVkkbQroGeiFmbzUvubIvCRSKzXwVnauHssYsbfKqzvqxuzzAjIbraWvirWuBLkFpNaPCoWho</span></span><br><span class="line"><span class="string">tbWevDIsPrfzbxmtgCNcjtQRppXILEHfaLFftwtjbpZNudUAelcuRdIQOKmymvDuMCZLNNiFiEZBvJAm</span></span><br><span class="line"><span class="string">KrxRhxUEGjwpLMweMDDuXbABnaWRKzjdhrOZokrTXnrcHyuTbvlcWyYSfEiZJRmZcWjYdkPOUiZTvVKd</span></span><br><span class="line"><span class="string">GiepeYdPzRQSANNpCqgsMnhwfYeOziAypuEfKwmxFbAERUtMOeqYAgEcXjYgRQcIbsTvfLePPCLQJfky</span></span><br><span class="line"><span class="string">RTPwybZRwcFSkjUQbnWLEfrgUqHZdToQJsNdRyAtOfwDPYuULWXnHvRWMhggjwyomJqZMyXVuKgwOeHM</span></span><br><span class="line"><span class="string">BdNIGTyCxTCOEECOpkJjVDdoKObtclvkNyoiGUVLFkepwgfVxuXJdjdbQRzVTaDEkjChoAEiieSRkFbI</span></span><br><span class="line"><span class="string">JkWCdxWvaYshMWnGkNaBdzXBvtWzbodEtYezHjyawfSrgwSkTfbgJnoEaqxhPLwrWskowESlxEKifaoa</span></span><br><span class="line"><span class="string">SRWYRzPCGWvWDaNxeebheiMxzeBaQhSnSvMxpqImkswTDTYfyYheGbNMRIPwsBoONxFkNmpEqSYSMLCm</span></span><br><span class="line"><span class="string">IDbHmbhchGBoXBUZIjgmucQyuKsgfqJhuJEICzeSjuQRUbmGbolIeOuxGgcUUiYIXhzIKVVMDKrAVdtO</span></span><br><span class="line"><span class="string">BvfCwToUPmNeiUzCCmJTNobUgLzevOhpZDOtYfoeNLuJAuWFXiobYsfQTQGPtrOmrJRcZewFmzdJOTsL</span></span><br><span class="line"><span class="string">AIVDvrIcgCTyiscXnPfmvOWScVkECJDyRVeJfREjZsyaIQMkAcZviDoYLfjFuDSgulbzciUXjvhqXUHn</span></span><br><span class="line"><span class="string">veCKjHZZqDUkyNjcaGCFQqTUNiuMbLtQeCWJmRceXafDLUlmPskEnAMITGJUTEffEEReveXBEcHQmHMy</span></span><br><span class="line"><span class="string">jZDqshEFxvCHcNRvSICxrvCfXsroNpmKYUTxNDkUGbKNnMpiZBWGjxAQVHZnNfDvTjikNoGCWzgvIyVx</span></span><br><span class="line"><span class="string">tBTXeDqaQAxulFCTXKGDvfWBxIAIzyLKKDqvCwGqLbuZZxRaBsDBGozihSAgLEAmxjANUZNgkKLhGFtt</span></span><br><span class="line"><span class="string">cGJCAlMGLtclsHnstJNIAjmElExMEjGNzIiLbgcFnydxqRWYIEMBMzdbrgkVMQhumJAhYZlawbxAAGCB</span></span><br><span class="line"><span class="string">NnNqctqHuGknCELfblueUSKGqmaBPGTjUOCPLRFjSNBSvNwFGOeZsQysarPdKRjyXmrBewrznpEwHvvf</span></span><br><span class="line"><span class="string">mkIOynftsgEmPAaFCIbBTXGeCtNMQZmtlRKdpGHkiWVDOSzHJoiKiJHcKvQmicfupYwrDhDsTdNXRKjp</span></span><br><span class="line"><span class="string">QBHusNfXizWTOoTKoJTfIluoaUdvoXEkUjzNxTpGdsiWljcgYnzNoLfSjaeOAnltpliavdHZzmKKWVFe</span></span><br><span class="line"><span class="string">eLRGlhSthSmzbyTcBBWfkeeipDMeAjcjyGsncHtROwpCwSzjBgoMuqnuruLrWzfbRJqCNduVCzTjBaQH</span></span><br><span class="line"><span class="string">OXGahTUYAACWkvcbbppDBEcMynSvUfcCubPfdFaMadXXTvSnfzExGEZNYjrRmbEkhLzlBEiZNXjJvibJ</span></span><br><span class="line"><span class="string">zTWuKdkixlvKhSpjLFUdwwbCAIpqGkUqNcAkgTxFNCwwkHpVYRtuCrDOetrSgwfFqSBGsyEvBiOSqqIT</span></span><br><span class="line"><span class="string">pZZruVgMvblIuvogbHiCUNGigERPWrHqWLztMVIxsKgXJOUeApWgwREaIWfdJOuofDHpimksFQzVrNJQ</span></span><br><span class="line"><span class="string">pvwNUWjoBqoYOmlfLcrgQLdEoJjeNchZlovGhheXrolhGUKKMEVNMlTwAWPAMjpQTdvWBwlMdEWRSkid</span></span><br><span class="line"><span class="string">DnOvoYNnPXzDAcGhiSAkRFduHEbfQuWUNtKvaaAQCHhbsWraOqSGyAvJQnSTgzdeFpISFZstSomdMAnT</span></span><br><span class="line"><span class="string">gUsdUZKVgpxDOCUrGvpvqvsracIxxckATjdCdrLfzFXiXtKJwjSxQujbwAYoiFCUbhcyWOJniKHzzeHR</span></span><br><span class="line"><span class="string">tEJBsyfSnujCViaZzAciztYqGavWgdkbGAkOEFpBhskEmyaqYixCckdCQCqdTZtDAyLXjPQyRBkUIjFC</span></span><br><span class="line"><span class="string">FUBstGdAgRBJycsbDjNOjeXQsyJmmHbTchZvJBunTGrodoDIMOqYxLSuNDkgKriArlhAwmKxMSQGqAtz</span></span><br><span class="line"><span class="string">zMtaiDZQtoGRcGVfhsVCbepWWXUteFIGlizzPiuMpWLzXZrwpXUVYVAHNxxJWdiBgLRFbibuiPewSwPB</span></span><br><span class="line"><span class="string">AuZEjTfVNztSAsGovjTwLLOHfLeFIymEUeuLhLLNsDPLKvkCbtoLtVsqMtrYSJghrymYHsztsZQqQxdD</span></span><br><span class="line"><span class="string">fsGOUQZIbwoUIivzolXpECIEqjRjGqbRDFRgvpvzBLqtDkyXFTDSxmbXJNcdnWFYuWMeoPaMuZHWJfol</span></span><br><span class="line"><span class="string">DgTsuXgPPxjkxEQqKEtxIQzIjAEzDGsrBgJDIjwVBgfOJmiGxChmGaweTwrOZIUeAIzrUQugopWSEMOD</span></span><br><span class="line"><span class="string">iKIAAkMjcZHlumQbKisJzsgPCDyDJgyMslfeRQGxoAZDVxSYZfJyyqFdmaCxGGHXIRgQYXVVnrvSXFPu</span></span><br><span class="line"><span class="string">yiwrNlvItDobPQHoaGdzEDypdFHlyrUSqfZSKEJuOWVdUJlKmSQRjcXxoLjXbYZkWqUOIELXJyYAWvMn</span></span><br><span class="line"><span class="string">uyByOHlGfnGUQJxqBIDGIgoglFMrDjGyWkysuzBBzKOGCEagpREEliSQpAoDISplbIupkQeGJKmlHRWr</span></span><br><span class="line"><span class="string">mBxYmgpCHRHqgmFocHYLWJtXVrOrJuUAZtmNSFApTqfMyyBXVLassBrYoOKItyJtSvOSfKUnMDrzsdHK</span></span><br><span class="line"><span class="string">meItUBYhDbRWZhvxLCKeequSAXLAbShPZsmlHtgjouulYhpAoTNCflBzEQcYLRMJOeCwTluqtqqRKkng</span></span><br><span class="line"><span class="string">XPYrvxBMUalNNxmCmOTyEcyeFLcgfsAdmskNanXxgyVEEDffKUDiQkebEbDGwCATJhzGVwtFqGsZbYpL</span></span><br><span class="line"><span class="string">obtVYfxMIhbpzuXLTsPwPLKdexVdGFxrZSYmfGUAFYPxUyvssGtsyqHtJBalbMlCZqxfqXRLRRVhDPwn</span></span><br><span class="line"><span class="string">hWOlEVKRdHuRPnFJyUUPNhUgloUaMcxSfCmzVfkEObYHWBMFQPCwrHCkMIzhGvApNwNPsRrkuDjGPUNz</span></span><br><span class="line"><span class="string">VIhFQklrAdZqJFaDvOnkvKdrrhTSiAqsLlICODkGLoVghGQIcxONGXdxPcmTUxwdQdAztMITbvUgsfJf</span></span><br><span class="line"><span class="string">baKhggLrwBGyVxCZDyewpIMSmaHKfopluPquInLJJLiNLnDNZVtlRJAXzsnwQbmnCdHDutUYyVdLPcrf</span></span><br><span class="line"><span class="string">ApCnuKuGIamUrHQMKtBBBYiBhoklLnmBwHgxJeJGZSWSYgvKMjYcJHaSYlOUDTkuxVyhQAVqJaeauLEt</span></span><br><span class="line"><span class="string">ZzrwDZKmCckwzpFkJcwfNAEXVSXIRnrUpyuypNKuYUCgkqjLWmhXXLTBjaWNmgtkyfCmbsjZJyiWkZgR</span></span><br><span class="line"><span class="string">soUnEpeCZXZoAOgKBMEAUCXRmGSprzgeCNIJdOpfCHHEEClZngTnRXCuHKxtyFpUpERihjIbqFYdFKGL</span></span><br><span class="line"><span class="string">KjmlaYdvSgxQHidEoaRtzfWJENiewjNRvALlIpXHKOJMfOOPRqQHcYyFodKNjTtFgsvzXPfffvlcqfWG</span></span><br><span class="line"><span class="string">eQSZOPAwrzwuOCGavjjQPSUNUXvnxbohHCAZJgmDvoCanaTzpvCWjzmgtXHOYGSRAFyEBcjTCOqaFzTe</span></span><br><span class="line"><span class="string">qmlFdAboFDjhuGWUDTcMTvJPVyKdiGKFnkdhqPeiWDrgphWkoJDKaklHHxsMPChUsQYLibMIZekhVYxb</span></span><br><span class="line"><span class="string">iHnMDNPiLqpQZUFVlJnDWtZbSXzYKuDmohbTAaxrmmqTJcZGcNEyITZmdzFNqhuKEJJRueswdstRtReS</span></span><br><span class="line"><span class="string">DoUuBQwIArXHLmPnldwJkkoVpedHtKZaqktSyHhMSJAxemglHsERKAYwICoUKcgJjhnxhKWWNALZWhaH</span></span><br><span class="line"><span class="string">KGNPFjwUjptyLDAKqEpxFvgBfxlnXItzbbLXkBofEVYWMpymbhgahXeLvfJuvkhdgMGuecwArNnvmPdO</span></span><br><span class="line"><span class="string">wMCXEQCeAixXdJYnYdTMGioYkyiWnLBOWjNSbAmbMJFktlWepmYHkRYMyMkdfOAZKDwDnZmLAxrrrMSy</span></span><br><span class="line"><span class="string">MKllAuquwTDGBEhTfouwrwMZmDOLCKkfcdYwkAmDYTxpXwgIERNYgVtoDjYXOgwXEqgRcCvmPWDVYCLd</span></span><br><span class="line"><span class="string">hGsDnlBnxtxCuRSSGNOVvhOnDYHZegKkeoUHQwJzJTcbJKzjQqlDefjmciWxizzhxfaKRyzEBKmdYqZc</span></span><br><span class="line"><span class="string">rXjpiYNtJgFvUMcslFXTXNgraYnCHiIaborpdiSotUZGsIETMVZBaRZTjiNbuqeepuEHuAXpoUpJIbzJ</span></span><br><span class="line"><span class="string">cbLLcMTknTEUDqMkRFoZkXVBbdICJIBjYzsqBpoaJXCBPejtGatjdvOQgkjRDBJPLFZlKIgNuosArlpT</span></span><br><span class="line"><span class="string">EbzzSFYeSvwzdBwZEnelUJYjAdDqUVYjmSdZuwiGSGTXjedLlNlxSJAWzlxYmihnRqMGyHAoJKApcucR</span></span><br><span class="line"><span class="string">AwwFOCEtVLGupCWrDATnTevzjFqMlIbigjYdXfziSZBfsOHMvvlGjKWelTviXTSPDDYTeornBXTaHHwT</span></span><br><span class="line"><span class="string">jSnFdVanRtjMqZUMlbfusqXlkKJjpUruTjjhkUlWLReIRIOYkLlvySpGbjOjcfPzKeciXvbXyNICLrnP</span></span><br><span class="line"><span class="string">puaJZFJPeWvynePTTjMASIhMpLgWTfnLxBXGYvlxMaWCUHXnTwwsiGXTULUyVFhypUppDXeoVHZDUsAI</span></span><br><span class="line"><span class="string">rqDqNuCqtsnLZjiBLnkqovwRxSsgpkIiWrYYeTOqfRCkphtnAtNakmZhgoxHtOWdBHKjjyTDNatEpeZu</span></span><br><span class="line"><span class="string">HrPhUOHmaIYCpRLjLCiPVrwgNhfIUYzPJsCtcTPAUcmuOjsXKwvdMUmhtXlpQAGsZAwFPpRTLWmJBNcH</span></span><br><span class="line"><span class="string">fcmTTfOgHTvfSLMSbmpxSipqfvCwUpZSITKjlUzJCvsmJLJgkUVIDdPDIJAvMcbytXCqlHcjgpYWrxJt</span></span><br><span class="line"><span class="string">rntOLbRdGUayFWCZMQKhUjGGbaIjKTUxxYyGHGWLgBBldMaCtXcCNchrlSnRTlcMmtFWztroJaprtxeK</span></span><br><span class="line"><span class="string">XnYgpRAyBqruWEXLEFEoSchAvBGHsbUugdSbrEpZqidvxOwlksJJVCwAWSsrdhnnvwzqQRtSswcmVSeG</span></span><br><span class="line"><span class="string">tUWjZgcvRPiGzEgUdbaLxwedAXYkXBHRRbNWXmgOwxHBsRlMLLAvWytARbSVPsnXtlpdppBCKImyfUry</span></span><br><span class="line"><span class="string">TyPbDNzAywzzBdNXCJsBhyGKALMfVStREpvvZvGjGDqEVdJNepVbZMbcdLeHgzJQRfkaBDffyMnAdvNE</span></span><br><span class="line"><span class="string">hqnoXneFWELWHTzHfeHMvXIYPTAOzEEqcKEsynONmmJKYqDBwmiWXSeTjQneihoitIEHppMgYnuymSGF</span></span><br><span class="line"><span class="string">SAelsNIfRqnxrPWhmZhUmEhooamTFqobCczcnLfPURKAJExipKXtxpCsrzddjUAohvMernogQwfYJXai</span></span><br><span class="line"><span class="string">UmgCsepyhDAPfFTCDhwbwoKSUxndJGcZwJDsyQfyNXjQMNmnEGRlyiquhdWIBCiiBcDlAwngIBGCiJge</span></span><br><span class="line"><span class="string">YwWEOTMsDxojwBpEyFGMoCfMlFBAbJXZEpPaimoecLninPREgOCnMSonRURAIaIpLgDTLmCTvHkIIiwt</span></span><br><span class="line"><span class="string">lQtjleIcnXGaYiawGMzYIZSJETWqMfEQMKupkgIINOzLcDXjyFzjVlfvsJyNwPWDnRzXVkKguyjJnQvn</span></span><br><span class="line"><span class="string">LgnDvEMYdlsTniLvSNylLPNcNaQjqsjTubjnKNWNhmyofEYLwyvkknCdjfMoJyvomSqJkrcleSYqFWlF</span></span><br><span class="line"><span class="string">mUThIGGoaNhkqtJoMFIzYqjYSkjoQLJBWIQyatCxOYuNgPvbVkOmYPiFrGteSujpeFwpXhHSLUYfchqj</span></span><br><span class="line"><span class="string">awijQPzKYezozqYvmcPdJvbltuKLokKhjuFPIvbLXznClkqNbpMBtAzvLQAaGmCxfSlHdsjlFZdBOROX</span></span><br><span class="line"><span class="string">bcgvgYLBzULENStfFdaweSEFEKCopCQXrhIVEIcNxcryvhTIrYxUtPHfiSVZNBbtqpIguVesjQGmUATC</span></span><br><span class="line"><span class="string">UkUqScDbfHYvXqdknoIuOglytdUVIPUMXfKaUotaQlyLDMWHYmHiHQZNuPgneZnhPfsorOLSCIBhjyOv</span></span><br><span class="line"><span class="string">NPBmyRtLbcSfoivllBtRyMGlfeISxcgzkZDQCaElGIWpDaRAhFLSxZzldHnCUoLvCVAHXLHqlMUcgCmn</span></span><br><span class="line"><span class="string">LkPGxRLjpwSFlCnHQcWJuWvpfcxtqKAOnPHpHBqHdDCNCQkkISHpdfcMsWajkHNxrzZpyDdiOAyhtOKL</span></span><br><span class="line"><span class="string">pcxulgBokhlXWVOCqcWDkgkbNOSBsuOfDRwnQmVNtzETyswrZiWGNNekHfPLphaYQPgQEzZYpksZlBgS</span></span><br><span class="line"><span class="string">zwKJxKaJipMOvFQmgnDwYLdOYmpEsADjxTqpiTugxarjFwxomipXDilXZCJjOwKBWnzYDrRsxshSHvTL</span></span><br><span class="line"><span class="string">rRyDDCEiAXSxRcBKxFfwKXWyQgNmXfmBliQFPRIGHxzzqpfiADgQciqBMMAyMkrHOQqulNKikbhkoMCc</span></span><br><span class="line"><span class="string">dOpEvBGMqjfNqadBXqclwnwLZbDSBnQywqBuMqUXAkObeWdqyzBLlJjkhOmkBrYAsinFBibjuoiNvZYu</span></span><br><span class="line"><span class="string">tjtkcyWjOFQhhxhhASsCtyOkZkblteTGzEFtvcsjUVeKiRIpuzKHqIXNurlhYQXfOZGZfsMOowrXrtWO</span></span><br><span class="line"><span class="string">PouxOGzlgVXrsJTZYIVQrgLqURRWiAcdIiBrbtruonbGVpAnhNcXojnHheOBTbUlqxTYcCSKOfvYfMDb</span></span><br><span class="line"><span class="string">aPeJysqpOwsZLgIajzncorKnHVXmeTraNGUUnNopiTvbxQgWUSGctFHBDFZrSnJKFHqeKbuywDqzudxE</span></span><br><span class="line"><span class="string">xvKCwELWcXqhRVqrxoQDdnKhOyktNJwqzMiDnddkBcLzIQDIQSdOwTaIhuyEgqHPQAdFDSkpefZhgEad</span></span><br><span class="line"><span class="string">KwfladpvTxGfrGXokDqwKSrKslwbXUFYrOUdLOUdIbEwRSpcVlTFOAkMWQfYfBTdfTlRRNxiZDOlnuAC</span></span><br><span class="line"><span class="string">iRcTJZBpXoIJyuVZUkgtCRqFDIZOFAhcERDnCBUJYESskOPFUXLKKxgxdnlbNJtwuKYrRvrgVEElweqf</span></span><br><span class="line"><span class="string">flcBuYQTQzasDzsaUeEzZpitQbEYBXYRIogcCIcWVaCeMQhNveogLqrqYDLKJGpWxrNHvqgTRWzCzuii</span></span><br><span class="line"><span class="string">izKQuVHILCCsqsJtZKNEgzXEtIaEmwRtdVwpfsiSKAgkjcksBWGIVJcCrbNDUXGbAWeSlcPrOJrDvnrt</span></span><br><span class="line"><span class="string">BKgFbaVqlivDzikqjlNcKQOYPkaaPGRrToQFTKoqOYOuMNwruxyfxpXZVjnAeohrRKdyBXXRyVzLEMxl</span></span><br><span class="line"><span class="string">zKdINNJDxvJpUTWjbTapMfkGQADTYFpCSCIUCTcYErBMYhOLumfxkYVpcdyYyCuCEiSZXaLrdPEoGNqx</span></span><br><span class="line"><span class="string">foxPXyePeREommNrFhjZpGvNHlhxsHXvLYHdHyJtVjdsmSKqtmjIFrRRuBFloyLShipzPMdPeNPJBWUP</span></span><br><span class="line"><span class="string">aMEVzShKZPufeiOkoIjYaEkyRLsEYGJBESbxBUGLeqCbPKtYPqyEHPtxyQDeqFkNGDyRpySeYoglKkVi</span></span><br><span class="line"><span class="string">AgIhUnYepVIUsvtqdYmevPSHOXhEuWRBDQtgChmDHZPWCkvofJUmKedILKNvxkbaunCICVGdwrHZAlBE</span></span><br><span class="line"><span class="string">hXeQfpyqgQxIGEHGnGOiaPbJTEIUNITNrBwPdLwaBGgMzzTcEuhavFvBHYnppgAhbjITsNtUWtmCekZt</span></span><br><span class="line"><span class="string">RaCzvMnchMcqyEAkTYbJAowHRbLkkspweEIFfNzqlEmDsShaIUFEiUdmqQRxqMddopHvBFoVQXcLEULN</span></span><br><span class="line"><span class="string">XcltWsrHaCVlewFOHLXzZgXzkVtANtonzKEWivdPRREfykEKsCFMNOxgMVAEHGioqteJhlXTvaPsypKP</span></span><br><span class="line"><span class="string">llBkEEQrRDpZAyKsGjrAJBIdFsHnIsfYyjZzdDHihhYWlIIZwExuyvFVzTRmHHZrsRiNrBIlRKiONTDV</span></span><br><span class="line"><span class="string">kszSKDGewJaKVEqeySljpVueXLTeVqxaXGlLcsZJoeVtwLtPUvfZEFqJCJHXswyiGZRmkPBGXzsLwARK</span></span><br><span class="line"><span class="string">mkziMiznscuBrNtxdyQHCsPegazWcrzyYpLeotYgTobbJKlbddZBJiOitYZhiyQvosRWohliJBwItzbj</span></span><br><span class="line"><span class="string">XUFWfNmGFazgPfdWuJtqzCsqWBXxpZkaKeULQUzujjHreSFumKRiLLNTrhajQlbnFWbfVMvhxQBqaIMX</span></span><br><span class="line"><span class="string">rxLOOqLmeRDGKDZEdHHtfMoKilbjkfrAVYizHtexpdCBOiPEUCQkLlVPUqUeKlIUPmKEQQPIoKdYlQHe</span></span><br><span class="line"><span class="string">FXCODjfiCPnBdDPQoKmTXEPhSYjzObyGinKlbREjlYreSqmyFvjTngGvxlclyUbeKBGlyJqdMcqKUeNU</span></span><br><span class="line"><span class="string">WLcpoZnyqmTmxKohLOSpHpKhVMcVyKmSQbOpJhCFSVYXALFwYddZczOAaEXbVTEEvIHFswzZZJYmwKiJ</span></span><br><span class="line"><span class="string">wckhWxXKUHCUSBtcNKuithyyoNOqZMnfOIDWRdcNCqQavpTbDOJLGrUwxBjKPycclvObfVqrsQWypwAX</span></span><br><span class="line"><span class="string">NyYuxwXhKEaHqlkeTVEXsrEmTUFvnSAJFskrRkucQWdUDquqHiqPIVZEaFzDUrnDLFFgNzuXslOXoqvO</span></span><br><span class="line"><span class="string">cACDSfIwhUqNnGzHZniqMOhfDWqyUZorwQMYtZxJcptFLFukhyXywikmMWdkDXkzipIGDkpGRyXAAOWd</span></span><br><span class="line"><span class="string">cyktXSGscHHYVeACQAsxVVBxfNewNJnvUKQGkSqyGrGESDWmCpulKUTpmHPsPGtmONeovKrqDCznGMIk</span></span><br><span class="line"><span class="string">dWMHhZNFUSNMvNctLrTvTFvTfnXHTWbytdtYwAmpgbOJQDWoNxyYHdBjPPnQlZleLmJXfYNcpaEMAFww</span></span><br><span class="line"><span class="string">ykUieBwmBIkrxlySMvRTGQtbwGmDpqFKbLOnOVfTxYHbxeetIelGhhMpTEfccYUcEBvQluslhIbmrxuJ</span></span><br><span class="line"><span class="string">LRMCWMnfEHDfzFxHZYEDFJeybiumyKsVQTogDnoFqclNDlLZzgkZvBXBEBuflgJZrMZABvYrEonxPyNk</span></span><br><span class="line"><span class="string">ruxKbsFrbCDMIpBeIMPOorveAMdwBXrlLGtZznRSWxBYBFxpUlhOtKZISQwykNrVaNjsWwcHjsMXIOwl</span></span><br><span class="line"><span class="string">tGkESLjSfDlaOCSSLpDyqmnJTXOTQuRYocmzHzWfXdQZXJuPSEkBttfyqyyCnGuuCNKrDpGBaiTrTwGP</span></span><br><span class="line"><span class="string">oIWBenHvMZSHKAOuDeEERFpbrbMLFcxrCTRPCgJRfnRSHUbUNcrhJIfeCRVKdPyrpvYGxVjnPEFhweDi</span></span><br><span class="line"><span class="string">SynwlyxRiEToTyDBDIOlzemSlOnlGNqdfABXAxKuBprvaRpZWDGdZrEtXBEuSHebUHKSQBMwIKwfIeEf</span></span><br><span class="line"><span class="string">AsyVSlLTIlrlFNqwgcMdKNROeQVtkyVLwozlBZwVvJOhHUwZWdulIgujTOQHjRBENkVKVVTVkxLtbwII</span></span><br><span class="line"><span class="string">mchDfzQrgogxhAnpLEHaXNfhlFFdfDSlGtFCaAxqWriczSHWJTnHsOHNihXgzKEATGFZjsZMOUUEkWzN</span></span><br><span class="line"><span class="string">rACCRxTrSYgiZhNKnuotUKumbacZbaEWjpifkQBPEsCONGjzhaBXAPuIenXghEKZfqugfDWNWTBKojMy</span></span><br><span class="line"><span class="string">RHQHmicwBdjSuEVXaJxFIYjjTGwfwaWCiRghxCsYwlClrgvDLbSpChlBIczPHXDNYzVYHwjkjMrgqoGh</span></span><br><span class="line"><span class="string">bRAuYjtXBtKnxGSkAphhdNlqnsjwFMrhYsYZPZWWsbLbQFVjfShRLOyKOtmfzfakHXCbygjUfgVKrMQp</span></span><br><span class="line"><span class="string">ciYDkbYxMuYgClnGLUDxliIBUiUVtFVajkStGumFNihGClbmFqRdOhOzZBHMWANvUerLhYYKMqTqpHtI</span></span><br><span class="line"><span class="string">NFmMNSTsMayqaSmLxqjPefZzISfCwqfYYTyqgoSWWIFSVJXKYnTbkQKTwhSBnFGQIKbQHCJCmZxKiuVc</span></span><br><span class="line"><span class="string">ZaLpNjHPvfQWFAuvMwEWjAxpbbHxoBiSrkcASQRCdldJsSZbaEtqmwZjzfxDbllezrHFwIUGXYiovJsq</span></span><br><span class="line"><span class="string">ytfnXZlAhaeSXRNIuBxSEzWCJwFeVQkXameHnzteQqgtlurqFSRvGHtHuBWEnrMtjONgOjgOGdbEpKYJ</span></span><br><span class="line"><span class="string">cnbpuvYHqafHlhEzRtSrndELuthxulTaeGBjFnAkEdrqHzTdSEjiEbxynmazGvcRLNqRwKepcVNJPgQz</span></span><br><span class="line"><span class="string">hBprMiGWrgZrVeLjUxwRAWSBIByuemUHDzxuEshtHlauVqPtIQziCunEbBVKuSqyDjouIhjLirAsCnKY</span></span><br><span class="line"><span class="string">vZrrAMHgqHgJniXBqQiHgvmsyJwaltSZmBJcjLogTcRoNSPiQNlksZfjeBaYYnGeENuxkOodUMPzPyhI</span></span><br><span class="line"><span class="string">ymcWvQwFvPZjoqpIDvVEzoCZwPOsejVpEngvhgRmZDnsjywgHatTXGpfCVYeAzBvcSLAFwArGaxFOugj</span></span><br><span class="line"><span class="string">lASxfGWavFHkkKxqlzMhNLiIORogcdjsvFUbYsUjzRbTqrvQXyhfwDEWxTVtIWUlzGduiVxkfPOPZFHM</span></span><br><span class="line"><span class="string">FSaKtDNQFTOswcNTRfXvDsaYNKqlDFjoMWaNXxNcDfCfiWMzoKwWZNqOIjfQfaVbEfjOzEYtJygHlzYr</span></span><br><span class="line"><span class="string">ZdrEOGdkCjRISrUhPHXvKumxagvWPxhfXRYZKuDDNhrJCnHKYGVCULcSdSylCUjwcAxgfocgxnBOSqrr</span></span><br><span class="line"><span class="string">orJrHknXAzZlcpOGBzsKHYqAUmKFhAvNbTXfsRhxwiZRqVGszbyUBYEESYyIPTRApDeBVPVlAzGwZKiV</span></span><br><span class="line"><span class="string">uNbFOpcWCjfBLOQLLSJZesirEhXtxRxxwuxfAasQStQHbzVCVybMLfteweEMiMrgFWduGExswwOCpfCg</span></span><br><span class="line"><span class="string">XZocOjyoKfSwybQhmjtaVawHEKVESNHZNEijYcKecUauMCGLYMKenIJyILfUjVWUNmNnpOiUqvXNpWni</span></span><br><span class="line"><span class="string">ubRxRrPCZZSogrRMxXOTxPzWhYGyFpevBreVCjTIlsbjTGDAznAlRhRAtUJxKrXNaqYMrtPpcXKYrJpJ</span></span><br><span class="line"><span class="string">yywEqkLzYYOrkvlszvYbIYtNebtQFnybgtnERMMRRDsfFsOlUCSIgLXhtelpPafxziMTiCxlNpRaexHi</span></span><br><span class="line"><span class="string">CkbvfJznHrUGuclebBlCOhSWmCAbFAFPVnHCwmeqBeavrRFketrqXxhtglMRNQpblRkkDQvsVyoAsuxL</span></span><br><span class="line"><span class="string">dwKbmWmUdciVSAsgRFuEcgZrnIiVUkpjxaCAbCtkSKThylARqBCSeWOlEwmlqcPsbtcEUOEwlfLpSxuJ</span></span><br><span class="line"><span class="string">glPEWDwrskIUqpeNhBPCxbpngOBuWKncBBnMpmBwatrIdxLMSotpPKPcpffgNTxClultJbckZDbAvVuz</span></span><br><span class="line"><span class="string">DkLCpxtDTsRLKRCQQtYqoTJZgbwlCgqhQWjmyFAZybxQJhVucTMxZIVrVRliaIpCAobOSqeMaPYqnwmy</span></span><br><span class="line"><span class="string">LVFIZmlsfDVPLblTHujKCwTbQSrlVGLWXULaxFvISUygsannvfziYcHgJRfspIbgKhDpIPTEHEwGeVnf</span></span><br><span class="line"><span class="string">FwnlZiJlPYkjECjUlyScZbKkTLjCZNtbeLIKEjwsUZEbukgZSKJIuOSHBMsmnkWuoJdYEnQPymReQCjU</span></span><br><span class="line"><span class="string">PPJZcwWgRVXTKqjvbhYeyfqNWVTfCmpyvcuLJlHStXmBNVNEBXUJJwoRyLpigahkSBimtPYrjuNctYut</span></span><br><span class="line"><span class="string">oLowRibuzBhkqeHeSOWvYaQMAWYNQgYyZqsCmOFDsDJenenpMTFpdhDmqJkNuBMbOJAqYzqsZKrCYpLl</span></span><br><span class="line"><span class="string">whBIanAQrihRScMpDLrWpYsOuDqoRJGCaAoPPuNiMCRTtYTPmDXOEOelCkKjVWOyDyXTIJLqqDYaFQdP</span></span><br><span class="line"><span class="string">KtWVfTSDQjUMxOlpVxLWyxauVwyzUiSmfTehVKHhGnMUhdjyAmJrJvvJHpmtteyRrXdyoqctpAmYHsxy</span></span><br><span class="line"><span class="string">tVErfWpoXyreIGBZphnBUQqiyXhITEDDcjnLpISLTGQgkonhzLgGuJINtCMrkwhYKTfjACdsmXjwgrWk</span></span><br><span class="line"><span class="string">KaTLnsHfdcNYfDaqJdkoEvVazOCuGGwwvpeAonBxOOgrRPNnfqWKlqCIvbRTfaswwLXxlANWLezMqinF</span></span><br><span class="line"><span class="string">uVEKJsDCKQHqlWysJKwRslrpGfsHkfMTQoUZEHhyRZjkZzNzAZyGruvazaKtsbmixzPrpUuiIzSmDvkH</span></span><br><span class="line"><span class="string">uaBRAAqYXgHWeCBsklJSOFtabLFECjyTXIHWlewJxVwYnAmnsZPpFbzQhaMiAlCTxkOEuieTGFnGvHfS</span></span><br><span class="line"><span class="string">zVdrgBnRYNcxhfViUDUrwdlcdyMmSBtUniuTeKiFmObEaxjEkgDfBrxypiMDcLEymMvNqknHjCYGmKaf</span></span><br><span class="line"><span class="string">pXWflOTrfPkwfhYTDNZjtlrkHjQijhTWSXEdSUuZChWBGCegnlJczLykBxGjAZacLzBZvLBYaccuRzUx</span></span><br><span class="line"><span class="string">ichhhJRutsGauWawMkYNKWmyqeWNHHmSTNHEEXkyzTEazWslGKxbPjXlJUHAzBzGsRngikeUIbfDlzPg</span></span><br><span class="line"><span class="string">wjisvqqhSbUPHdTmrptoWnckRHHVlqQowvHqmPOEOpMctzpTHBANmgXIXdCrrnPmQvVSYdkHGNgPkeqX</span></span><br><span class="line"><span class="string">etMfKDVywVYPZGfaessbsQlRErvlvuSimqFJDnLLqbIsqHfsKOemImmKPLUHKCkJxFDBHFzvvWFFlpEm</span></span><br><span class="line"><span class="string">JdkUhPJCZlZChNRFmWssSFgIwoLhSPDCrlWjSqSfjPMcaiwDGkXFhRnpjZwuZLvWCEZGeIOzytKuspSO</span></span><br><span class="line"><span class="string">xoJLNmrnvCZTPkuYfuqQgNgDLUUabmkGGvvbTOcOxfxOdNMPdsVbZihuYfBwHtdlwLPbhgYiUBBNREma</span></span><br><span class="line"><span class="string">fViogJEXxlHlUelWpNUsXSiMLMiTsaNhIUbQzjehVKTqIerVTeJfZcWHsIeSfybrbjHvOohsSWAnekJx</span></span><br><span class="line"><span class="string">OXoFwyVXHVDNHkReoyCgEthyfIQwLmJNSTpVJPilwtXkUkYPVREwEJrCRSSgFlyUTMlzDIbhVzIsovBJ</span></span><br><span class="line"><span class="string">udHDlQwQOSYJVOBehMMGbXbURXkweyKHQLiRTXCMSTWIvcTZyuPQyTVKaFDkvquCiZYZtZwEhbALALKP</span></span><br><span class="line"><span class="string">tzMEjBzLvPPVtdkAWHibBOWeiHXTYpTkNjsqMjihHEChxHkzfFltKpDOSiODejaGFUrClhBCoeQCmdMn</span></span><br><span class="line"><span class="string">QPljxMEeSyGHBLMjYshBuFFqANBEjpezIEpaOmxRhdLGZklIcYDhvQnoCsGSWTAAPxMXrYrVwPbxWtdH</span></span><br><span class="line"><span class="string">IUojjbJpnqvIushyHhOdnMwjxajUQmevjPkHkhZIgOzBsMmqWQuXvcFMfxBVyxwJAjXVxuEZFXDKYnbJ</span></span><br><span class="line"><span class="string">UYFxFvieOiwmzpmwEHeByyVRuFWrTFESRMUmmEKdGdwyoFkEhQrSPrdynmSbiMQlgAoaqTVCLPinDnYG</span></span><br><span class="line"><span class="string">bLLxVNLWbhBOXWVgAgINWnuReZifkfauKzFznuDCxoVatdzCiLbwqSxNWXPjnSAZCdoREoEbPdAWbAAf</span></span><br><span class="line"><span class="string">kQpfVCOUAXaNjMuvBHovQEPuGUhYaRcJZKrPbiRExLmUjBvgnIFolOCUvtzDfrdVcjuHwZbHDQEgbLvc</span></span><br><span class="line"><span class="string">QroWWKtytKQbCYIQVCNqlnAghctRnKDSLjIWQYPBnAedssNOTCFGUdoNZsEUOPLjyJiOoooXMrVlFXBB</span></span><br><span class="line"><span class="string">XcGTNryNEjkFdstqurJHuBIrdSlkkYweAPYmeXSfZiYCkYCAEDjHDHTvGqDCAqFqEKHCoXNOYktyAKAY</span></span><br><span class="line"><span class="string">AVkDjLYfSneGeyBVTZexBTIAOTeeVtjHDWMByBBuwnOSdwfkUyjTbkLtqbCzcqgtEBENCkvzodBgXYTo</span></span><br><span class="line"><span class="string">ZWcHxhdxEMKAOOvkPdzcuLwibwHoDExDneNWrOpFELpJkwkwozIbeRLvPCarVzLEXjYGJPZfgquNQtjf</span></span><br><span class="line"><span class="string">uZczEOvXxOTkzflIkyeXMhTMpkZsauqZUCZHqTUaWCzDEcGDqCYWYtKOhAdzYkJwLlsODJUDawofaQhG</span></span><br><span class="line"><span class="string">ZeNzXaNJzHbxgMuqGvbEXJkVZqZcCBndTLLUkzwPyAdKbfcborPosRzOTHWHvbhBBCOwAhNuDiiHdiDc</span></span><br><span class="line"><span class="string">rhHlFeFuAedRKYqiYGAUikEwkfmUIcefnFfIaQsBOEvojMfctvrenocRNPsBHBGkVZuyEhYeFJbqdgCo</span></span><br><span class="line"><span class="string">EoudHbDnqJsyduLzNahgeXvqbSpSiWBZEpFCIGFFbDFDbzcpVUimILWSEVOqEfKuLhxZGRBjIzBQPyNJ</span></span><br><span class="line"><span class="string">PEysTPtjBcRmcdvYVvBkQtCyLdCbWWXLjbuOAJeGhbNflmEKdgEbeOoywXvWiLepktFpecGQrfzpwRwh</span></span><br><span class="line"><span class="string">rUhivlwwqBUChmdfeWsMBGAcnksaHFHNbehlKDdPPcSJeafxLMVSnDvfIDxsvNxzvWjDWGfWjRyMoSoc</span></span><br><span class="line"><span class="string">YylVJdhxYsOXkMGYpiIFOYXvSrPUafLTlXsbasLxVdBXfYSmmavmOWuKEiYIZjOzBHnNUsQplTFxlQWY</span></span><br><span class="line"><span class="string">tPctdnTdBcABexxvrrINkLuYCqAyajzspCjTaHemxpeLQzKMcQTQAVVMjBoLXRGvTrxNnrAXEMwapfqp</span></span><br><span class="line"><span class="string">mIpMLIwWCVHhZgUaneQMaEzvZVjrakAuVpkoopYUrZNXbkbxTukyyqdSLWDtdkKBYTEAlimnbVxnfegR</span></span><br><span class="line"><span class="string">HQcZmLHnhNHrrezNPVlBBZDBZIXPWNvlbWjZDDYOinhWLSwcPNdWwzxZNSflmAtwsbCVbgkkBhWDsJWZ</span></span><br><span class="line"><span class="string">YraeQlNLtbFNPoPGaJjKxAxgEZnNqBAnzDwEHFaiQXMNGLmlSnYldvlfvRLxQMMwhAUWvcxepgZrpDRe</span></span><br><span class="line"><span class="string">cPFOIEWdIApeNXYFoNPgCkyfLEXrKECXEhbSfVnwbdESNYGawhsfEwiLctYaneUsKRPAcYMgsrlGzRzm</span></span><br><span class="line"><span class="string">BrdJgXXbkNOxJonYSlbRvoFOHkjGXgVvQqFioBfLRESYYXmXWteJLKbhDoctrkOweZLKPfWzqZdpeYQG</span></span><br><span class="line"><span class="string">EmccjSPUhlROqqsYtSVJozmbmHTmNsKzTLWoPNHQwzfdeYnjPwpVKEXskdGhLYcicXEQbjcaaFGYAvJn</span></span><br><span class="line"><span class="string">fPvqcTFyuikqWCkGzuIQCRSAnimgRmEwhClewrLlbCQNtifZSyzicOXHTVyTZsEUXDeAEHZnfuuEcinH</span></span><br><span class="line"><span class="string">ENsjHEVpencEMwoupsKGjOWIKfXNUyXvEwLfgywfYEFAiJAUlIkyJHKBEnIGoldNjvtzetuJDSNLLuSr</span></span><br><span class="line"><span class="string">iQdEmwQEYIbKaKzggmqRztHJbWythxhOXQxBdxUFdHyPlFXYklctvVOsOVevnxgaeYCkQPtcelhHtdpP</span></span><br><span class="line"><span class="string">lWsmZadACOFArbbLIYSVyoILiSwhGuwuJcqqoryaCNqBFIZDQSwCYYzNxINvYBwwkPWWBeGdiXsicMTl</span></span><br><span class="line"><span class="string">KQWlKogkmkcIAQNngYcHhAhQLdLiwvnntDrWBgCFjfbWSqufRneGvgqeRaBqxGGaUgbTFFVsaCurZbfY</span></span><br><span class="line"><span class="string">zulyAAaccUGYjcCHlWoTgXJksmDlSojkFNMFxXNhAVHkmXcfqQEtDlbdmJUNBlmUYUYSvuTHCufcxBmj</span></span><br><span class="line"><span class="string">GSthaqwwunvEuRtEFObChykoVcOMUkpzRuXBOioNNkLsxmdKeRVqztCpglykodVIkRVERKYUtCNpZKRO</span></span><br><span class="line"><span class="string">RFhfAZEPmPJWqNSKDjypNVlevfXEDKqxarWSlSLWdebXUdpLiBvvznFnbLsObmcxkYJHJrVOIzxCQAmg</span></span><br><span class="line"><span class="string">BeqQRFTkBZdOtIlcfDqyVmafuDqImlHlEugaQUTSkIuciafdlUCNxXSevvNnAQJNVsVGTSoVQfyUchtv</span></span><br><span class="line"><span class="string">cInpTdlVHKpPWmrzTIgQdYNSEQGLpVwfJZdJlwdFJQhyquapucUwUljzqPNKQOBAUTRbypEDFLLhAhJQ</span></span><br><span class="line"><span class="string">RgGpLCbtqvRnGfyGABXHjUyWyOEOkBgggQlyWZovtAxrOMluxkvDXPbxoPhKfIslXwZCFSdhfyVzSXex</span></span><br><span class="line"><span class="string">jvGbixFRYaGFuHvuABItibVIEUcoalcVpRPMvftpMhAZfFktDHeRgmfjhIjWqIqfbMqNVsubsOwhfxoj</span></span><br><span class="line"><span class="string">DqcCFnkfHbqiDMjPGpfWDPELymrBPqNExgAKCvrWdlHBFGjQFNfRrMkJwcUmemKExBUPEGkvcVkgDLUK</span></span><br><span class="line"><span class="string">IVUuwJwqCtIMRHNWJFYsKLPChFsJTRvkwxOtXmcLoiffSOKwQlgNZzRwgwMDFoxWBjlwDCjUvJFnppWe</span></span><br><span class="line"><span class="string">DbHlhmlXxBoVkZPYtRLKAEsuokcFCsDcoJuVYTNiHubGnfBSdpZkHTEJscarcbMHdQLvTORVbYgcNdKb</span></span><br><span class="line"><span class="string">WtBdYfLIiyqyekaXtlRAsTWMxqaplluwAsmSPBqwpYMqjqDLvWCqgAyCIthWPsseBMguKCPFYdKVBpdP</span></span><br><span class="line"><span class="string">rOZrceDVHfsOYmrzWnwlqrRnUlJfuSpMSBQpoATWWrGGeuEmkvwaRfqgdtqjmaOlmRCUifUvsbnqvWIo</span></span><br><span class="line"><span class="string">AWKbdEhLIEWWWZLjLMHFNlYwKwaEcnlhoomPEvscobLDXeBriBmeDFhOOiLvmJnuvKxQxMfkgyXPgWHL</span></span><br><span class="line"><span class="string">kEVuavaaUGKAmLVdwZnJpNmUmuJTPUsrPgKwuVOANjKtGflYgnDLhaeSZxlPEsTCJphEJSiCuIsMbQhL</span></span><br><span class="line"><span class="string">FlgnQoRmqiJRsJFCLRWNOGeyGuflmFPqnKBFhJKROtWxoOsisrOPooOgExTLsOeyXsJryUmuWFOunjSS</span></span><br><span class="line"><span class="string">EDMnpQqyXexCQOVXxfHjmTGuKALGURUPxBcweMNyvgUkIVbcQujbMFybPYjeClgzqHoZHclWTsiTFCXg</span></span><br><span class="line"><span class="string">WIKfMRVTOoHmelBlPmSAlMahtEuMKEHhiAfyItWygQfovjBLXfmJtIMqoZPLuVzdMFMwGFSHnGqgQavM</span></span><br><span class="line"><span class="string">ojqzCbvrovLCbeZjBVqrxDcReGacQZMhUfrKCQUuKrkgpzomMJdKaPSxmfoNsPLWuvheCYMuEzSvcpxF</span></span><br><span class="line"><span class="string">DsWfQsZKXxVYUKWzxBjJnQoDXHWFRtdYOVVjZjvIgfsKdvJPmifjeZpYZVqBuwpxXFXASuJtcNAaKwom</span></span><br><span class="line"><span class="string">nEltzFeaHswezwLCEplWAMFfRufIHqBapKnGxnVaMoHOCNLhKVEcBZNJLnXXCWpahPNdKVQlSwnexjSb</span></span><br><span class="line"><span class="string">ILmjBMrxJsXvtEFAAIqcqoJYzffJgiKuVAZdliWLQOajkaoPnoxIguNTKEAWygczJldqRyKIWlaJGKvv</span></span><br><span class="line"><span class="string">TJizJOCytQXttiktYYbNbplEqroVrIoCSWpwMRrMrevOYvseqtMAYAERFZMbrawXiNyLKnYwgKWkLMlk</span></span><br><span class="line"><span class="string">NBlgOiwczdNUkLbDNPZTtECMJrAqnbPoVfLVxqxpwouGZbaBXRWITNsdpTZADBKtQfJzXgPFeFHvPHNa</span></span><br><span class="line"><span class="string">GznlYfYELxZfDuuaLfhaFyphczWVIQDmUcNDIiViXSODMXKBvRQlUoqXtSzMvATiSMmqrfOaOZZoiNXc</span></span><br><span class="line"><span class="string">XlnRcriXmwMLolCIEKSYQkRoVbSWwqeikkZKYnUcqcYVgmZlUkTdBaXjnrMZRubnXTqGmOKfFhGKeZEN</span></span><br><span class="line"><span class="string">eKFowLkascmPbcpEGvDCmFCoagymDKQGWWWrOuOIFgiztPykPEqWqXnkYwmqTxkWKLDUoXnfyGDlSVdi</span></span><br><span class="line"><span class="string">MvnPcaxDdwzBrAgCmdOOhmrCwiKLryIgrBehXwNUhTJVNPlTToJkySSHkaQolyrnqcvHeDRfdhqxhPPv</span></span><br><span class="line"><span class="string">LSPGPpEkdoIwANERseHoeiobSLZtSGgjFXFOhTMGRIFckYvVIPMdskUyglwRIolveTpRKUlvjmKEpynu</span></span><br><span class="line"><span class="string">QOOcxdaBBHJgxZoQWAjaJKNDsXSDeVfwMzgSrQabQbqDeVUTprVAYToUOWqecHnJvHprCTSnwcWefwbG</span></span><br><span class="line"><span class="string">URVvuHolXmDoJGvQcMAlnjWviqXXElYsAUlpnaSBVtvqUMTGTHhjPVWVvucYMYcpOiZyKWujCCbAYQxA</span></span><br><span class="line"><span class="string">havaVTVjXyUmBuEqyjAXnFDWbVUwkCWLZLCIrGgbwkEdrvuufZeOSSoWETHDwKmUdQixOPoPlipMCJOb</span></span><br><span class="line"><span class="string">RsdqcRuhTdukKHLVSTZqwpMbtMiqVHPICekBuKHveBDzWfPYRhuEKeeRGEbYaGtnhVulPghaoOrTcdTq</span></span><br><span class="line"><span class="string">flgKpTNcgggZTCfkNHPRNZVveBmrUtGgxwkUastoXlfMxfcPKXBUIeShQDNiiIHMsKoGmpXfXzHXShzO</span></span><br><span class="line"><span class="string">AKejiEhEVkjFgUoJOVGfsYGJEOPdGAaUsBOxVZBwyYwiKpMiFXZXuMtuTseyavSHvjMqlCrEuaNfdywR</span></span><br><span class="line"><span class="string">yiurnchTGKPQQgYakUekONfGiIJhfCdtKjwZKgPWFeYnBiifBpSyvgDrMFHIpxdqxEbutkmiSIUFKBAf</span></span><br><span class="line"><span class="string">vcrjILUjyYFcdGCEajRQTfyWqezfDkoOlsYmxYXBNkzsIQnjiqnKUBzGeocLTYbPoqpTPsgNxzzfjpfO</span></span><br><span class="line"><span class="string">BokfghaJXjqkfcyMflnkvbGvsRTFMRBYHTztdMuFsbYAeMRNEsAHOFmSwUhpTssyXkhBBpZVDIqkQkth</span></span><br><span class="line"><span class="string">KPMrOaDcarJuLsOzTowjpjEawsmPklWyPuCEPclNQaCTQRUmXICQjZMBPrOwNrixJrufiYWYlwumXPgx</span></span><br><span class="line"><span class="string">pYzbgdKBFPGLoJCJSwYQsxjKSuWaWPgRCaaWmnhSzRhEcgnSzzHpozQuoRglRMWYoaFDDsjUqVbXEhcQ</span></span><br><span class="line"><span class="string">nVmkeFacKdHbsUqlHyDqsCYPWQRYFWloKKOxsudeRTnLdMhrVPhktToDPZZxpXVrQOTlAeULyGTMZPeb</span></span><br><span class="line"><span class="string">yGYOpAHrIHmDXkzpkzNlXPmRepQIXqOJGPzuHWFGGLDZLxtHAHmujfvplrOiLVoTLrFMOHFBVqETxzWR</span></span><br><span class="line"><span class="string">VWyHqIsnEHrlCRSHypLtIVSeCQbdGAPlflTkzEUhugBdOyKlPrToEACfmkbYAuDlMOFlRntImtzxfmFN</span></span><br><span class="line"><span class="string">uOmEEQsxxBWqcWdOyhLuCOPUdkLuynBsyRdSeIFCKXAORTonhJKCykDwBrnKzDsfDtWGBdFXdNPWhocv</span></span><br><span class="line"><span class="string">pvsyITRRgBbrApZerQAhHITbyWJxCxYMlKluPBcZvqsqEKIDCaVuDaFHCbXEcIxzKQIROawplvYEfwhy</span></span><br><span class="line"><span class="string">iwiUMaQGoEsGwcjutwTcvsYNZQtPENxAtJnQzWTfFKufOMCxeSNVdTAgyYePHjjyuVtKsZXHQQJMSmCW</span></span><br><span class="line"><span class="string">ZFnzyrKEwmWrKFedevEgAydYgCHiwiyKAguXaZeTzZhmJLViPrLlbvSHpbudaQGaLFMEnhPZbxYWknCH</span></span><br><span class="line"><span class="string">exvftTUIqExaEfXKOlxSytHhhJeQfwTLRzTlunGBWmUxBfuVXpjeQraRCVWxgywscdltmTbBcxFVzcyy</span></span><br><span class="line"><span class="string">ZCagaqIpNfOADGtwWBsPCTcUEwKxhTeaKwJCCGiXRaBYvbpYVDLwwyvKvgHNPhhznMgCXvvwoxJQrjkh</span></span><br><span class="line"><span class="string">fjarEWgBehnCLXKSHUuCBPwPSkLzHlHiffKuvHhgilwPSdzlGsWOuHZiuKbdjttMYDrRlIyfqfLOKENp</span></span><br><span class="line"><span class="string">mwkniBQjFIPmsQaInrjsugIIuXJbxZAdcUDqzXsdpFyhcpowmyRKNJapNskTOixMHnMlFpgHwgYvvAfF</span></span><br><span class="line"><span class="string">pGjLaGFgyHOBIOwDFrKzqjSbYtjsVcGouyNbrRJapyNXbSwugcUaUMBKNHHvZCzXxxaWOHMtEaqbnxQN</span></span><br><span class="line"><span class="string">FzqNhhbKrTvCAyojELAfULKXosOgAbFHbmqZPbuJxbrDblfiBaTamHYQYAndeSSPGUkEqArXTQqhYAJY</span></span><br><span class="line"><span class="string">LznCOiKaDVMBDOPIochwRckSZnwFPdaZcFTIpEczuUTflPjkImWrbcQKMmNyPXIoGZtMjUnGSzTUgnON</span></span><br><span class="line"><span class="string">JuxPHNTvZWbrJKcWKJIoNFQbyakwWhaMhdmJKBxIqCHawWIscvanrrLLQduhGDgvfqHqptTZNFcquaNI</span></span><br><span class="line"><span class="string">heweaGAFjexWUvIszXxnnOjthuxAXztupuHojgesvkaJDPLEPTJNPPxDCDQFCngVnKYDHbOQkFTYFkme</span></span><br><span class="line"><span class="string">MZLHLITtVnfpbjqFbGAhKsxqnMJALeSfUVIecykZGTJWHOqTOovPIRTFJjRNcgRKQuvqGmSpPUmgSqcH</span></span><br><span class="line"><span class="string">wmHVyFeERCOlfOolTqcBJidHujeMLzrETucooOVDlHKnlWPystGRwUKAOtysSnmqhCCnJmvANMMiihtx</span></span><br><span class="line"><span class="string">pqRrhZOvlbZCgkpnrgaLpJRqUQrUrxLHiznEItrgWQekyuOolWFpFvJZhntKSdNfUMUYVDMJRhYSsaFM</span></span><br><span class="line"><span class="string">QscNPABsmZsSFtIMItyLRZKjJmpjdOirMyocIQPQOGRnpEMnrqpkhrIurLqukILkcRLGMOmryHHfJvlt</span></span><br><span class="line"><span class="string">pZvGmEdfIuwMFnfYKMhWqixWDXwhHOAIvBSXzqBelMlzIYtCLqSonFvtknAmqsUqcMHizFvCWrxQlowp</span></span><br><span class="line"><span class="string">ClSoCxwLbBndOeEOXuouRDPRQHeMaICUYdPZyGBmCUMuiZkgHbEWfzxmDGcdxHoiVVTQIHNiaMANkyjj</span></span><br><span class="line"><span class="string">IjsqjybwhyBRlvuDuLkpJdCZRaKrlDnbNzvYYlhEcgTFfcJFIdOIfDFdaHKynNciLQnyGdgoQwgRHWRx</span></span><br><span class="line"><span class="string">NuwBHTrZEvsQjDPinPntkBWZzkctuDXgwyZkmaxMNbqZGLNiSLcJZEJRmsdCRchNdqhzrmUgrLBNabgg</span></span><br><span class="line"><span class="string">IPRYPHcWIzSZwVsquDwhmlbHUeKyqPZKLhdeUUhEhJTRpCEVLEdaRXczhlDRAffkQBIWGvWHPPKkjTaE</span></span><br><span class="line"><span class="string">jXfLJQRIjuyebFisNjIufjXIycVKRJcaxFEKsyoSQbgcMgLsVYXsMqTfZDYAUZoWpAFWBCSGHNAfnQeM</span></span><br><span class="line"><span class="string">LnSGwKcxOSsyqwwuqYMFNlpwsRGWuTAoMujZaxNfEqrTEMWTzwIhYZGvYCcwXtPpxZlBIayyVSfPqHbe</span></span><br><span class="line"><span class="string">BJFFtRXruZOQLBkLUjOVFchJucgVgjqFrTCjRLVQQoigrDRrnxTsHmAyDHldLFzvtOfguWfHzJXaIZcr</span></span><br><span class="line"><span class="string">eUwMOFcXWjCqrduxpfXrukaRjGsfvUWQnxoZuYfzSIldHuZbpTvUVjkRFJnJMgncxKFSNnXpCApwgcTk</span></span><br><span class="line"><span class="string">sHYOZPLTWNLeRpDlrLSpRzPHYHctMNbODkXqLAFjLobAjnzOTwmhlnFZwmJLJhCwQhSvZpXUNpROGUxk</span></span><br><span class="line"><span class="string">ZtnUEvDieFVZCwMLhFCGdUpLoylIZXmLoziehtmmgrHHsdxNdaEkWuxKUAFrfVzEXhbwhCxoSYratFsK</span></span><br><span class="line"><span class="string">eWpACrEsMGGGZGIsxxscqkEyILkiZtgHCPiIwdLJyxmEESUPkTgvcjShRqNZBjPofEhlOJYWbOuVpdnK</span></span><br><span class="line"><span class="string">DWiKYvaLGJwqGSNTKvhFBiUhNaFgDuIkmfHzXbfrEsBkZUOrHjlZPVDXZLTaTwhYbdxaPzeOZltLeXEz</span></span><br><span class="line"><span class="string">wJrxojiZklhyGbpmTUTGRDBjyYKJfqwRxGmTJocpfJEWLPYeVdjAkbqnLpQzzUPlvsHkbbOeOeEQWkrR</span></span><br><span class="line"><span class="string">rKMDOGUaeZzRpqktMEExzosREwLoureyZKUodbrRTchwlAwGDIvJhpzoJLgeXbMsrmepqCjtTPDpVlNq</span></span><br><span class="line"><span class="string">oAFrTJNMvgjfQzJAQwXXhxRzbwuyvLeJlUgMgMRCXjXKHENNDkslXLdnkRwDtGaCsNCJurrWaHOHAOYp</span></span><br><span class="line"><span class="string">BOBylBecTKKAVxgEUkFkGlVnsSKXYYeWZaFcZBErXHqgebvFvRqrFvgFNOztvSeWzdODZmvDNfCcWwcE</span></span><br><span class="line"><span class="string">AFahUlhbARRKkWXCZmbXOOCRFMsFobcDoHfrTDoskEKCrxrRgOqxUAYDjxytCeOwTNtqWjrXjenaLbYB</span></span><br><span class="line"><span class="string">wnbdfGwuossdiQtkBZxgivjldNOsBvVtVlGYDdXCbBFLCwRDuzzlitWbvsFNXGgETOKbyYBWbjqnLWGw</span></span><br><span class="line"><span class="string">mcQeNrOxtXRlPfbCLwHcAXdrIdNzuYghOIVCCiLRQtYdNgBKRNzKjkeAKCozsnMqZUHNBcwVvTkTXjJP</span></span><br><span class="line"><span class="string">cvQPOCmiefawwenfMLzuABCLMADMnOVmOEjeVCJaEWZBWUzZFnujQKQghcoONRYZelwjjGgbcsxnJsMA</span></span><br><span class="line"><span class="string">wgFxLloLAQRdDJuDICZJGkwAfBcwnMRKabOZdXwRXrXRJuwtloDStUAhJUVQeKlWTuypsqEQUQqLaBwF</span></span><br><span class="line"><span class="string">ThyfBEVodGAumZxZchMFINuBUcSidnQHmUrYGCQBbpJqUngyXABXyWKkdxCeTNuYkvotLrAJCMnfTazB</span></span><br><span class="line"><span class="string">dsXXkuNuQAgPuVPGqrZFfyCBnhIyBbbsyRTaKrOiqtVGQqcjsaMePEOUAmRlOjwTUHGxGawTNodzwFZL</span></span><br><span class="line"><span class="string">ZPfqYvfEiytWRdmdIGUHqKJByaGpYEutLvKmkRpPJcvLTWgRFXQoKSLeidFWuftZSZCezymCQLQJfSMM</span></span><br><span class="line"><span class="string">pfJwFwEtuWfnoppbEqJByAhhHNmiYZBRowXXBCrOBWhxZFDbDgOxOsGtUblQDsLPUBhuFGhgDkzjzZDi</span></span><br><span class="line"><span class="string">MYjBGubJswQrITThMFaUQxrWTmwxzttWlooZhSaRmNfLixGnvZOxWLyMrGeClehUvjbeUFeJJeRmgQgM</span></span><br><span class="line"><span class="string">yeVhbberBaSRbWkeVgOaCzdvAHusWYdhAZJAhSERyLTCWEbnuIauyVbHCZKhjiotYEoUmyiUUotIJcpz</span></span><br><span class="line"><span class="string">eAkpyeuVNsCJdcUgLHarCHcltNIfOILYMmFgAJpZXGkHTqpnMOPRmgQpQyXRBXgSkXxXiySGVKskgNGw</span></span><br><span class="line"><span class="string">PRFYdYxURZShvAvbyEnLZuDjoYKaVrkeApoJFwdAXzQquXScGROqCsFIhpHdUgzqPOUEymrJBvmJzhwY</span></span><br><span class="line"><span class="string">mclwEUbTlMupnyjkokkIMOoItEJgrMHiHonCzimoEHAChByfckGlWpPhmHwEKuFpBpjlWSGefDptjCzB</span></span><br><span class="line"><span class="string">IQnaXZHvTAhMvCewaUGHLCmBdBmnHvcCWVMClIytCNFzmOwHCZYuFTFGTvjtrDYSMmxVCFnqiLQCMdyZ</span></span><br><span class="line"><span class="string">HryFnOlSmwZkPczQqfMaFUuRkEhSemEiyfTaGiEsnxjxMPAsxPAcUDTGfQHQzMvHLjBTpuBBYWQvAjuX</span></span><br><span class="line"><span class="string">JGHPZqSlfaWhBmUzqCOWptPBfuHxWthbFgVeteEjoOqzfmTDbrKkypaLgWiuJyRctvXmrqhbNGbQXHlK</span></span><br><span class="line"><span class="string">kzJiKwTIFrWNrzqcctggzxqmlkTLkVaWHMXaLkEooqytahsCjbKhOpyQXzMxLCiWhZKkEtrZOPqQhyNx</span></span><br><span class="line"><span class="string">cYbpKJdCgmDcXjFwCLOhOGkxfLueOSiNgdUsVKfSEZWAgMNdovAcojlflnLALtjrQsjVyqQkRxQmXKTW</span></span><br><span class="line"><span class="string">sVOstMHtXzITGITijNnjbKZmsTPqhItXprvHHhzLTlcAaiTfKbPSeNVyFizDgoLDknFRwiBqySTbduNu</span></span><br><span class="line"><span class="string">rrCJnsYZrpjHpeYKbcxrMlVGSTjiXscGOgEglFBylficsdTsavLHVkgZnheiWWgrAlEukEvEwgDahhiq</span></span><br><span class="line"><span class="string">dNnBkEKCrfDOBDaoFsFNzmVUPUDGGONcdzlEoEsWhiwaRSwfeRKrlAxqrNpQIAfKuXZROuNcurIMvxrh</span></span><br><span class="line"><span class="string">mFowHLDOaqNqZPvKdkuWSKEMVxNDFlbelNJBPwmgMkROMfNdBrmLBIohvtKPMWtMOfeAgHjvtzPseJsM</span></span><br><span class="line"><span class="string">cObmQyceOPtyzymbLQzzIrrqvzJiHjIanBYnlLrBqIRbdOWmXuGzSTHxGXDYQsmUZnSdxVHiCjgDBgCE</span></span><br><span class="line"><span class="string">HnTolheHbDxtWrOhrvmleIsDISFBSQPBPcBRryfhrinomFPZgpsHDeSuauvOfJHBHZIBklFYXgDpfhRD</span></span><br><span class="line"><span class="string">NceoGRHFjNfXLsKwbPiNYVmSiHhpJTklzrfvFKvgYKKIgmzCZlrGbRsaLvrixcCrTONHXdahQlxlmgfZ</span></span><br><span class="line"><span class="string">VDFKLdLhdFfBZhDkDbVEWUMmMenSuCxHMPxaqRuyZErmRWpwNTmJRMedlVmVNDwuxlJOJWERGrdDRluI</span></span><br><span class="line"><span class="string">nRGhWyZTOYAfjOcKowuUMBBJVYdQEDTJtKNrixBeVRFDZbuMsdXXMgzevVdORZHPStGdmmnjWAdoLZpv</span></span><br><span class="line"><span class="string">xHuyEhrkeZAjtaCOrEnlpcAWTKrSVcCAmewKEiPSgDGVgkoKyTJCoPcxzCIehMAtOloHKgWoRRgdtaBB</span></span><br><span class="line"><span class="string">aUufWeBKffvpblljFrKtXuYnCDOPxZdWtpvxbsJhdHezcZSklrMOrBwuLWlrkCbRpkanoKvjfPEBwGkc</span></span><br><span class="line"><span class="string">AWZhELmWSbuKxkaZugdKqPCJerARefKsNNEEdnfXNdbPsjxaXXJWexQdnpWijjIelTJknKBnFkkjMYsk</span></span><br><span class="line"><span class="string">TxMqZWtNOQrYcFdIXyreIoBqSVnUehiUbvDLPFJSWdzyJdjHHwhsPHJUOmLpGmrFWQnNPMSTHSMlmzjn</span></span><br><span class="line"><span class="string">EHtolDspTvixNgIiPeboMfjkeNJBqNDkfxRYvHqlCvVnWQivUjONelWVTmjjzPreCzouYzTERCWvzHXt</span></span><br><span class="line"><span class="string">IkbkjmLMFLEpTNhdCStSkZhCKUEctGdlmJAGnFwcreUVSejyuLJqLPZuTcAFiKegcoIernlFnFkVLQZd</span></span><br><span class="line"><span class="string">pxrpeYXPQCDhzOmSyPmCeaoIHcNjJGGmeEoatsDdBqXelOvGumNFhQlYkUlILuNBcfXgxJcBJDNeyIVZ</span></span><br><span class="line"><span class="string">ZtQhbUthfjxxZbzRdeQkryZJCdJiPnOecOtBkNZOwzmgbLyihjzZZkqdsGshytVLEXQjHraVHaEpOMdJ</span></span><br><span class="line"><span class="string">FkuAZcnoukIDuykWrJvdEeXdUDWOIuYkFywAqiJuaLTDKAZZpFuEsdAEaGFYLttDZixmWOWowTgsCJKN</span></span><br><span class="line"><span class="string">CyYGkENeYxrwgFlqXWgOOBqUxsTQULVGQRjMHXhAMgzrwMYtqTFklODrpjCIQwkOUmrBLWgpZwmBxQYu</span></span><br><span class="line"><span class="string">gXAENoraNHzNXWstRvYVveZanZRhIeMswqabSvRCepBdPygrVYLkxjFbMqDEqYBccIYRiDGEJswYpVQg</span></span><br><span class="line"><span class="string">WgdnTwFTwptxtZQZILDwEWYHLtDpVnVsGxuvhctpxFmoZZAqhrHrhFKdxfPkBAvJKQqkurBgdYrVxqDx</span></span><br><span class="line"><span class="string">BBoQVkKnYYjIYCgHZxhAIGhIsuCmruEQtcVWoHiVDhwWkFjOUZpnwARiEtLcZtfdDoxGjjGHGgcmFnYH</span></span><br><span class="line"><span class="string">hlNCoKsvMIFhpjqnwgeCxjtBjLodYThifoKnwJbRaWbbDHoMbbSHmBkqMEDmmNhDVaHcqLxJdxhDxUWz</span></span><br><span class="line"><span class="string">flimSFSAOlLTckPCJWDkIxNGSQNXlHkFoeopmaTXLqkAlsyOUiJWyAjihbQhDMxEbXSOzpeorMFOLGis</span></span><br><span class="line"><span class="string">TWdttIjEFvcfTHVnjHfrDSAaBRyhflKahVYKQEVFZtWQSGzXhalPxGwKWpSrCiXdkspocMJiAigcOXiy</span></span><br><span class="line"><span class="string">EFZYRLALfWODYRsRjmQUNjqJBLNAYzwqGyApLuXzvjaOhTIALXgkzRqcTJmtueFCuNqSiMdtOoJqgmZT</span></span><br><span class="line"><span class="string">keMafLhquyuZIgdRuspLtERMFpoHIllbmlzTPOKHiVCpthOCXnssYHEzHcmdrFHSqCBqSbOkQuxovtNi</span></span><br><span class="line"><span class="string">ljfUQaPwRNlmnLZlTzZhWavCrPFbYeMLGUYukhXzWJPBqLytnKYxfqHuFYpBtjgbeubgJpCbqZVkNxiL</span></span><br><span class="line"><span class="string">AgybmRgELdIEpILHRxbeKHHDRAafaRpFfWmYeXreLXtgXOiJjytHhHWlUfRnPmUEMazlgjYvucviIbsW</span></span><br><span class="line"><span class="string">iNmYOoBeoAaXRKoyzcIxeRbGSTAqEQTsclYQqMzxrKgDLGICIFUMRVNNuPAEuVtbZfSJfxQwbCZlyztd</span></span><br><span class="line"><span class="string">AtdSkmXzYEvUyPiCXXttZNiqtyNJrcpVaoUPrpXAYQhPQjiPbUluyVmIgdUtRhDqhptyhchqeBdpnbYU</span></span><br><span class="line"><span class="string">qZOMcBYuvZwtKlQXyBANBOYRqOyFdoXaYYxmQxYJsvhTTpgSJeWtrUsNvSbiOUINLMZFZLyHLlXPsVKN</span></span><br><span class="line"><span class="string">NDbxPucgDmYprCzjUuqunKEGylyhBHFuXPgawpMQLswFQTRCKQsBRPuFWwEszAghkKcYtVUGbbzhdybj</span></span><br><span class="line"><span class="string">jeKEgkJfoBgyFXueTgQgzZlEhdfCkFrKpDlmnwEMbpflDZFARHhapcEljtBsUAsDXcdikNGYdsvcZLYb</span></span><br><span class="line"><span class="string">ovSJQVKOrbdhRQwSrzXAZOOvsbHAtvrsxPPfGxJnOlqVLYGAAsvcASUkCcZevLNzvqJYVDzqiVKqHNqY</span></span><br><span class="line"><span class="string">nldPsiliVeyfEWZxVqBhdqWDjEUQKnNzuhRsLxkNVAxDieBfFHyjSSgFvGbvIOkzJEUqTnQyibmzJAGs</span></span><br><span class="line"><span class="string">nmUKGXqTiRdzxsZhpuRkhykVusNTrPbtRdRWzbAlaipsJfjHGUyexGMuXcyLdySSxvmngSYUNiZxdrPk</span></span><br><span class="line"><span class="string">xmDgeXeFiZmDHmtxGHMUrjttdtaaPqjvTCOPbIJWHJBvbdfEZruECEJRHuqKkaecyIIcdwBIbSBXdxLF</span></span><br><span class="line"><span class="string">ofrlqhoBHWYiumhSOdrxAAdSeNBkQyOJERfDTmIDpgXlvepjkNUWEssgsTuvDvBtDowNkwiGXpxpZSrH</span></span><br><span class="line"><span class="string">ZmUtANTNukfCEfnREMkxncPqAizRnFVgkyfZefFrZewmDcAYsFUHcmNHXDlNMdzpHSewbvDyIncJzdrJ</span></span><br><span class="line"><span class="string">xbXLWkLNUQdUZJjlZdjwaKUIaSxHrImLUJYFczFuzeGgbPlaLSTREQwdZltNbMAulDyDBVQdAzMSNyfH</span></span><br><span class="line"><span class="string">gclyPfhaUJGqnTzxGJcBTxOyClorHTNPCkVJgaIaHAbvyGmcgtujOdjmmmXLIBISNnSuGbPGeXVoJxCY</span></span><br><span class="line"><span class="string">AEWxCFtPHvFknjsoQmBAMwkkfDTKxfhKdJbOxRaGdpLYqpUGkRTCfbTuHITfsUKrWWacqutQgBkRzOFb</span></span><br><span class="line"><span class="string">XflfbaZlOhFWOFFyaeBbNkSTpqKnVgbHmCVHBBeGLOMKAtkPlAtjfcRBfbyQLvHbGBdqwlMBOsDcEwOP</span></span><br><span class="line"><span class="string">CPJabSwczueGkDajhOWsnvFxKxFKlSKgLAzpduKIjNukqPfEqPNtQwGoEsubTnvRlZCWntYdkVLkWijC</span></span><br><span class="line"><span class="string">rRdVYbkMNwpfuXKKekNdwzNyCSpimspHaPoqVjcESkHHZuQuSwwIlUhAtHYDKMABaVFAFoVxYSIkKXLX</span></span><br><span class="line"><span class="string">MmntPRuOrTvNBWOBXkkOVkIRxIbayiSRUZhIZtuhWbsonBSQkRsUiemSQCDfuTHPzlCJIuGqBqxNuXWQ</span></span><br><span class="line"><span class="string">hwYpwOPxTgqKoTwirtUUhIojILVjdANJgCDuGynhKzjbWUkZbtAIwedrwyFdnKFZaMLhvipxvHrHtGoj</span></span><br><span class="line"><span class="string">TfLUoqtphXtIUdaUvjygVkJhPpIErGfRRSzPcfouqUjwbQrLbxtSbzxuIYHTBgfTidekGvkTmZhOvKoO</span></span><br><span class="line"><span class="string">PtztXvkQbZFWjacZxJihpegxlfcJrxFUwdXOFRVKsZJwvmUZQiackwRbaDohkYfEEWYOWuZNFCShsbfq</span></span><br><span class="line"><span class="string">TYGRrzBaLlgsXpzbGHbQtxUqjKQZMhBIpvZCYWLdQkziEvOCANkcMNmwSWztWFiihhMqDXZLZASGQTHI</span></span><br><span class="line"><span class="string">BEhbGwtWQxhhXRqBtWiuFnjCFknAiJwYbtCjNxeuoXfsoXeXjAnrXWDEbvaBeLoKGCjpUYbMlNaDuFTK</span></span><br><span class="line"><span class="string">afCRrAqAEGTddsmKJgqdcquDHKtxFdORzwtJOVNqyDWxHpnnVxtfHuMBweCAtwSgNuToBRRGMUpMcvGl</span></span><br><span class="line"><span class="string">KkvRnQkzbpRBlrqhuyeYavLQltsAPaDTghPgDWzMRaXtLJBNHSkycecxyFnDopmtPGrOZabZXhRRYcna</span></span><br><span class="line"><span class="string">TDxKjNkjbHoWFmkvBzTAQTfzSQINLPraUlaAyltPebRctgIuDnBmtpDuMmKVaVtIkQgRKhHpMXttSWXu</span></span><br><span class="line"><span class="string">KkYAYISniXSAJcBiAjtRwrveFIVLUlxNdlYJzTVgfUdVAeipZdrOvFrsEmumeHcJReiBLHRvUKzZFUjd</span></span><br><span class="line"><span class="string">frTpYkMtWsuvMBCOIrmcQhbaMTsowegfVlShmfGWrdbryJYghmUkFgwKDkPKJNKLmGfBHWWyMzWijCBF</span></span><br><span class="line"><span class="string">RXUzkpgMUAVhMaoFcNNviyczaJDtMLlCwGGAhoFMtWrCzKQXBnIDGMavgTKMuXfiDxZSNsTHvGkjCpEM</span></span><br><span class="line"><span class="string">DJqDLHQEelpRESsotretqQlaCFcKfbLucYAcnvZOfZsnQEbEEUicuZTqilOWAkxDXsgeIFhmDNAFjMTZ</span></span><br><span class="line"><span class="string">eOCCCrCzIjBamCgcNRCPsqPiYSOteeXlBmZenXwLRCCDXXcnRVwtoUZIoUopvheMXrnbhCXIdeeTnKjV</span></span><br><span class="line"><span class="string">kxmnQLfHEXbstWHKgLmVjKJnfEKDNemnyEHuVDuIxZNSklduFYmpNasPEqvkjMDUbWvbDhEgHzEOnAHb</span></span><br><span class="line"><span class="string">gJuRfSNaIbioQSkwKuCnicnXpTPcRBLSVtbsWbblkJENhqXLncMouXaAgnKqProBtZIdWgcmuAKucgdf</span></span><br><span class="line"><span class="string">yzRGifXBbebycfzsNodbddTOZoECnZERNAXHbVdciACajXLIkmuSyMhNgyMAVMgBDRNFTZhZVsrBwJmA</span></span><br><span class="line"><span class="string">iFXPoUhRkIAnJtZDHsfoOmZRKnZQnEUwviymPmIwzzVsOPaggPjPBtncSxEPssBiAYJFhjMuMqpiqxnZ</span></span><br><span class="line"><span class="string">wiGgYFVmUiNnnFgrhqedeBetrPClIqBXaiLaVnGfFfQpsTzAtoIvnPRbdnwJYHqwxuIOjldRgbBOkeel</span></span><br><span class="line"><span class="string">XuHhbzSuqSgzcKmmDozBfBcvtOobVrYtIQjeKtfrsDJVTAFhZwzFiGeFUYzwapkZpIhulaMimVJWBdZE</span></span><br><span class="line"><span class="string">LmloQfTyZbKmJEABkHBQfSDAFRMvzIujzLFjaeJKJdfzunwOwflPEmGmtHOYWFJOzZntOuYqcLSytCFE</span></span><br><span class="line"><span class="string">AZTqXQaEXKNlambxgbwAQxmxfonKYsNGVwosbroNCcHkeGpGmhkinSYfwVukZDqZtYjFDQeoTQlasGSH</span></span><br><span class="line"><span class="string">SHdGaolAvrNnFdtjmvtgummmhnGqcCBMWzqBJLiSGlYOVxGqzRJiHHueumcrtMRQSsyOVnDTNLCJQaqI</span></span><br><span class="line"><span class="string">PGBJVMnJRZndsBIhZUuIUeuCPUlYlZwmvEAhkynKYpCzUsrlKHvbngAiYbtUTSVHTyoVgkKPdsATKIEK</span></span><br><span class="line"><span class="string">SkbCxuIWFDgbqpMUviAImxdxSXUBHuaSwSSWOPzedKwyJrkUPUZusKhURriWIzLvNpupMVhJGjFTTfew</span></span><br><span class="line"><span class="string">TMxYYHWbzyuZAAvLiUymbImOgGmraJyMkRAKgsSFPteZARkoKssVZrURkLbFuOjSRHncnBxAACVWNTdH</span></span><br><span class="line"><span class="string">DYNEIYoHmaQQYlMGefSRSFRbIOsMuycsecjbpcZWycsclTKaNfXKlxTubYtdbEitdrngNDSCYoPiNRsa</span></span><br><span class="line"><span class="string">yYsXUYWpXENADQDnyZqqaySICWcoKdcNKuLweQSGnVHidhbeQXzpuHmAWgHQIFbyUPfuvifRFPoSRrFs</span></span><br><span class="line"><span class="string">FrDIqzKXJkchDRJibybpANPyoXWDTOTyYbUhMEEMzjxqhzeBIANgtKLBvgaMXsqHEPeIOgAnzIKbpAZE</span></span><br><span class="line"><span class="string">NCKBcZVzlWFtvgQJVuuGTQNiEzpkdnuMhJJDpkCHaQalnjMGPayxLIcKvFfZtHlMsXTGyBYzVmyGzROR</span></span><br><span class="line"><span class="string">HAwUDDTYEUcRbrhFpuPNpXsWrxJfKVWFVZDllEXQURBRmPkQfBJrqfgFQfeOhdQYQJZGXskbCkoQoSny</span></span><br><span class="line"><span class="string">uWdYxPvBgGqQluzzVklAclUnHamMdQojTKWPIvCTphXfJoDCkoXzPyjpeOKAodpKBTCbkPRfXzBOcznX</span></span><br><span class="line"><span class="string">RzTjhIJpcjKqgZmpgTYdCJAwaXaClNvyLJUxrwpxmfxShhzgRZfUbIBjbjmxhcwkewOmruvbnruxqWDa</span></span><br><span class="line"><span class="string">sixtEBTXiTrJlFugJJinVkkbhLmqsFopbYvgaGJegniJJOgknCaJuCFNXIwbFotMMJUVKMfQoqwKQbEt</span></span><br><span class="line"><span class="string">rxTDvddaNYhKaOHnbfzBZrMfPabRiEgkkzFDSdIsjwJtucgGrFXmNQPyxDdLoXwEoGzjOcJqJqeWYeba</span></span><br><span class="line"><span class="string">hZEBQZbQsGfYVsnSeMDZmeiYgmkllkQfQXjcPdYiVxcGVYfKIwWFDVHiwMFBnoZvnbIcYzRoervPZnju</span></span><br><span class="line"><span class="string">lBhqnjWTWmZieBzFqNFKwvvLQoFIQQlyJrtzQjhXaPqjtSoOooOSLbwGcdIqEoRcFofGqpWuBHimHjMs</span></span><br><span class="line"><span class="string">cgkcPJwZESJDiEWKKCvTyfgfNDwzVxZDuexFakhSaFgarHAuOtUqkKarAxjujOmmcHWfxkxoNJarLSoU</span></span><br><span class="line"><span class="string">VfCSDjtqsOXnexZKpEcwPvJZTBzgzcRZIjyrDnuCcXCFHbQNVUuKTCSUstxWfXBgKkDnIPowwPosDqIW</span></span><br><span class="line"><span class="string">UflGbydDSoRVYyNtOwKpaqDVPHRbLvCWcfUbFjYJWsHDkORzNIVkxzyQhJdOcwhUJGbpncoFReZNIlXO</span></span><br><span class="line"><span class="string">HQGadzRlBtRdzNPwEcMcVHpEmosfJeMlcmUALSilogxornUjWPBjVYxRUYteNsDkIUEUbtzhDoTPdpna</span></span><br><span class="line"><span class="string">okZSAjyeUwNKoFrcxJfrXOLzEDazaKyxvUIFjmiYsHePkZPayXnyPvMbDKEsLrMOJJeuuELSRdXrVyHp</span></span><br><span class="line"><span class="string">SsYjzTfACZPVMAYhWLwDTlSNUfzmzZLPNFmNoVHmUPKwmdgMHKvbjcufGLOFwQTzZyIPNZwBljvYwFjL</span></span><br><span class="line"><span class="string">wcoEXGbqiTFDXcjKsRgicztajZzrSeNvZjoydUMsNGwnTwzPCBEkSHGSCJXKLhPplmIOTzOvjQsGiFBH</span></span><br><span class="line"><span class="string">sdBaoGkkdLOaObgPAyqMpUvoGfFlvKnArVWuwUJekySUCGWLIWWOlYJWwxTkCpnWBgBcnHeMaSRBFSOK</span></span><br><span class="line"><span class="string">nVhNrwZNxjCjPZNjVyLyThRjnvlKldpgECgTRjdTiMqXTOVnqMEDfmIIaQxpbytpVzXhRWnwloOzYDXi</span></span><br><span class="line"><span class="string">SsFDvXPpnfulMXaZjwTgnGxrnFGCCMfcPYKeiLFoOYreCjNTmfEdQCYdoabjvoQufwUUftsdVdYtMlJB</span></span><br><span class="line"><span class="string">qwUJyiADXjiHDQvndwoGCOECRWlaXUBHNHepxIjGtJRejrqDAFgjPsArSkIhvtNBUMCKmAlQywQPEuuC</span></span><br><span class="line"><span class="string">hCdRWLWxwUwtyhphbErjUZnJvOsnmIsxEiMDDIzGxKEARRewxtETJYlDJektjfQwpbJgtvanXrMhpmvd</span></span><br><span class="line"><span class="string">QIntdsMYGhzoTuJQfDXDAdTfsheoDwLUISKOgMOEuBEsqWOHXNaaToFQQVLwvigmQhEWEffdeyVKrCbk</span></span><br><span class="line"><span class="string">DYQUQgWwSGoGuGmDjYEeBQahhipyQXJbqJkUUNsbwobfzfPUjjuSGKIhCZanHnzbtgnSqKpfJBlStqOk</span></span><br><span class="line"><span class="string">JPBlhGfOTvDrCgQvTwLwEkogLOjpBjdwEwleYCNTXGUjJLATDkcXUopjWEGwAomFwUEzkXtYKwYukuuS</span></span><br><span class="line"><span class="string">hlhqhihmVzPlqyPNjFWRedXXQVkXOtNSbwAGdFQLDFZTxibWASOhWRbxWCizLDdzHpgUwtrhcDIeESYX</span></span><br><span class="line"><span class="string">wNAfRPxbofPXpBPANLUXMOYGoCZHefDAiHUXiMPaqpMdYpRGHKdeednbfKHGQWGFkZbDMgeAHJWRKohF</span></span><br><span class="line"><span class="string">iwDVSwFFmlVCQuZNTHXgWZSxtKKLisWwwxafCkkLRSfOTkhbKMEFDDXToWawltijrQCkaVVqMzJQrICX</span></span><br><span class="line"><span class="string">DYbGkUJdrcCWZTIGnHUGKBJOqAxvaZUremrQZcxjjrGxBAGUhEFgmvMTuyflbxmKkFbPZeIlyJokhOuw</span></span><br><span class="line"><span class="string">lilNcuroVrgXztBJAnSiuNMINVNzCgyOnPQJbYTfRVGRTWIgjMEBaQaqpQzIdWYxdXkMHyRyGaRMaCsy</span></span><br><span class="line"><span class="string">MtTOQxEcUeJEHKYBvttazNoUOptWPoFNrWCYLhycdyfVFjWBhOGdttXtNNvgveLzmYETGLYsTuSRNCEa</span></span><br><span class="line"><span class="string">pvPRpGeRryZQqBuKXawVCIItNiLkktYPKAHTAuoOppIaYgsknygaekIOoFjBdetJebiwDGnCbdYIsccf</span></span><br><span class="line"><span class="string">XBgFHEdGngqOXNADuTZiAeYINSKMTtukaAiZxzJyMJKpINovrsjkhFQZRlzEojHntqpGsJBwpSaPhXSl</span></span><br><span class="line"><span class="string">hgJHLiUjrypyXVozSpPXxYglZIfNFEWmKueGabBdrtNOoEgxtuaEtdipNsANDcIqZjzcIZUwhlruHrJO</span></span><br><span class="line"><span class="string">wyIPNuPiAiRBVZZNzyXGPewgyyxbmIclvDkFRjSHmdyTjimyDAxdSxymSZaCsZujocnerXugCXOmaHzg</span></span><br><span class="line"><span class="string">SmmxZEaRGedelRxhjvgjLLpVAHHcmQysLHuqpzmLoRxtlDhqMTQkHkibjFOamfGQzpXsgAlLmBOMFyIx</span></span><br><span class="line"><span class="string">onXjCNYEGleGscSFhGHTRSDCsxaJSziHHtTYjWxyNAUCICdMhmqUEHuwSlMryhNBfUUspCBRsBJhJrPS</span></span><br><span class="line"><span class="string">albZiamExIwCYOEvnapHTGGexXscpxMJqOnxzRVLvlfsSpWpBFxBddEpMqxYetzJYQlXroLtjWKEoudF</span></span><br><span class="line"><span class="string">IUbokJsHaJdjfLUettuLSULGMEiHOIPMVCmpAwwAaKyppwjQVoDtOIRnvcEQAThesLvbZnxLjWnXWlKj</span></span><br><span class="line"><span class="string">EAxmkQHwKtMbQqqJstwGVcQWmwhqGLEqRQqhHnrcdYagYEOuhfKddsDpLfylTwcqjgiEFccZIkgXfaQN</span></span><br><span class="line"><span class="string">xszANNQUSNnPbooeuEPJMqFqvFUCuDqyJlCBOGJthIelesaQBAoUbVZrSxKAOjeQNwUuhtJtUpYIXAsd</span></span><br><span class="line"><span class="string">rdnzDBJPidGjpGKIPNutRXUdJTmzXkZrOgCFmNnxZreXUYRDLQjYQmIMenNFNFbpCGDodCLqtyOzOTLi</span></span><br><span class="line"><span class="string">qKROBOVNzgVnHJvSiXQjDNPsDQvIXzvZlFiRMhcAETuxYYbQTcPHZvJAMGwuqAzLLeSdJPmLhhWoujjg</span></span><br><span class="line"><span class="string">AXNelLZoiXBkvxeBJFOGlSRwewAWAWZjctoEtsaFawCUBroNhnhBviwxpyRrNYQYImYAqaRzCvblUqeb</span></span><br><span class="line"><span class="string">ieujEvpQfpUCAbWvzaTkXnTPzqloFdhwkWAzyjwqTzfLmXtEKnlciwscUoZsVKhFiiANEnsgyUMOLnoe</span></span><br><span class="line"><span class="string">UkABeCiYZnkkCoACCcEfImhATnPqXftWyhSEcNmYJQSoWJmehZWANTfRqwgZcZStEBHgwlBKKuYlmTlV</span></span><br><span class="line"><span class="string">BLMhVIPBkFyvuQujgOBWAiSdUlxtrlZvsPJcSrFIJvwMEpypIfYlVDTguMsTTxujToYDHwYfSvVzodPe</span></span><br><span class="line"><span class="string">DDRBeXSmMNrHVQWysdqwpKAIYyiYlVjjWjoAPQABdicNUnceTuPwaqNkGMpgRBMMDFAgZAGiLQZxKpKh</span></span><br><span class="line"><span class="string">xzUlHLtzvAeSgRPsFrMKAfHyuMcCcXEHDxVQPfuCXdWcDyJDWCKVSbSPxSVBjnJytjdExoAMqpjJxxPn</span></span><br><span class="line"><span class="string">ZtBMNeMvzygyIcfgFbThHOSLQSJsXUFgcvbtObeLHhFZCzlVrFQeMpXnTqEuDOwcZEIOIJRfpbWSZEYd</span></span><br><span class="line"><span class="string">bCrpHPfZHlByHpjPCIYnXKCjaBHXvtTHROfDhszRoTHRyyBQYXrZVnHQHmvrNKxtbamSKyhsolOPYkGE</span></span><br><span class="line"><span class="string">yshRqNrguVDJrXvpUqirnzpwsmECVXMXrbbayVFRxAdCeEUUTDWKGvMBmWSGlhztpbjsxGMajqAleHcD</span></span><br><span class="line"><span class="string">FZVGDdNwTshssDSPBCUeKMQgvTPPFgDZsOZyuobmqPijkbWMURWHWtciqMPbsJjyRVYOlBgYndyRxZYa</span></span><br><span class="line"><span class="string">dBPxlcgwxnwHhctIClTeOMYQkHTSWCFrrKdqLasQnzrRyROVbgOlrThGjNLKxyjDfeFCMHvgQDfwXiUs</span></span><br><span class="line"><span class="string">AoZWOEAqZwCJNQgpiECrXaGzRjzfVZKJqsdSyPyNRxGdEyIlZrgEbpgLUYxoDNkCYQGQOEotuQYLtlVE</span></span><br><span class="line"><span class="string">ChyfPiAhzRUdSJFBNgdACBnJzvjsWDhjghlMvxmpXPymIXKuNhfBtByNmGsgTvocHrRTJsjFVXLhCLsf</span></span><br><span class="line"><span class="string">sDdVmJXvhIMteIxIqubBYSruNoNwyDYhNRcenrilQRgRvptcDiTPjrxiyEdxvVQldMCEVGpfyTHQUSeW</span></span><br><span class="line"><span class="string">PtemvNdOEIjhsLZBZVVfZcYTtyMDDeahXgIsyPxjcPMUekEnXvpHDxLnPJZOMvzFmKIUmahPtucuQpIa</span></span><br><span class="line"><span class="string">SakKTFWctFaOoCJbSIoKsFNSIeQiRcRMMCxGWOOMKKaoRawrOwDTUcKzKVuVGxgJRiGBAIoJrSuyXQoy</span></span><br><span class="line"><span class="string">xCbMuLpsNNeIqSgVPyDxCtMguPSzQNfpJXncsRjngZwWpZTQwGMcmrfTkauavVFJbobaFPTkPkftLdHy</span></span><br><span class="line"><span class="string">UMFsuFtXdCcMoDVLEjAcJPIjbweswYJNFtpUlecWDpczEiwEAjLLonHDleCKebfzcQBHBezSrxnOhFNZ</span></span><br><span class="line"><span class="string">ASCpJkjjDNuCyZahuiGTDYhpbXcnDyPmFhuCMkcTrSFOzfQYqJsDYmfOfjeWgiEhqKShLsYMztFtsWhz</span></span><br><span class="line"><span class="string">CjIirPgTBFUYOVpgUPrGHNUAvvOzoIRMxLWutORlHWlRFyYMNDpLjpSEwCLktOntWsyrhIFMRQCEgauZ</span></span><br><span class="line"><span class="string">GQjTQWCstxrRnymamWiutHrlAILglqVUMFRYGuIbtpKAcIccRPJzhNjPvrcruRFpjQNLCQlXCszgeiLN</span></span><br><span class="line"><span class="string">TbzYWICzhSWuRzPpmpXMnrepRirJPZMZLwkTDFKRhIonfzulfOYNzHjNoSGFCJvirerCMGGMWLcvcKHS</span></span><br><span class="line"><span class="string">xlqnADgAmrGXDzkvEiodNAgavQrIUwKVbxLgIdrHWEtKCvOjHoJIYcpLdDpYxIwRTNSmvGZVaWwYHyEo</span></span><br><span class="line"><span class="string">zPyqJoKSKJcxsuDhrWaDMZAQloNwImkLpzKxWkrnRVWeSYuoKgwlVydpjCgEeIsofUgOfAfbHWgqgoeo</span></span><br><span class="line"><span class="string">rVPsgCsbfQOUwnrJpqbPGkZaWsbkUmfpxkImqUzeZuHLrzxxizHdlOgxjgFFJffJnMFkNxQxAALPLIVK</span></span><br><span class="line"><span class="string">QkuJOZasVLcAFxGjePkdZOvZLhlpzbbRvYtKjCKALSsJNsRcLQsQlqXnFhbqgxoUKXPgVYDHdYpmxaJK</span></span><br><span class="line"><span class="string">ZTbAknczvdjPXtnWRzDhOXuPempPCjVZyqVmBVCsjzJHJrRABAiFHHYOCEgKtKJNLGjsowxWGqqEzAAw</span></span><br><span class="line"><span class="string">vWDKIQmKdysOOiNTgiTBuyfXbMvEPCtccgnMdYCGadpKKAQIMuzKFVTRepenYYNvdWFgRlFmYvMrzUvm</span></span><br><span class="line"><span class="string">oOiwZcZzVFJeyNihVueuwMVTKPJDCrDPMbLzyqYwaYYCfTEriUnVMHPxLznaFgXpXqhAhoCtwgJhZfwy</span></span><br><span class="line"><span class="string">cfdLRAJYbABWKjwmxSjlyUwCJSOrdXiuIhPRDxTVdoXzHKBwgnqmGHCiMiyAFODlHgiBKOoQpbMBbxUq</span></span><br><span class="line"><span class="string">xVowPuvRVtLbuFfrcvIUvjiCdFXbnOKMAiiOvJYmLmbfkmZCtrbjEdhzwuTUbQcINZQHiTrrpWBRVnRH</span></span><br><span class="line"><span class="string">GnygjjbCsHXNwBvRSSajMMpnBwYbUeQADjvCJAsACFlCTLIQlAIVMTqHFkswqbDDHtpgcWaXSSglUYKE</span></span><br><span class="line"><span class="string">lqNsYCyaQXBzrFUbkAUAWAKrDgDtAlGMBqWQhpEwquZqWZJpslUfMllCwWptqINjrOBTLuPzwvXNbLCx</span></span><br><span class="line"><span class="string">oFRritKRpJgBOaGPZdkUzvYnvYmAlEsVmKRXqyQUOdCBqLYyboOYeAQNLnkuiDXCiNiksSSRpDMVQQgs</span></span><br><span class="line"><span class="string">TmYThnppfKSmkpjjceGLaMOvYgsvNkGENKgGtUSzVPlLMeephDKrWGNpAxBqRiCnQIuKwDZurIRsznUp</span></span><br><span class="line"><span class="string">xhstMWpHdZzqeEnttlAHiWbhbIJpwKBAGsFWthBiwBDKTFzIUamELZJFLbmqOmwBIYBJIofAUyxTLUEm</span></span><br><span class="line"><span class="string">LcOXzjIHFcfUfEWccbWzhVuIZMdTVsOaNsLTpHjrvFaYTnJUrqaYnUmbobfOXXtkjKjFUEhVNlPWeaIY</span></span><br><span class="line"><span class="string">uABNuEDKFWiUaqQiBHGsgEmDDLMhkkHZzFWlobXIyUlDzGcwDnEOwwWxgFpebsslmKItazIYctPROSJp</span></span><br><span class="line"><span class="string">ImDHusQIkoFQSmuqwdcPNERvflfHtkGTrtbQXqZUsazoxmbVTPIuuxKvfALAaGnIuIZwczCcoIRMncBs</span></span><br><span class="line"><span class="string">timFGHPJPaHMPTLjsBjIwbbzKyghaDTUStzJceaYAneywwpvdiUJifPHtXmAwZPChWsDmwonzeeQCEiB</span></span><br><span class="line"><span class="string">xWsJLAtrdVEOBxEaYiSabHdUwlXlDOAKzZUwozJoBGvnFttDkXdYdjQSzzhTIPfYpWVFdiFIqSbyPZIi</span></span><br><span class="line"><span class="string">VoXunBPbAJVMWluPcIfHmjPeHaTyClCvTOucEYEZXbVDiZMsfeuruDGMmQEsHutzvzVmWvCoPRguBiHh</span></span><br><span class="line"><span class="string">taTeaguPmNuAxzYJLEcdoApfIFBaLUqettjTJNYhZYlJZRRoKXEvFnoUHdPjDuXuTAubGODkHAokpItw</span></span><br><span class="line"><span class="string">SlEwhjrUSlfMawWlTMciWAzVcgPcqCHIaogokYAWGsvWZzBfJqzxIkCNvHDvBkOMCyeYXzVVuRJLQIOy</span></span><br><span class="line"><span class="string">BMoVPgFLOagDxyPfWxTtZQNCLOrVVclPzMNYruNUyMOBKxBvinxuGMAAfndhPsROtkOJAAJQSxpmTzXm</span></span><br><span class="line"><span class="string">CmEwZOhlItvETUneqvdKLghLyREjuJWRFjVVuNMiPuvvmRaEUmjCXDVuMRAvBuHUYGKPXthWISIbueRp</span></span><br><span class="line"><span class="string">uvxpmqclmrXpAGFrxhJGxQwlrbkHEmcEUooCoPqGzbrCfIWmtUKmzzXvcqbhxKcAwXCNjbJDWDndKiLK</span></span><br><span class="line"><span class="string">HwaFKyhXJQgHjIaTfIJrkhUpTHJZebRertDigQtDKxGerMRgHWFTrqqZlcBjAUfTZdFlZCAEZnhzgTIy</span></span><br><span class="line"><span class="string">gJSsWJjFcCVoFonAfKPTOhTxjxTRtzOSnZaIAgScEwBCDvWFDVGpBOpijqdwvugoYsyuIOZJTcySDrzy</span></span><br><span class="line"><span class="string">wBxediHOIYgasrUIDsNZcParqTGfTaBZHoSssXGtiCVvLReyoiitzMpsouqUeMHGWwDMgBaQTRkxPwNP</span></span><br><span class="line"><span class="string">XsvyFVXfjgKuamMTsEsbeKDgAdVndyDleenPBcXWKGPcDsALDajkCEGufvbtyXUZnelqISbQnHphDoTH</span></span><br><span class="line"><span class="string">RMIxMKclpWSvQHkzRhdAehBVaKYaXRPMpGaeRxvTRVFfewirvIDoGvYTAvKSoMFCLUNVFVKrYMeYtBrS</span></span><br><span class="line"><span class="string">KgiBOjvliNOHLrmztypGhQjtpEQwzVfpVqsTUPNOCPzgqOuvLXJBQZHLmSwGTxEMgCAbogXombCiBDNX</span></span><br><span class="line"><span class="string">BvGtXjrGWbWHtNCoRuqIZPhBQXZiNUhbmzOiyByAoMSBvusppiPVibIqmLXwXEVfcEAyNeUxaEZThULu</span></span><br><span class="line"><span class="string">mkGmoLrpOEktwRluXvOmmfEWxZkxUNIqZKuzbaUmLKBYrXMmdOYLEzljzbSJnqRbSiAFyUNyyieKITkh</span></span><br><span class="line"><span class="string">mvkKyosXKCaTsXQIKczJmxuqIlKYldmUZyWTolQynlWngjDzFMlwhJFEmODeycbEfxgSRbIXySfwlhZZ</span></span><br><span class="line"><span class="string">BUBhKyGBHRzWGRXAzarcmSDORvaOMOqYlcVIMwlHGtrLMhFWioqeKfvsJdTXmfQzavzSzCRrVzLFMaBT</span></span><br><span class="line"><span class="string">DMOPFJcjzXcPvBkzacRmVKTQAvVobGRBypFHvoUdjvBhwWXVdDjvfJOocyIHbMqZGMaRaaFFnmtvTSkY</span></span><br><span class="line"><span class="string">nIHbmPAtuEszMDFURBYxcOJXKMvJbfSbhiaacxhxiZBnoHTcFeqXQfjTqpcMKFpvvzkpSxlDxSlhikFZ</span></span><br><span class="line"><span class="string">XSplcknpxiZfwUwGsrfpBUkevEiwndkKrVpWKufWpLTWXcyyXehOcDfnzgTAkhwOAcaiHqJWzsuAvMyD</span></span><br><span class="line"><span class="string">pDJgeCdAJMwatRfcpKQGTkwxHracsYOlZeXoGthHIRnDbYZhuGEQRKFRnqSEbWDCJObWSAoSwFzVZEnI</span></span><br><span class="line"><span class="string">rVBwXibUaTwnSTwRmIwkIgoGPRiOMLOTvnzEBBCfcugYZwGSsHRKCJoRsxxzRkKwnTRcRNfbMGssqmXV</span></span><br><span class="line"><span class="string">IKYzyWHIsCjdzxiHEtvHaufVgcoqVkqIQertevTUTIVMYlNXCGEUzQowqsFpciURKoUwqCRogxeghOWs</span></span><br><span class="line"><span class="string">cMnuAathgFvNIVqqXpmdJDJPhXQpZCyNbTYktMyTUtQEBeQBhEZzqHotmYREADhFodlcPmTMutBZyefW</span></span><br><span class="line"><span class="string">sBmsnUbVnHUGAyaDirMoowBwXnzrmfHJgfpAquFoHTuvQvIJcjqiqVdntXbgwpVywbsKxqUMNxYVxBmQ</span></span><br><span class="line"><span class="string">OAcxOAVPuJeOgABYEHhevhnUOgCUuTBAhJcUGsasbMInGCbHnHXWDdXijDRkUYFuOytTcMPtWklmTHTR</span></span><br><span class="line"><span class="string">XFTfcFfSSqFUFbQVCKEjUOLveXtsHrIfkphXyDkRELnaTfuaZUClLqbdpWAREJHJpycYRDjElqlVeNya</span></span><br><span class="line"><span class="string">kTCjDpvFrdnlXogrDZdQzAYaePDdfvHWdcaQGgrrHKBdMnMYbsikbkffVsITSUhEapmLGQYbHoiKGRcg</span></span><br><span class="line"><span class="string">GPLeEvmCOAkGIuDBdnYPlzuUmLOfetGXpbTbPjjWCZiOJxlDazSbEPVpnNLDsLiwlgleiCdPezQwnNWT</span></span><br><span class="line"><span class="string">ECLuRGpfJZlnZtcghLucmvlOZNwXaikbKGmoGZJIcsfNnmaHIcPXiEYDHjLKpVtNsqemAmaiTIzvLqlU</span></span><br><span class="line"><span class="string">mlcvraikZozZwBoExUkELoiaAbTAkqDhrARHQyAvWvYUjthfWjZqbQNTnkgmySsORxGcxouYcyCSkjmC</span></span><br><span class="line"><span class="string">fpTGOlFoXWLINurMZdQURRnZCiZqsEKeVVZdFMnaoUepdAdARtUuXTvkGzmpEVNZiYSWJAwkcSKgAWTD</span></span><br><span class="line"><span class="string">mUNVxVebIiavuOAxWUBkuUkXCYtRoZhVNwCZGlaANNpBvXgSDeLURUdQnQteKAXbGlOLGYYYCzCGjzua</span></span><br><span class="line"><span class="string">UmrdPYuRrUBvLFfwBTioTmpANdPCptqKwWXARMKrtmbggOBDgNkeHzNUCIXUIuOAavRbLTnzNNRgzLdK</span></span><br><span class="line"><span class="string">boTJooLJIdVFbbjWNngnzPznJglCLEWqulqzSuAyvqYdivDqxEtYPKTwVheFmDidEOnLqjPHBcjoOVvt</span></span><br><span class="line"><span class="string">MCDmQfwNxkOPuxiJqLQOPRAGJappmpikgmrvRAlKjFjTlaznQldBJmzSMDvCWghWOgfhfkHFZBNdbmMf</span></span><br><span class="line"><span class="string">MsaQHrtJQvZuGFCrPVBNSNZBFZRdpmQNZYZXpkGjXRAXhELlxDfGhiXwgAUujQbqUCiKaRIYruNDRDlL</span></span><br><span class="line"><span class="string">zInUkJBpySRZoqwQlqmoxADBjjtGjFPLTkcexYGwGYlANZQaXNgKkPXUUqlViVzxPxxtMQPqOxTcChCg</span></span><br><span class="line"><span class="string">dvKNliVwzRfMmSsBFeuePnbmVqvyfdOXnZpUopEqfCMnnXpfZnNYwNKiZFPUWWmNCMibsyQEhiodVjTz</span></span><br><span class="line"><span class="string">UxsicVsZNMXyvBLrdJxGGeCPEutNCzYBRamXwRlmVdqUTPnUoAWaVDshgTHZhvhVlLZsoqbyqOjJMPac</span></span><br><span class="line"><span class="string">hHqiCKhgFkDUhUDSwsrEwaBrKhXINTjYmHvsTyFdRHliydbfQtRFZcsSTfcSfqyIgQuXLZnrdAwylBmW</span></span><br><span class="line"><span class="string">BRbmVwdoNFcnoxMKHaYOhgihIsKitcrgEkfjIOKDPDOadFhMwVSKWeCfxxxfWjgNiGDaiYDtMhCgedOR</span></span><br><span class="line"><span class="string">nTYoeVrpGsyDIsuKhffqaEqoqfWukaQlcUShYicuZAdoYVGvRchUgcmNwxQGogDvKhyAkIuqHCIXQfXp</span></span><br><span class="line"><span class="string">CtkSSTXTugolUKfqSzugIOpyHhIlcTjDBTKPqcyaRhmgFdSBkYurnvnukNGVoxpZBFmwIEmehuaUcoeu</span></span><br><span class="line"><span class="string">btkjJqKcAAqxgrKcoRGuqHVUHqKgEaqRCIXlaTqaUewJBEWnTnTJIDYdLeGUMDfndHPYTAGQbhxreADo</span></span><br><span class="line"><span class="string">WZtdvbJVnNGRNvlAsqIPlpXSXEZGBdqVyNCCwylcXprVoGqnPXZioKnqbdrYlDhbsTVDJqRQKoPtQXzu</span></span><br><span class="line"><span class="string">RnrGgCfYfeRRxiihjItxHurPwtYJoObDzlEABeIRxQocvWrJtyWchmZXJdYvTgicUircdiMKYAkNbdKu</span></span><br><span class="line"><span class="string">gPpzXnTQIZxtIhvfBfjIHRaDXbYExxYBvrejpEaVHlinHlYRrhsbChnAwTKlQtHntqcqiXZwTUEdlsVy</span></span><br><span class="line"><span class="string">WFdZNRfqzkhWzeKMGmkuKoSkuSZRkddsuBNFVMFLPeUkLwCCDKagNjMZwtHcVcEEKyjAYubHipuqNjaV</span></span><br><span class="line"><span class="string">JukystpMZrhBgLqRVMpaIPsyAvYIsBDVqKNCMLqLwyhJhuWDdCPBgSzJTLkJvaGPirOFwfuMtkyXeKoZ</span></span><br><span class="line"><span class="string">rGPRJqXyhdYNOXVSqGvbSPozAbjhpyfgGVuNUYaRQomzrTtzAMJnYnyvDnuBkbVvmYzhlhqmwgCZaGJG</span></span><br><span class="line"><span class="string">GGRbaFdfnDlUfCfhpDWTkWfpUDuUksJvRFNxVYBKGoxBCdhmYZwyDPzWihcQXgByRbYxWZslVsbuTHTf</span></span><br><span class="line"><span class="string">vaulICCTRkkiYuYoqFdzuxsqOBkzEJHbNXhSnHYxyeGoEklCeaUVEtjxmXyOEzcpsAhfKCTejxOxwGYh</span></span><br><span class="line"><span class="string">eLtoPpPINviTCHUsgzSkycIxtvekMaoZkBIyLboyvMxxaqfviBxkSALNjiNYqGTypcZDvHonaVBZCSLp</span></span><br><span class="line"><span class="string">SjRTsJmDuPwKnYwCdTprFvbXnrhARNToXpryIfEoIwSWIdfSKeOHDYwgyUvwXXpKUKQEiyZxCsTkAjME</span></span><br><span class="line"><span class="string">hdxShAAUYJTkprXuFITxxJuKMiphRAyAeUFZgknMMLvUaSjiMlGmLARvTMpllxEQyfvEqkcONHVFcaTW</span></span><br><span class="line"><span class="string">tqcbVrgeTLTGuJsrjZdYrrjtoLKcEfjkIhjzXgEkYhZggujFJuQlVtSqvuejtxAEqjgXrYjmwLkSRmXp</span></span><br><span class="line"><span class="string">pkTfONxRyAxRYqJccLxuhabwMTWfwLTlzuVGJtVJOXxwKjFIZENpGHwRvTRitDBQBesRYATKhmWmmmbP</span></span><br><span class="line"><span class="string">EXOzdBHNeghlqpjJFmzXyADNHQNEThWDyMsGsTmyFnywIPvDSIcxHbKQHgmJEcfsPzYvSYIbQjnTAgzF</span></span><br><span class="line"><span class="string">UfZAbwfgCMRxtmZQQyayJFFkCSVHTUcQzSLWqhENNUpyLZaJsQsFQsPyFIjGtcmoJaFQGKTFtKUBdBBo</span></span><br><span class="line"><span class="string">xECKHgYSMcBWnzRvPyihfjwyjhTTavfYqOrbrgZDSrwVYFjNsdxLJIigfMgythUoUIVSydOnfhAaesXZ</span></span><br><span class="line"><span class="string">kfyDztQiBCMHjfEGLFllxfejLJjanZVRENsXhIxSWDgbvHHOAFtHzqdfquGbdQvOFlhDiWpxwEolxbep</span></span><br><span class="line"><span class="string">fVfpKYGMNIQuOlmtTkNRDFTVMtVkEXYUDZKfEihbxXsSLGDcKSHSMXZxAturZVEQgismVAgMVVatqjBM</span></span><br><span class="line"><span class="string">rXeHaGdccPJMlqhVAePDyEoIRTLCwJpkNTuOjEKEvXaAGhWmhWPHCBMVPkcPklbGIvzMzOFplRUsvZbE</span></span><br><span class="line"><span class="string">vScmmoKktOUVOeKBcqVvoSsplqqssDvLiPqucbrxoNkodsbrZnvoDfyNGyUAURseEuJPUWsEiVCNcUNd</span></span><br><span class="line"><span class="string">sxzoRVpEFuFloqWLumNVJITKXnWnOlGpCaQgTLJYizixXoxAHHbodRtPHBbnSzZRZOmlWKOQqvHWAhDh</span></span><br><span class="line"><span class="string">cYBGRQsFwyesMILhiwjnvjeMIZnHYHYNrmOahjrVPuRgsxdfgUbKCZAVfcOizDeQLKiFQmQQUlDHnCQe</span></span><br><span class="line"><span class="string">lMnlLSrtXhmGDqISCgElUrZXbXjGGkdWadBbxzVojGQwyhAbWMhSKFFwoIqJfIDdZjUdfCYFkpDdIuWe</span></span><br><span class="line"><span class="string">aFIUFhnlsREthBRoaquSzBVVOPABfuAYZpoalZwNfZMPOptcoQYVUdRYlXuYChPAdRJgFgwPyTszSXIe</span></span><br><span class="line"><span class="string">qHRtMxyNlPGoBfpjxHnNvwIADmJmquLgMQGtpJAyvflZjFwAgIymerCTnVkjvqPKFVRscOqAhqvCqCjw</span></span><br><span class="line"><span class="string">BBojzXKIdphOVTFKhBpnIWYRfuqvQZgVMaqNBkYKzqGaEnBFKZukSLdPbXNmcZtMeykLwlLbZqaHayOb</span></span><br><span class="line"><span class="string">IWZvbxEXXnaozCHeyiYMnWqIAwJxhMIPDsgySMKhdBYmdrGdbJOfJralshwvhWlmatTsylewdimJEzph</span></span><br><span class="line"><span class="string">tuTzSGOkGDPPvltRVJPdHRPBTAsKWncfjjuHdlEVOeZIvVnUFHmyGTFDlMGVyAIdzLocbTXIHYTopIok</span></span><br><span class="line"><span class="string">UHFAVjEXPlsMoKTriyGnfeTlVzvGhVZzUAWWPdZNdIxKioQylFMJZmSToyRGsDJKJXQxPkINvmoHCVUc</span></span><br><span class="line"><span class="string">RIjImkWWxTnDLQiXdmHqQrWBuvguUUubGByTRnJfkNWxsSupcfIVgboDWzqYHEfAnIKCfdYUOslfXPax</span></span><br><span class="line"><span class="string">YnaJfNLqJgcxRjBmRpOYgNpZOpzMOCVIRiiXdIqqFxPJhQqJadKiCesOsZoWGWbbQSVRZUlbNZdzeUTE</span></span><br><span class="line"><span class="string">nhdMSCKCPbpWZguZHGkLiWCisjqnaLbJpbRFAHPjGbHOXKZQXoQQZohmVqjTcdWNhXEjPlLKnjpwbMPQ</span></span><br><span class="line"><span class="string">ybzDvGgkybXtbDmjQuyOrMrcYGRGGfuuPXzieaetSBidnSRPsLaXKGcxDkXmHbqMWZJXsQkwtojlxOeU</span></span><br><span class="line"><span class="string">KSIFdVvNEnOUmIZDdlnwtJcPBlcpRWNTazpzgItwJotSLWZruzrMlSGASMWDwOqTpeYYHaTHCCurPdwB</span></span><br><span class="line"><span class="string">AWzUtwblZXNrBYdjUoDacvmRVURqOzUPlnFISsZMFPtthnDHSsFgkYfsMtXFuNPhLTleWVrmelyFaemo</span></span><br><span class="line"><span class="string">bVIhEAxNwOUDQCOCDIBHsQlFxCbHErKiBsvQNjuIGnIzZiwoVTdUZnucSaKdHrxJeGQfTawFJefGJFFa</span></span><br><span class="line"><span class="string">GHzELfnGBmkZyorbbDDwhvEVeIYIGLPMEuZduqFjbeWbVfzVIRZNXwPLgcYUsevuhEQXfYcJshYnJaWz</span></span><br><span class="line"><span class="string">iqvlswEBRKNYEJidlzdWnQJpBtyjHYVpkQGzdYkeREqjhmmnUIbGZVnwwaMKqgXfURSICNxdteUSGhGZ</span></span><br><span class="line"><span class="string">UEEFhWRoTKGRwFmPpZPOsalsrNOlkTdXqGKoWlWkqJvYYrtLiTfhdItMbbhdumSYgCcQVUARnYFWkCsC</span></span><br><span class="line"><span class="string">jElZxrQHIlbTHFLOnrutlvyxzaSIdkJgeyMUnUmtXfnaIedbAInAuQssOQqBTLbvFRiqKqUSdUEmcRmN</span></span><br><span class="line"><span class="string">LvAxlgliymfbjTwDSqNTLVkrKIrzpUShNKkuehciEAYeGJOFFcOvurJFUyfZhQqzfaneiBcrPhaphSCB</span></span><br><span class="line"><span class="string">StQiJvtoPhHcLUbriDUIfifVFnNtJfGlmcbQJSXsZfVjpbqnkMllUmHzLvEuSarSlNlNHsWvYlfhjMEA</span></span><br><span class="line"><span class="string">epYTjoRGZeAAtURFeDfDxTYmOmONuQQBdcdncFGjhHmKlwqmUWoXuIXIxaaXnNThgPGtIlynrUIPLQTG</span></span><br><span class="line"><span class="string">xXhattDrfBGbZRveKbgjzxJLdYREQlMeLtcIEUoyJocdAfUbymxuFLVjGkOQniiPParqoyQYfDYAQTkM</span></span><br><span class="line"><span class="string">WLicLxpEFkBbwlKrTyYilKTtYkpVGxtOjYmcBDOrwFhFiGutmpTyTarUbVUeSevBTdaPDpjRkaEmLJMg</span></span><br><span class="line"><span class="string">WsMhSGfIcBChcqrRKgKpjvGnFipjswgjetRtniMagakbCXAjpzWTtMlgZGCJwGyglpcLebrKWhgwJfWV</span></span><br><span class="line"><span class="string">qGifWNEpCtjuejHoyVCdIxzMYGnfoslgTNAJdtVBWDVoGLzHSAVBTnhNIvAOExQNiJOIPPiHkdaRbfaP</span></span><br><span class="line"><span class="string">ixDDoCDOOeAqvQJFxLWDICfGmufyxmaMshbvcrtjqqVtffZTnbtCOQfzRMGwOQEKaAmSWjnYdNgvdkmd</span></span><br><span class="line"><span class="string">dQmaKZSdqKNrnvJlcyVMKuNWmuoOeyKecgjXbmSqnpjwJEaDYoehEklEgJyiksGxdEKgfYRXQecRZgfe</span></span><br><span class="line"><span class="string">qKWGtIDCjnQyLfMuaaUCYJBblQAsSBNSMHLcrQxhDkyqDLtpqjoFzRaOyIvCoOhqZewHMfmCYkXDRsSE</span></span><br><span class="line"><span class="string">BJXWUdVlTnKAXoDsLXiHHFfgiacxczqOIkITlkzuQgZkGnIWaJzJDUXbpMpMQdOSZQEPQgRAEkFXtUKg</span></span><br><span class="line"><span class="string">PKaKyPwfMJIvBUPJFjOjXqOtWXnJerTyfLBHcpvslcFXuqePWnKSMNxTdtlkjUrdZBAfuAvcSkOuGItP</span></span><br><span class="line"><span class="string">DEDnglUSMrZkJlwJAmWiBJVZjzywtwjBPqUNTKnPxMQCTJufdWNiioSrhoYmWkYFqvIBTQXoItRlfpjG</span></span><br><span class="line"><span class="string">CvxQyoIHlxKzyNIapFVJQCjgrTlGqmxQrWsIRfeeJcpHqayFkrrRQAvdPklbPbJuGiknTHzzYJSZRBzP</span></span><br><span class="line"><span class="string">VBgMQnWyNmHElRIkxTpsaCWVqzDXBieLurzARlcCmZWBMLuXvrvkqlSbBUBzkhLxcIZdAwdhkmXnYHUW</span></span><br><span class="line"><span class="string">fgmEVkaxuwyUJegBAmgcvSDHTGsyehcwlqOWXDvdFDOYNwHsGolYTDWWCVnoMEDHLwDZOiIFoEghDyzP</span></span><br><span class="line"><span class="string">VfBgFAqFjyjQSJGPXUIjMXtbPBhTXVsbNXXbjfqUoDMKMSMySZfThaykPvXFoJjqepblrGbQBCeoRFUm</span></span><br><span class="line"><span class="string">JzKvHzEUmciNCBjIpICtQgvHHeCyaunOrxNAxgXrNhbokpjmbUVTnjfCQunojDUgEPmHufYFAOuLjSnW</span></span><br><span class="line"><span class="string">vSMFCeOrTcUjGPADANSjBWBTDTboAcvjbymTCbJhZAQxIiyGyzbaUIijFYFdpkqdgejWWJKWCJgVrVBg</span></span><br><span class="line"><span class="string">FnztcwDJVTXEocBzzGICmudknKOGdJRnuQrUSuiGMJpPqERoKWnvMEVbTrHXVWBftvUpFxFDrpHOlSIM</span></span><br><span class="line"><span class="string">czgTBmCORMFkaBhLKJdmqyPIjjDmPUhmaaDhgIMQssbIVVqnhWpRgWwhkPFINTkTsxBwNRqWDrriWlGK</span></span><br><span class="line"><span class="string">DwEcseTkyFvfQSHfzFiQkkjRAHOGdlUbcYqCIqxYuJZWhojWvTzcVaxlPTmsEiuMTWPtrLhmflWJHAhh</span></span><br><span class="line"><span class="string">RzKdjsziZMyDkaLdLgcFpshtFBzrjXOlKjJZqMscCrurTWfbUFIfEXfJyRxmeyVivMqtGvJDZRWWSEQQ</span></span><br><span class="line"><span class="string">zuiIeXWVRQtcCallRqYNKhOxYJwLKpioqoUJrvxAIpNwgcveovCsfzddnwLkiHTaqvdZnAPDMjXdPAMM</span></span><br><span class="line"><span class="string">aKPEDtAcRcnOmVAnWpYwlckWLEHbcciLlXQsQhYadTcXHIkYQkUUtekVHNeOLPUZVQmWkFpIlGqDrICI</span></span><br><span class="line"><span class="string">AhEIHjLjmadcBtQmCJKiHnzEkCmJnNXUXJZtwdtsTalneUpaXGyVoGVinWdZAINrCvrGgdTaljdRqnWQ</span></span><br><span class="line"><span class="string">xCrurrtWwIeuBrIuPdnpWSEUPPOCRvPaLjAnVpuxtjKKaacZiZfPskSNuWOHBSWomtOmuqgmPwHzhbDi</span></span><br><span class="line"><span class="string">GfbWfMFAzqDyfGCRfSbOhQjYbSxScagTOFHJxdOscKOIDUMEexfHZFXvvZathMvpugyuplCQVLLIijPQ</span></span><br><span class="line"><span class="string">pETSDgPYLEZndRCRBqNJmmFKDhxreFIjfJWrySXeHuKMOuDjJDrjzYtPbwiClbuvBoGWyTRgMkjrwJgO</span></span><br><span class="line"><span class="string">NobDHVWysyDUsxYPBmVkyWcQmYJDvExHZpUWHFuVJANZKKoufiHYjLtdmUlryQdFikZbDjgqfnzLRwVA</span></span><br><span class="line"><span class="string">rFgglSdAljflUTjSyOxJfcuyqKeLkXLVZgsAgnjpJgdNhenJeNJhIdKMRFGISYuLjpdYPueEfOySxZsK</span></span><br><span class="line"><span class="string">oiAaxnTWGvVyHaLBaQTlAyWTaVOjENThhHZIldJysycKTLZNgOfIWHaeKHzUkuOKIMwZZfWRcmgIMqdH</span></span><br><span class="line"><span class="string">KDdmwBWFjcOOpPiTWQdYzXGyotjpzRQVJtUiNimtRmVBTLIFKMsfnbXaRDMVpGqJPTUAGYnnQFpHogEh</span></span><br><span class="line"><span class="string">iNonmFqpgirGRrYouiAQCLLKUrTEDfrAyFLlemtLoqvMyHgMUIDwrrcSHgqoJFKZPgeObPyNKJqhCjzD</span></span><br><span class="line"><span class="string">wFCJrYjPMGsmCTPZmkfwDjTDvJuqXOUvhASPAtJnshwkSmhQPDMbQEpvJUQVGoMqaGVsJTiDnjDlqzJb</span></span><br><span class="line"><span class="string">ZpJqCiGHYdfLlozWjGTBfeRccgTSoZGBJVUidJNDPVCwNyQEMUfOkYkopDFoSYimrjhPUSWOVFFslXuH</span></span><br><span class="line"><span class="string">FwGadAaoxZsyCUBBAwjCDrUmeLCZnknsZYLbnyZFPsfWANnCGXDgGXMnnHWyAhswLClklfyJHWIGRIta</span></span><br><span class="line"><span class="string">YbvJsyKUxZJPOHikAeMjrWMKkOGIGkXbWaDHYCivWJBGyapZuNoGOTgiboazIgYfhVrlJCQlckwzORqf</span></span><br><span class="line"><span class="string">YYZDLkPpVVrRBkvPUwAajiBYFsUHCERGKXYoYRSAFAkVVUCcyxTmfiYwrqPabLjiaWZJavgevbPVqeKH</span></span><br><span class="line"><span class="string">NpYHapQMLleltzWrAMCuBOuDLUsHjmGBkYyZNGKOjIHODUtdiKmacCVxvHVMAkOmwxaxecxfIBeUfYIW</span></span><br><span class="line"><span class="string">GhVerLKgTnQwDQjfbYDGnyjxXUjJxEIIAIJeCiHLRXFsFqRliwOjhGzvKwUdBNpHhZMKZxKSwsIYbnPB</span></span><br><span class="line"><span class="string">DdhLBKCIOVLbqqfOGvcQxgzqOBJalnHqpzqGBYGXkzpdEOCtNRYQDyFNgHpVNXUPKspppPWDsJynQiMe</span></span><br><span class="line"><span class="string">dUjrgKktiuyWgZECYlowmTKIaaZrXqsqDGqUoDbHkYyzdeTjMfwcKZYEcygxXmzOWnPtgeSGSTZIspGe</span></span><br><span class="line"><span class="string">IqWmbGnFXKYuWsIgebIhMyZgqyCYGAHCABGTccPEsIMgIomuOQBxjCSnBBoZVyHQcpyDUiUInRRQUGnM</span></span><br><span class="line"><span class="string">xRkBAuyzWcqHaQskvIsWhwJHHqwTnBIKEJQXDVcBeADrTvmWRJCHhlfftoywzyDxeJAXJEHnyKZnCPHf</span></span><br><span class="line"><span class="string">QfZjPnuDnNvMNXYDrIKPoLEHBcelddIbifWQayzVVgyKuGocVGSDDOfGoDTcAvblCBjPVuOaopqPorvk</span></span><br><span class="line"><span class="string">XAmPPKhkoHiUXGdoXUDphytuxtmYWOtyTRIZGXaWoQIjYCnJcMFGosGGLBnpkYNyUnjYJHoHJFAOCTUN</span></span><br><span class="line"><span class="string">AlYiZLbAkeRRadJxMJGyobaGtYGVKdkjgAWwNzdGddBZhrZUbcemTVrXuwcqZJZWEOJgzHkaeRrLHzWh</span></span><br><span class="line"><span class="string">fRxdGcsYxTPlUfZqNiFSWmpeyUMXBnNoaxgQrJmrMZRSGGNwvRftYOkjnXmfovkXSzUQcaNkRwcaiUvm</span></span><br><span class="line"><span class="string">zfPxcVtFVzYSJSvHOBNvadIdMPoCoogAaLITTUXDJBQpBDUcKGMGAeXvdiWiqYdzpaApztvWUoyIZsrB</span></span><br><span class="line"><span class="string">btzduJqYYJPrtYFVahBhumbHKVaFpACqmZxIEfMWaIsKptKrwoBozgUgxyABdDqgEYpZpAzOHcYahErC</span></span><br><span class="line"><span class="string">brpgPRkjtqHdCFXRogfMdBbJlkevgEGntPozjddKkfTfIlJnpRxXbgcDZxQVJwMTroLvXWwaCvhdlWID</span></span><br><span class="line"><span class="string">xmwuHRLnAngCMoInIERKeyVHbyVihKCLhOlOcRTInBfxLrXtkGIjiBBCadgQJKnntnimgvOIycZczYLW</span></span><br><span class="line"><span class="string">FrcmRhBhhwesJsJUXPpzOABCKfIOhkGtGdJVtqDicTNFCjhjVQBCpmiuzdXPHntdWHgYITPWxvcRewrN</span></span><br><span class="line"><span class="string">eIjczSwYTOtQVxwuUToUOTqjOQrpTmnxvWxaEYioOjZCLBasBIcrZWMNMvSEywdOuNGMNrZeTAeAEcxA</span></span><br><span class="line"><span class="string">qeNIviyhAgpVtKEhVHexKHvsFNwMKndVlaykRypvEtZgBHimRwheVxYMANImTRwpwRsYngKRKYlwZMoG</span></span><br><span class="line"><span class="string">OskDgCsdNcOhxvzIpZGDVFdIUtBILTUJSebXAeOuMBwUCSmcRkcoTVQuSuCFuRAvSVOSjxxZbMpsiYxB</span></span><br><span class="line"><span class="string">lTRBhWBkTbRwbEpTimHCPMktFOJXsrKenghxEkyMpFagzWrGyUKXCieKHfCyLMKnLgQanMeyKSTzwnjs</span></span><br><span class="line"><span class="string">iNEuVhJZKAYmZAEiBeioVnebOrfvBgjHEKyfTpzNnyPzhNUmRFnnCfLGylzZtKApMkuyrBMSpfplnUBk</span></span><br><span class="line"><span class="string">PvFBYGcjLmTzdUAtKmtVzuWAXhauatQCqXFBOcyPfEzxzxbZaDYbAYfevxfXwmbquUkZYBtKptOugtre</span></span><br><span class="line"><span class="string">gSLHvHsCYbZZUIWqNVfbBLuwQxzIdPkDqOdFyAHzcVWzVImWlQwmPdhGavFfwtAZZyBqAxYBpRNLmpOG</span></span><br><span class="line"><span class="string">pTyfrLlNbtBmZofqsFjpyxlafFhCUSlkHSiWgJQqGikwsJMMzLaiCEJQZXzzdfkmNgpkXFXyUYUKOlrP</span></span><br><span class="line"><span class="string">NRhnHKvolzGXFmuJQjqUYCgqLQYsHJsodFfHGARGcQuboCWQOmtiwFuMNyrynjxBvpuCuYXQyauYyQyt</span></span><br><span class="line"><span class="string">CcnnHPNnYwoycvmXQFPHtDfUkrzcfdDeIkMLLnZCcQqGTCdFKxbiwdEZgeAkTnjBOzgqLLiepPNZNgCE</span></span><br><span class="line"><span class="string">PhDErcNklMuDlQGNIiEPkplmoHYUQxpMvFoqBUNxHEndUrZFZbdYqnHWMjeWnXJIowJEXuitzKWymOHs</span></span><br><span class="line"><span class="string">UwKnYZaSIOZNdhGQDXfVnhzGpunjqDQXlhjgHYAaklXxBdeGTQbSwOtnKyXWEhScPZoYVEYBcOvbUOpj</span></span><br><span class="line"><span class="string">PiHYqSvYxEbJFZQBMZwazYhNhopIWhaqNtBINrzkZfdzZgjKimbPZjzXIRpsLPFTNSYKraOJyOAspaFF</span></span><br><span class="line"><span class="string">RDuRzWGcRQsgEhjdilfLuuvTQqSkoxWQDWjTFqaCVVNqyBeBYrvpEvNWTIeAmwhpxRpncCFDqGuoVLWs</span></span><br><span class="line"><span class="string">YznqNyddXhXZwTTRwgAHUWECXygmDcwMcMcuGZIVdcRwCHalNiYXbDFYjfFMAUIikCjvUHWCIWuqGyIe</span></span><br><span class="line"><span class="string">FlbDthXXMTtdtvBRCaRrXSPPkoslEsPvzbBMpTicAwfvXbjUHtQpjnarlfLfvBosWVxXwXMBVCIsRmoQ</span></span><br><span class="line"><span class="string">nPwNBePyKRlpqpuixKVgVjkVjBqTRgDIJAuglUhlTstwFBPfISaiMveLjxWjwYJYZNhlTLMslbBQyYbu</span></span><br><span class="line"><span class="string">KjYKosgSmHZKkLDADQCfoMuLVHeeCrzYEqpWLoeRIhcunPXqiwqAdAGAJKBzIWHqNVwmYISdvivfDOfr</span></span><br><span class="line"><span class="string">MvPbdtztrirPIZtBlmbdfbmVXfvglESZuahISiQFawCiFzjOrAUZlBJmiLJaXLRPebQemgMlrtoxYxhW</span></span><br><span class="line"><span class="string">eZiNrcmSUangudNSeUNyfouBTdUFlcYblciLRJCmZcYbxrOwYdGJWNqQnYpEQfksXvkiuBIJMbdkmnZQ</span></span><br><span class="line"><span class="string">AAGSIMRHFEYbDglmfjiFhGFzrFDTtUPuIUdSMfDmbYyOnVBXwFVxMuXEvcLIXQgNXEgmguOCFKSIUfzu</span></span><br><span class="line"><span class="string">hkJcsfjrpWmZgNhuXpwOPFvrQeMhLeWSZupZoJDwIssgzqeGwCHsLYQGcNKrKOgHFUZMIeASQSYejMRh</span></span><br><span class="line"><span class="string">AdENpADeBQuHHCbHwKXMEHSxefbBmtTtJDCpMJoSRtgwfmDZrRlJdTxPTWQBWmVpeEXklkcdhknVplUc</span></span><br><span class="line"><span class="string">TRvDMLLpFEmjNSfSGgBwuvFMXFrgjzHbyZvYGAcUmesKyznkwgpKPzOZZoYMIFHZlOVNTUVWwRMFgjZL</span></span><br><span class="line"><span class="string">cQNqslzJHcWlnLvCAfRNbOZFnecoSBwliZyTxopHFxLzYiosNfSJatOeKXfMtNGqfIhlPspoMmEjdBMC</span></span><br><span class="line"><span class="string">nxaQYozMCbAsciQmuBguJuvnajnKyDogidmEbVSiQpvxumJGpPPmwLeTVGatfxEukJGWMnleMoXlBvAU</span></span><br><span class="line"><span class="string">BFGKSVJZjKEhqEJoktJqRDCZSXSvwsbTAoxmJHwrkyumiINBNRpcGAbiNuNxRBRyzpmSqHhschdrOyat</span></span><br><span class="line"><span class="string">DUHISNyMSJCnDURDsKBLyESXEbVBcQIlPmJrGBjnjfnyYpLsprNXqhraWfQWqJUyiXItxeNIaYPjgaGe</span></span><br><span class="line"><span class="string">VKTTmItxeZFUhqIEeFWAskmkPpdndqPHRSVyLpvixIxrSOFcLrQMlIPciRATHBSobPDNTMqDWfhAluRm</span></span><br><span class="line"><span class="string">fKiyTrVrISmMIcmeEtMCFhaQeuUTWLyyqyxELDTjwjrONibFXzASOGcEllUqZLPGerPaHGHNLFtYoWDQ</span></span><br><span class="line"><span class="string">SEzQTtahBhkiSUaxuPGukHFwnrFFvUIWfYFYUMiPTgXpnidrnbmakYuKsxazobOamccrheZaAKSRsvZX</span></span><br><span class="line"><span class="string">hrNjiaJfhsrSFDXhgaqIdQxmpCYfVAxkzLMMruIUkyPTVbdrDbWYktyYGNsHgBEAJopAhZdSvHszEzZV</span></span><br><span class="line"><span class="string">ibEsuFWmRzyEWRooShySwYCQqdDBfMjhJDbBrlscxDfmkWYiovHsihkuCuSsxRSrPqPipBkUmFAYPSAs</span></span><br><span class="line"><span class="string">YnuYVpcecBbcKHdvzWYypHLjbkGUIdBNrKwkahKGSiwcurJSISKpVjYftIuiOtfRvywwXWOQERjqSFfz</span></span><br><span class="line"><span class="string">lrXosQbYuhjuAxhtgXtwbuTeucJVywKgtZyNnhjXRLLiHwMoPfpPPyAQZrFGfbzHgulXsmlxPFbWXpuT</span></span><br><span class="line"><span class="string">nkGetBrrcvGvlZSzHgKIoJOyMlZurWhDukuwqwZhvYKpKhmLaAeCPMPELAgINyKqpOapcsKHhPfxFDJA</span></span><br><span class="line"><span class="string">HMkjYdCAmwocWSnEfogJCcGRcKfSjlJMiTSRfPhDqVDEhkCSJNDmOiqXDGVaHzNYecLSWPNIWfBqrHfU</span></span><br><span class="line"><span class="string">duKBbdnrjUEeYwykGTBbbcmojJTDnpKNOSVViSLMMyBsoKjVHxVADCvLscWaqlJSTODptdPBjWFsBldq</span></span><br><span class="line"><span class="string">odhhExmXiUxapAkkDyVzhTSsQyJdPsaJrFNmNMnLxVYRDYpfqXUAxwKlZiKWWvJhjEVrwgzCsWoZFtCE</span></span><br><span class="line"><span class="string">kKjyaqbooOlNkAddgAazFlgKLjlXDGtlvRBYCYQiRfRIfWIYaLZxLrQzrYzBghYOKAaKgXmUpPkCaMmN</span></span><br><span class="line"><span class="string">GlAXokgPsdyUjsiaKSSoeCqMrMbQXeRZqkNeAQpujYJFGfbeceunpFNYjuUPiQVOZPXTKhiwPMLKZEKP</span></span><br><span class="line"><span class="string">NoEPPwXtRoVfGYIRyRgZWyJrMjuBQNchjZBNQUwSgIyXniXCMeXRfAcDKxskxYvMyRGyXeSlOFKFItyI</span></span><br><span class="line"><span class="string">FiUSskVfjqRXgqWOYHdDEWClkYXPjcAcuKkddJrDZqpFYYIlxACJHnfTTOUICdPhknncJRxdkMwSeSVS</span></span><br><span class="line"><span class="string">QdoxJeCJTcjDogRrnFsOIiHKlhyxucemEexjTFgKjdbffVxXqPQxLhdaawVKLxYRqeQGLhXqIeFykJUD</span></span><br><span class="line"><span class="string">MatBIGGTCbkQWAeYOYPoWRIHOSYZcStFGQpExtLKWcOwGMxNzgkbaqOMPkcHgudTOdQooljmZryWDUKG</span></span><br><span class="line"><span class="string">IKGqNZroQwTworzNcXZRBNYSQgMiwoqjgHnCOZYAWMonmDGAYJcPvecBaHeJQWolQZmYhKoBZaVoCQmf</span></span><br><span class="line"><span class="string">BGRdjBsnBnOYLIQXIeTfmwUxtADmBkhDXEZqGsBGOwMQqyLHOObREqMGkSeHepgonKmvKggqnntwXlxW</span></span><br><span class="line"><span class="string">juNjEvszhIaFFlEHHgiLrYDAsrfdvHuyXyEgvLYCEmVLnmjlUxrWvcIdFkkJjaaNZqePUSEHhecBbHRN</span></span><br><span class="line"><span class="string">VLquogLIjUrjRgsXGywAquhfRjUMvmIEDSOXFkupsQARTCqbVjFbKicfFTtVKxbqfSbLlybPvcUSasUP</span></span><br><span class="line"><span class="string">mkPytpvUSvuPtLFmkeKQIWNaJouCnyPyiaRBSYuvMtBXylHWIKkexawFeNwjIpTJBImSUXAAipljptIj</span></span><br><span class="line"><span class="string">MoxFBReUIhcyLaoBVPIZSWfJDMJMwEWaZbjFpgUpXQYtmwDUeUdUruxpUcCGdnlpkCXZlEETSCPauRwg</span></span><br><span class="line"><span class="string">YYCcnRpqBUyMnvWUNyoXhKqwZsrTLteXQVxOSztAxqBwEsKPLLYmXPdkOoUfuEcJYdIfxQXgalSKJfEt</span></span><br><span class="line"><span class="string">TOKazgVKoiUsuemONwHeyCVCuUBkbAMifDjSeyplNXUSPpvzJCFZmLTJQGPRVuSVtZUujsLwtqcGoEka</span></span><br><span class="line"><span class="string">UExetgcupdJsrsbhTYULkVBMCPZIEHlLwarcxqTdcfkAmODkhTJZHjKoyGPfpYsHPqHtLOTWGMixunvq</span></span><br><span class="line"><span class="string">WXxZueyZjieriCSWGRUwIYKmJFjrvkBReOMmvnkprYWTLWNTvzIHtzEtkIzPRGMPidFbewZnqlhYFeYE</span></span><br><span class="line"><span class="string">fpszkxkhRfwiYEXyERfYBMEJFDHThpvtwBQnemRsLmZVPkitRtMYNsFbZonBvtopMftpspksjzeqdxAL</span></span><br><span class="line"><span class="string">tWsLrtDqToVGVOQAOvyIdhWOeHKcykQJxjgqlmGKMiKnmUTJrgDRXaroZEQnyXSoGVDmUUXDiclJejRR</span></span><br><span class="line"><span class="string">wgDEIuvHFxRfQhtqLKnJfONtkcnDORkZqbtPplsjjTEIsquhSsQTwNZuPVxaTqDvwMONBfCsNJuJpJHZ</span></span><br><span class="line"><span class="string">dCdFLtBQPtFQuCdKOrpndJNUFQIDSbetUKylhSUjcDVtbiQrWMRQhAwGUZyPneCGUjGBBTkLqxLAXXtB</span></span><br><span class="line"><span class="string">KfErkDaWMFZZeuqDmXKJEGHyToPUhPphfVhgUZgbIuRAtWnroImpJKqqmEZqeNQCKzhjIkKQHURWLXFw</span></span><br><span class="line"><span class="string">PBuijeoTSpsVLaOGuLVjMZXkBvVXwUuHfBihziiavGSYofPNeKsTXruMUumRRPQJzvSzJkKbtSipiqBd'''</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">pattern = <span class="string">r'[a-z][A-Z]&#123;3&#125;[a-z][A-Z]&#123;3&#125;[a-z]'</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> re.findall(pattern,mes3):</span><br><span class="line">    print(i[<span class="number">4</span>],end=<span class="string">''</span>)</span><br></pre></td></tr></table></figure><pre><code>linkedlist</code></pre><h1 id="follow-the-chain"><a href="#follow-the-chain" class="headerlink" title="follow the chain"></a>follow the chain</h1><p><a href="http://www.pythonchallenge.com/pc/def/linkedlist.php" target="_blank" rel="noopener">http://www.pythonchallenge.com/pc/def/linkedlist.php</a></p><p>线索：打开源代码，注释中 –&gt; urllib 可能有帮助。千万不要把所有的 NOTHING 都试一遍，因为它不会停，400 次完全够了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">url = <span class="string">'http://www.pythonchallenge.com/pc/def/linkedlist.php'</span></span><br><span class="line">data = requests.get(url)</span><br><span class="line">soup = BeautifulSoup(data.text,<span class="string">'lxml'</span>)</span><br><span class="line">href = soup.a[<span class="string">'href'</span>]</span><br><span class="line">p = re.search(<span class="string">r'(\d)+$'</span>,href).group()</span><br><span class="line"></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span>(<span class="keyword">True</span>):</span><br><span class="line">    next_url = url + <span class="string">'?nothing='</span> + str(p)</span><br><span class="line">    next_page = requests.get(next_url).text</span><br><span class="line">    print(str(i)+<span class="string">":"</span>+ next_page,p)</span><br><span class="line">    <span class="keyword">if</span> re.search(<span class="string">r'two'</span>,next_page):</span><br><span class="line">        p =int(p)/<span class="number">2</span></span><br><span class="line">    <span class="keyword">elif</span> (re.search(<span class="string">r'(\d)+$'</span>,next_page)):</span><br><span class="line">        p = re.search(<span class="string">r'(\d)+$'</span>,next_page).group()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">break</span> </span><br><span class="line">    i += <span class="number">1</span></span><br></pre></td></tr></table></figure><pre><code>0:and the next nothing is 44827 123451:and the next nothing is 45439 448272:&lt;font color=red&gt;Your hands are getting tired &lt;/font&gt;and the next nothing is 94485 454393:and the next nothing is 72198 944854:and the next nothing is 80992 721985:and the next nothing is 8880 809926:and the next nothing is 40961 88807:and the next nothing is 58765 409618:and the next nothing is 46561 587659:and the next nothing is 13418 4656110:and the next nothing is 41954 1341811:and the next nothing is 46782 4195412:and the next nothing is 92730 4678213:and the next nothing is 89229 9273014:and the next nothing is 25646 8922915:and the next nothing is 74288 2564616:and the next nothing is 25945 7428817:and the next nothing is 39876 2594518:and the next nothing is 8498 3987619:and the next nothing is 34684 849820:and the next nothing is 62316 3468421:and the next nothing is 71331 6231622:and the next nothing is 59717 7133123:and the next nothing is 76893 5971724:and the next nothing is 44091 7689325:and the next nothing is 73241 4409126:and the next nothing is 19242 7324127:and the next nothing is 17476 1924228:and the next nothing is 39566 1747629:and the next nothing is 81293 3956630:and the next nothing is 25857 8129331:and the next nothing is 74343 2585732:and the next nothing is 39410 7434333:and the next nothing is 5505 3941034:and the next nothing is 27104 550535:and the next nothing is 54003 2710436:and the next nothing is 23501 5400337:and the next nothing is 21110 2350138:and the next nothing is 88399 2111039:and the next nothing is 49740 8839940:and the next nothing is 31552 4974041:and the next nothing is 39998 3155242:and the next nothing is 19755 3999843:and the next nothing is 64624 1975544:and the next nothing is 37817 6462445:and the next nothing is 43427 3781746:and the next nothing is 15115 4342747:and the next nothing is 44327 1511548:and the next nothing is 7715 4432749:and the next nothing is 15248 771550:and the next nothing is 61895 1524851:and the next nothing is 54759 6189552:and the next nothing is 54270 5475953:and the next nothing is 51332 5427054:and the next nothing is 63481 5133255:and the next nothing is 12362 6348156:and the next nothing is 94476 1236257:and the next nothing is 87810 9447658:and the next nothing is 6027 8781059:and the next nothing is 47551 602760:and the next nothing is 79498 4755161:and the next nothing is 81226 7949862:and the next nothing is 4256 8122663:and the next nothing is 62734 425664:and the next nothing is 25666 6273465:and the next nothing is 14781 2566666:and the next nothing is 21412 1478167:and the next nothing is 55205 2141268:and the next nothing is 65516 5520569:and the next nothing is 53535 6551670:and the next nothing is 4437 5353571:and the next nothing is 43442 443772:and the next nothing is 91308 4344273:and the next nothing is 1312 9130874:and the next nothing is 36268 131275:and the next nothing is 34289 3626876:and the next nothing is 46384 3428977:and the next nothing is 18097 4638478:and the next nothing is 9401 1809779:and the next nothing is 54249 940180:and the next nothing is 29247 5424981:and the next nothing is 13115 2924782:and the next nothing is 23053 1311583:and the next nothing is 3875 2305384:and the next nothing is 16044 387585:Yes. Divide by two and keep going. 1604486:and the next nothing is 25357 8022.087:and the next nothing is 89879 2535788:and the next nothing is 80119 8987989:and the next nothing is 50290 8011990:and the next nothing is 9297 5029091:and the next nothing is 30571 929792:and the next nothing is 7414 3057193:and the next nothing is 30978 741494:and the next nothing is 16408 3097895:and the next nothing is 80109 1640896:and the next nothing is 55736 8010997:and the next nothing is 15357 5573698:and the next nothing is 80887 1535799:and the next nothing is 35014 80887100:and the next nothing is 16523 35014101:and the next nothing is 50286 16523102:and the next nothing is 34813 50286103:and the next nothing is 77562 34813104:and the next nothing is 54746 77562105:and the next nothing is 22680 54746106:and the next nothing is 19705 22680107:and the next nothing is 77000 19705108:and the next nothing is 27634 77000109:and the next nothing is 21008 27634110:and the next nothing is 64994 21008111:and the next nothing is 66109 64994112:and the next nothing is 37855 66109113:and the next nothing is 36383 37855114:and the next nothing is 68548 36383115:and the next nothing is 96070 68548116:and the next nothing is 83051 96070117:and the next nothing is 58026 83051118:and the next nothing is 44726 58026119:and the next nothing is 35748 44726120:and the next nothing is 61287 35748121:and the next nothing is 559 61287122:and the next nothing is 81318 559123:and the next nothing is 50443 81318124:and the next nothing is 1570 50443125:and the next nothing is 75244 1570126:and the next nothing is 56265 75244127:and the next nothing is 17694 56265128:and the next nothing is 48033 17694129:and the next nothing is 56523 48033130:and the next nothing is 51253 56523131:and the next nothing is 85750 51253132:and the next nothing is 42760 85750133:and the next nothing is 11877 42760134:and the next nothing is 15962 11877135:and the next nothing is 75494 15962136:and the next nothing is 87283 75494137:and the next nothing is 40396 87283138:and the next nothing is 49574 40396139:and the next nothing is 82682 49574140:There maybe misleading numbers in the text. One example is 82683. Look only for the next nothing and the next nothing is 63579 82682141:and the next nothing is 37278 63579142:and the next nothing is 53548 37278143:and the next nothing is 66081 53548144:and the next nothing is 67753 66081145:and the next nothing is 56337 67753146:and the next nothing is 3356 56337147:and the next nothing is 94525 3356148:and the next nothing is 89574 94525149:and the next nothing is 4413 89574150:and the next nothing is 82294 4413151:and the next nothing is 56060 82294152:and the next nothing is 95493 56060153:and the next nothing is 80865 95493154:and the next nothing is 66242 80865155:and the next nothing is 16065 66242156:and the next nothing is 62145 16065157:and the next nothing is 23147 62145158:and the next nothing is 83763 23147159:and the next nothing is 62381 83763160:and the next nothing is 76841 62381161:and the next nothing is 91706 76841162:and the next nothing is 9268 91706163:and the next nothing is 64814 9268164:and the next nothing is 80809 64814165:and the next nothing is 14039 80809166:and the next nothing is 73355 14039167:and the next nothing is 81905 73355168:and the next nothing is 36402 81905169:and the next nothing is 27221 36402170:and the next nothing is 79607 27221171:and the next nothing is 91763 79607172:and the next nothing is 11631 91763173:and the next nothing is 76396 11631174:and the next nothing is 69905 76396175:and the next nothing is 11073 69905176:and the next nothing is 71281 11073177:and the next nothing is 54345 71281178:and the next nothing is 19047 54345179:and the next nothing is 34376 19047180:and the next nothing is 3193 34376181:and the next nothing is 74258 3193182:and the next nothing is 62712 74258183:and the next nothing is 1823 62712184:and the next nothing is 21232 1823185:and the next nothing is 87890 21232186:and the next nothing is 21545 87890187:and the next nothing is 37136 21545188:and the next nothing is 23060 37136189:and the next nothing is 5385 23060190:and the next nothing is 4620 5385191:and the next nothing is 39111 4620192:and the next nothing is 35914 39111193:and the next nothing is 60310 35914194:and the next nothing is 19178 60310195:and the next nothing is 44671 19178196:and the next nothing is 45736 44671197:and the next nothing is 9216 45736198:and the next nothing is 12585 9216199:and the next nothing is 11302 12585200:and the next nothing is 33096 11302201:and the next nothing is 13967 33096202:and the next nothing is 57004 13967203:and the next nothing is 64196 57004204:and the next nothing is 73929 64196205:and the next nothing is 24800 73929206:and the next nothing is 25081 24800207:and the next nothing is 90033 25081208:and the next nothing is 45919 90033209:and the next nothing is 54827 45919210:and the next nothing is 73950 54827211:and the next nothing is 56978 73950212:and the next nothing is 8133 56978213:and the next nothing is 61900 8133214:and the next nothing is 47769 61900215:and the next nothing is 631 47769216:and the next nothing is 2284 631217:and the next nothing is 60074 2284218:and the next nothing is 35959 60074219:and the next nothing is 57158 35959220:and the next nothing is 90990 57158221:and the next nothing is 27935 90990222:and the next nothing is 99927 27935223:and the next nothing is 41785 99927224:and the next nothing is 32660 41785225:and the next nothing is 4328 32660226:and the next nothing is 42067 4328227:and the next nothing is 8743 42067228:and the next nothing is 38613 8743229:and the next nothing is 21100 38613230:and the next nothing is 77864 21100231:and the next nothing is 6523 77864232:and the next nothing is 6927 6523233:and the next nothing is 82930 6927234:and the next nothing is 35846 82930235:and the next nothing is 31785 35846236:and the next nothing is 41846 31785237:and the next nothing is 72387 41846238:and the next nothing is 59334 72387239:and the next nothing is 65520 59334240:and the next nothing is 93781 65520241:and the next nothing is 55840 93781242:and the next nothing is 80842 55840243:and the next nothing is 59022 80842244:and the next nothing is 23298 59022245:and the next nothing is 27709 23298246:and the next nothing is 96791 27709247:and the next nothing is 75635 96791248:and the next nothing is 52899 75635249:and the next nothing is 66831 52899250:peak.html 66831</code></pre><h1 id="peak"><a href="#peak" class="headerlink" title="peak"></a>peak</h1><p><a href="http://www.pythonchallenge.com/pc/def/peak.html" target="_blank" rel="noopener">http://www.pythonchallenge.com/pc/def/peak.html</a></p><p>线索：读出来 –&gt; 打开源代码，peak hell 听起熟悉吗？，像 pickle。看到 peakhell src=”banner.p”， 点击它得到一大段bytes类型的信息</p><h1 id="now-there-are-pairs"><a href="#now-there-are-pairs" class="headerlink" title="now there are pairs"></a>now there are pairs</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line">url = <span class="string">'http://www.pythonchallenge.com/pc/def/banner.p'</span></span><br><span class="line">data = requests.get(url).text <span class="comment">#字符串类型，在最新的Python 3版本中，字符串是以Unicode编码的</span></span><br><span class="line">bytes_data = data.encode(<span class="string">'utf-8'</span>) <span class="comment"># 字符串转化为 bytes 类型  或者 bytes_data = data.encode('ascii')</span></span><br><span class="line">pdata = pickle.loads(bytes_data) <span class="comment"># loads 方法需要是 bytes 类型，即二进制数据</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> pdata:</span><br><span class="line">    print(<span class="string">''</span>)</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> i:</span><br><span class="line">        print(x[<span class="number">0</span>]*x[<span class="number">1</span>],end=<span class="string">''</span>)</span><br></pre></td></tr></table></figure><pre><codecode></pre><p><a href="http://www.pythonchallenge.com/pc/def/channel.html" target="_blank" rel="noopener">http://www.pythonchallenge.com/pc/def/channel.html</a></p><p>线索：打开源代码，第一段注释中有个zip，第二段注释和本谜题无关。把zip替代url中的html，获取到一个zip文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#解压 E:\桌面图片\channel.zip 文件到当前目录 PyCha6-zipfiles 下面</span></span><br><span class="line"><span class="keyword">import</span> zipfile,os,re</span><br><span class="line">f = zipfile.ZipFile(<span class="string">r'E:\桌面图片\channel.zip'</span>,<span class="string">'r'</span>)</span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> f.namelist():</span><br><span class="line">    f.extract(file,<span class="string">r'PC6zipfiles'</span>)</span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line"><span class="comment">#读取解压后目录下所有文件内容</span></span><br><span class="line">comments = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> os.listdir(<span class="string">'PC6zipfiles'</span>):</span><br><span class="line">    <span class="keyword">if</span> i == <span class="string">'readme.txt'</span>:</span><br><span class="line">        <span class="keyword">with</span> open(os.path.join(os.getcwd(),<span class="string">'PC6zipfiles'</span>,i),<span class="string">'r'</span>) <span class="keyword">as</span> txt:</span><br><span class="line">            readme = txt.read()</span><br><span class="line">            hint = re.search(<span class="string">r'(\d)&#123;2,5&#125;'</span>,readme).group()</span><br><span class="line">            comments.append(f.getinfo(<span class="string">'%s.txt'</span>%hint).comment)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    <span class="keyword">for</span> a <span class="keyword">in</span> os.listdir(<span class="string">'PC6zipfiles'</span>):</span><br><span class="line">        <span class="keyword">if</span> a == <span class="string">'%s.txt'</span> % hint:</span><br><span class="line">            <span class="keyword">with</span> open(os.path.join(os.getcwd(),<span class="string">'PC6zipfiles'</span>,a),<span class="string">'r'</span>) <span class="keyword">as</span> text:</span><br><span class="line">                nothing = text.read()</span><br><span class="line">                <span class="keyword">if</span> re.search(<span class="string">r'(\d)&#123;2,5&#125;'</span>,nothing).group():</span><br><span class="line">                    hint = re.search(<span class="string">r'(\d)&#123;2,5&#125;'</span>,nothing).group()</span><br><span class="line">                    comments.append(f.getinfo(<span class="string">'%s.txt'</span>%hint).comment)</span><br><span class="line">                    </span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> comments:</span><br><span class="line">    print(c.decode(<span class="string">'utf-8'</span>),end=<span class="string">''</span>)</span><br></pre></td></tr></table></figure><pre><code>---------------------------------------------------------------------------AttributeError                            Traceback (most recent call last)&lt;ipython-input-4-6122cbca773d&gt; in &lt;module&gt;()     21             with open(os.path.join(os.getcwd(),&apos;PC6zipfiles&apos;,a),&apos;r&apos;) as text:     22                 nothing = text.read()---&gt; 23                 if re.search(r&apos;(\d){2,5}&apos;,nothing).group():     24                     hint = re.search(r&apos;(\d){2,5}&apos;,nothing).group()     25                     comments.append(f.getinfo(&apos;%s.txt&apos;%hint).comment)AttributeError: &apos;NoneType&apos; object has no attribute &apos;group&apos;</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;The first programming riddle on the net&lt;/p&gt;
&lt;h1 id=&quot;Warming-Up&quot;&gt;&lt;a href=&quot;#Warming-Up&quot; class=&quot;headerlink&quot; title=&quot;Warming Up&quot;&gt;&lt;/a&gt;Warming Up&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://www.pythonchallenge.com/pc/def/0.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.pythonchallenge.com/pc/def/0.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;线索：试着改变URL的地址–&amp;gt;把图片中得到的数字输入到URL中&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;print(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;**&lt;span class=&quot;number&quot;&gt;38&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;274877906944
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Riddle" scheme="http://yoursite.com/categories/Riddle/"/>
    
    
      <category term="Solutions" scheme="http://yoursite.com/tags/Solutions/"/>
    
  </entry>
  
  <entry>
    <title>How to Scrape All ETH Addresses from A Certain Telegram Chat</title>
    <link href="http://yoursite.com/2018/05/07/Telegram/"/>
    <id>http://yoursite.com/2018/05/07/Telegram/</id>
    <published>2018-05-06T16:00:00.000Z</published>
    <updated>2018-05-07T08:46:07.202Z</updated>
    
    <content type="html"><![CDATA[<h2 id="First-attempt-Telethon-doesn’t-work"><a href="#First-attempt-Telethon-doesn’t-work" class="headerlink" title="First attempt: Telethon (doesn’t work)"></a>First attempt: Telethon (doesn’t work)</h2><p>Telegram is a popular messaging application. This library is meant to make it easy for you to write Python programs that can interact with Telegram. </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Creating a client</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> telethon <span class="keyword">import</span> TelegramClient</span><br><span class="line"><span class="keyword">import</span> socks</span><br><span class="line"></span><br><span class="line">api_id = <span class="number">240869</span></span><br><span class="line">api_hash= <span class="string">'2e5e8cb9cda41113da881a986271029d'</span></span><br><span class="line"></span><br><span class="line">client = TelegramClient(<span class="string">'sqlite3'</span>,api_id,api_hash,proxy=(socks.SOCKS5,<span class="string">'localhost'</span>,<span class="number">1080</span>))</span><br><span class="line">client.connect()</span><br><span class="line">phone_number = <span class="string">'8613480975957'</span></span><br><span class="line">client.send_code_request(phone_number)</span><br><span class="line">myself = client.sign_in(phone_number,input(<span class="string">'Enter code:'</span>))</span><br></pre></td></tr></table></figure><pre><code>Enter code:5603960942</code></pre><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Doing stuff</span></span><br><span class="line"></span><br><span class="line">Naus = client.get_entity(<span class="string">'t.me/NausGlobal'</span>)</span><br><span class="line">print(Naus)</span><br></pre></td></tr></table></figure><pre><code>Channel(id=1249144664, title=&apos;Naus.io_Global&apos;, photo=ChatPhoto(photo_small=FileLocation(dc_id=5, volume_id=852712166, local_id=188596, secret=6383482124705140361), photo_big=FileLocation(dc_id=5, volume_id=852712166, local_id=188598, secret=7217383776991144713)), date=datetime.utcfromtimestamp(1523907796), version=0, creator=False, left=False, editor=False, broadcast=False, verified=False, megagroup=True, restricted=False, democracy=True, signatures=False, min=False, access_hash=-9112681265137568112, username=&apos;NausGlobal&apos;, restriction_reason=None, admin_rights=None, banned_rights=None, participants_count=None)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"><span class="comment"># -*- coding:utf8 -*-</span></span><br><span class="line"><span class="keyword">import</span> codecs</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">address = <span class="string">r'(0x[a-z0-9A-Z]&#123;40&#125;)'</span></span><br><span class="line">name = <span class="string">r'\[@([a-z0-9A-Z]+)\]'</span></span><br><span class="line">date = <span class="string">r'\d&#123;2&#125;\.\d&#123;2&#125;\.\d&#123;4&#125; \d&#123;2&#125;\:\d&#123;2&#125;\:\d&#123;2&#125;'</span></span><br><span class="line">ID = <span class="string">r', (.+) \['</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">r'telegram.txt'</span>,<span class="string">'r'</span>,encoding=<span class="string">"utf8"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():</span><br><span class="line">        print(line)</span><br><span class="line">        <span class="keyword">if</span> re.search(ID,line):</span><br><span class="line">            <span class="comment">#username = re.search(name,line)</span></span><br><span class="line">            time = re.search(date,line)</span><br><span class="line">            Telid = re.search(ID,line)</span><br><span class="line">            print(<span class="string">'---------------------------'</span>)</span><br><span class="line">            <span class="comment">#print(username.group(1))</span></span><br><span class="line">            print(time.group())</span><br><span class="line">            print(Telid.group(<span class="number">1</span>))</span><br><span class="line">            print(<span class="string">'---------------------------'</span>)</span><br></pre></td></tr></table></figure><pre><code>﻿.....11.03.2018 16:15:50, carl cui [@cuiyysw]: &gt;&gt;upgraded the group to a supergroup&lt;&lt;---------------------------11.03.2018 16:15:50carl cui---------------------------.....11.03.2018 16:18:02, carl cui [@cuiyysw]: &gt;&gt;changed group name to &quot;Naus.io_Global&quot;&lt;&lt;---------------------------11.03.2018 16:18:02carl cui---------------------------.....11.03.2018 23:29:14, carl cui [@cuiyysw]: &gt;&gt;invited 小魔女 灵儿 [@loloplay]&lt;&lt;---------------------------11.03.2018 23:29:14carl cui [@cuiyysw]: &gt;&gt;invited 小魔女 灵儿---------------------------.....12.03.2018 21:58:00, Den: &gt;&gt;joined the group&lt;&lt;.....12.03.2018 21:58:49, Федя [@Ovod13]: &gt;&gt;joined the group&lt;&lt;---------------------------12.03.2018 21:58:49Федя---------------------------12.03.2018 21:59:54, Den: Арим.....12.03.2018 22:00:30, Den: &gt;&gt;left the group&lt;&lt;.....12.03.2018 22:01:07, Nata [@Nataly9900]: &gt;&gt;joined the group&lt;&lt;---------------------------12.03.2018 22:01:07Nata---------------------------.....12.03.2018 22:01:16, Sergey Lizunov [@strahara]: &gt;&gt;joined the group&lt;&lt;---------------------------12.03.2018 22:01:16Sergey Lizunov---------------------------12.03.2018 22:02:03, Sergey Lizunov [@strahara]: 0xfa7c4fe34cEA9289f97bED26f7106AcB3523001F---------------------------12.03.2018 22:02:03Sergey Lizunov---------------------------.....12.03.2018 22:03:47, Van Pham [@vanphamn]: &gt;&gt;joined the group&lt;&lt;---------------------------12.03.2018 22:03:47Van Pham---------------------------12.03.2018 22:03:52, Van Pham [@vanphamn]: 0x4907d01FAD88F4c5F4fF0c6877328b9234FBcef5---------------------------12.03.2018 22:03:52Van Pham---------------------------.....12.03.2018 22:05:44, Денис Назаров [@Astroden]: &gt;&gt;joined the group&lt;&lt;---------------------------12.03.2018 22:05:44Денис Назаров---------------------------.....12.03.2018 22:05:54, SAJIB MAX [@sajibmax113]: &gt;&gt;joined the group&lt;&lt;---------------------------12.03.2018 22:05:54SAJIB MAX---------------------------.....12.03.2018 22:06:00, Jean Nguessan [@Jeanlenoir]: &gt;&gt;joined the group&lt;&lt;---------------------------12.03.2018 22:06:00Jean Nguessan---------------------------.....12.03.2018 22:06:32, vu khuong: &gt;&gt;joined the group&lt;&lt;12.03.2018 22:06:41, vu khuong: 0x2c3c4ED46A54f3107CFDfC9CBf95C4dFAc3487E2.....12.03.2018 22:07:47, Степан Рязанов [@m171pe]: &gt;&gt;joined the group&lt;&lt;---------------------------12.03.2018 22:07:47Степан Рязанов---------------------------12.03.2018 22:07:50, 小魔女 灵儿 [@loloplay]: HI ALL，Thank you for your participation. Our event has just ended. If you are interested in our next NAB token reward, please join our Telegram group or WeChat group for more information. （---------------------------12.03.2018 22:07:50小魔女 灵儿---------------------------.....12.03.2018 22:08:23, 小魔女 灵儿 [@loloplay]: &gt;&gt;unsupported service message type: messageActionPinMessage&lt;&lt;---------------------------12.03.2018 22:08:23小魔女 灵儿---------------------------.....12.03.2018 22:08:38, Sergey Lizunov [@strahara]: &gt;&gt;left the group&lt;&lt;---------------------------12.03.2018 22:08:38Sergey Lizunov---------------------------.....12.03.2018 22:11:02, Andrey Mishin [@Zoar1975]: &gt;&gt;joined the group&lt;&lt;---------------------------12.03.2018 22:11:02Andrey Mishin---------------------------12.03.2018 22:11:18, Andrey Mishin [@Zoar1975]: 0xb72bf806bf1b11d955f84a0871f158322987e3c8---------------------------12.03.2018 22:11:18Andrey Mishin---------------------------.....12.03.2018 22:11:20, raju malakomda [@malakomda]: &gt;&gt;joined the group&lt;&lt;---------------------------12.03.2018 22:11:20raju malakomda---------------------------12.03.2018 22:11:21, SAJIB MAX [@sajibmax113]: thanks---------------------------12.03.2018 22:11:21SAJIB MAX---------------------------</code></pre><h2 id="Second-Attempt-Chrome-extension-to-save-telegram-chat-history-works-well"><a href="#Second-Attempt-Chrome-extension-to-save-telegram-chat-history-works-well" class="headerlink" title="Second Attempt: Chrome extension to save telegram chat history (works well)"></a>Second Attempt: Chrome extension to save telegram chat history (works well)</h2><p>Dumps your Telegram chat history with an active peer to plaintext.<br>Perhaps, many of us like Telegram messenger and use it for conversations with friends. However, we were a bit disappointed by the absence of any sort of easy-accessible “Save Conversation” feature in the messenger. Therefore, we’ve written a Chrome extension for it! More info at <a href="https://github.com/pigpagnet/save-telegram-chat-history" target="_blank" rel="noopener">https://github.com/pigpagnet/save-telegram-chat-history</a>.</p><p><a href="https://chrome.google.com/webstore/detail/save-telegram-chat-histor/kgldnbjoeinkkgpphaaljlfhfdbndfjc?utm_source=www.crx4chrome.com" target="_blank" rel="noopener">https://chrome.google.com/webstore/detail/save-telegram-chat-histor/kgldnbjoeinkkgpphaaljlfhfdbndfjc?utm_source=www.crx4chrome.com</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># test to get name</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">text = <span class="string">r'12.03.2018 22:03:52, Van Pham [@vanphamn]: 0x4907d01FAD88F4c5F4fF0c6877328b9234FBcef5'</span></span><br><span class="line">name = <span class="string">r'\[@([a-z0-9A-Z]+)\]'</span></span><br><span class="line">print(re.search(name,text).group(<span class="number">1</span>))</span><br></pre></td></tr></table></figure><pre><code>vanphamn</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># test to get Eth address</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">text = <span class="string">'''Your Telegram History in "Naus.io_Global [@NausGlobal]"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">.....11.03.2018 16:15:50, carl cui [@cuiyysw]: &gt;&gt;upgraded the group to a supergroup&lt;&lt;</span></span><br><span class="line"><span class="string">.....11.03.2018 16:18:02, carl cui [@cuiyysw]: &gt;&gt;changed group name to "Naus.io_Global"&lt;&lt;</span></span><br><span class="line"><span class="string">.....11.03.2018 23:29:14, carl cui [@cuiyysw]: &gt;&gt;invited 小魔女 灵儿 [@loloplay]&lt;&lt;</span></span><br><span class="line"><span class="string">.....12.03.2018 21:58:00, Den: &gt;&gt;joined the group&lt;&lt;</span></span><br><span class="line"><span class="string">.....12.03.2018 21:58:49, Федя [@Ovod13]: &gt;&gt;joined the group&lt;&lt;</span></span><br><span class="line"><span class="string">12.03.2018 21:59:54, Den: Арим</span></span><br><span class="line"><span class="string">.....12.03.2018 22:00:30, Den: &gt;&gt;left the group&lt;&lt;</span></span><br><span class="line"><span class="string">.....12.03.2018 22:01:07, Nata [@Nataly9900]: &gt;&gt;joined the group&lt;&lt;</span></span><br><span class="line"><span class="string">.....12.03.2018 22:01:16, Sergey Lizunov [@strahara]: &gt;&gt;joined the group&lt;&lt;</span></span><br><span class="line"><span class="string">12.03.2018 22:02:03, Sergey Lizunov [@strahara]: 0xfa7c4fe34cEA9289f97bED26f7106AcB3523001F</span></span><br><span class="line"><span class="string">.....12.03.2018 22:03:47, Van Pham [@vanphamn]: &gt;&gt;joined the group&lt;&lt;</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">content = text.split(<span class="string">'\n'</span>)</span><br><span class="line">address = <span class="string">r'(0x[a-z0-9A-Z]&#123;40&#125;)'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> content:</span><br><span class="line">    <span class="keyword">if</span> re.search(address,i):</span><br><span class="line">            eth = re.search(address,i)</span><br><span class="line">            print(eth)</span><br></pre></td></tr></table></figure><pre><code>&lt;_sre.SRE_Match object; span=(49, 91), match=&apos;0xfa7c4fe34cEA9289f97bED26f7106AcB3523001F&apos;&gt;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># first try</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"><span class="comment"># -*- coding:utf8 -*-</span></span><br><span class="line"><span class="keyword">import</span> codecs</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">address = <span class="string">r'(0x[a-z0-9A-Z]&#123;40&#125;)'</span></span><br><span class="line">name = <span class="string">r'\[@([a-z0-9A-Z]+)\]'</span></span><br><span class="line">date = <span class="string">r'\d&#123;2&#125;\.\d&#123;2&#125;\.\d&#123;4&#125; \d&#123;2&#125;\:\d&#123;2&#125;\:\d&#123;2&#125;'</span></span><br><span class="line">ID = <span class="string">r', (.+) \['</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">r'telegram_group_history__Naus.io_Global [@NausGlobal]_from20180311-1615_to20180504-1504__downloaded2018_05_04--18-22-55.txt'</span>,<span class="string">'r'</span>,encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'telegram20180504.csv'</span>,<span class="string">'w'</span>,encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> w: </span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():</span><br><span class="line">            <span class="keyword">if</span> re.search(address,line) <span class="keyword">and</span> re.search(name,line):</span><br><span class="line">                eth = re.search(address,line).group()</span><br><span class="line">                username = re.search(name,line).group(<span class="number">1</span>)</span><br><span class="line">                time = re.search(date,line).group()</span><br><span class="line">                telid = re.search(ID,line).group(<span class="number">1</span>)</span><br><span class="line">                w.write(<span class="string">'&#123;&#125;,&#123;&#125;,&#123;&#125;,&#123;&#125;\n'</span>.format(time,telid,username,eth))</span><br><span class="line">print(<span class="string">'The End'</span>)</span><br></pre></td></tr></table></figure><pre><code>The End</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># first try has bug in name, it will not get chat of users who have set usernames</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">n1 =<span class="string">'02.05.2018 15:07:00, wu long: 0xb1A45043Ed0aDABc6e2F658BaE0eb8EA4d311294'</span></span><br><span class="line">n2 =<span class="string">'.....02.05.2018 15:08:07, Yasin Kartal [@yasinnkrtl]: &gt;&gt;joined the group&lt;&lt;'</span></span><br><span class="line">name = <span class="string">r',(.+):'</span></span><br><span class="line">print(re.search(name,n1).group(<span class="number">1</span>).strip())</span><br><span class="line">print(re.search(name,n2).group(<span class="number">1</span>).strip())</span><br></pre></td></tr></table></figure><pre><code>wu longYasin Kartal [@yasinnkrtl]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># second try</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"><span class="comment"># -*- coding:utf8 -*-</span></span><br><span class="line"><span class="keyword">import</span> codecs</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">address = <span class="string">r'(0x[a-z0-9A-Z]&#123;40&#125;)'</span></span><br><span class="line">name =  <span class="string">r',(.+):'</span></span><br><span class="line">date = <span class="string">r'\d&#123;2&#125;\.\d&#123;2&#125;\.\d&#123;4&#125; \d&#123;2&#125;\:\d&#123;2&#125;\:\d&#123;2&#125;'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">r'telegram_group_history__Naus.io_Global [@NausGlobal]_from20180311-1615_to20180504-1504__downloaded2018_05_04--18-22-55.txt'</span>,<span class="string">'r'</span>,encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'telegram20180505.csv'</span>,<span class="string">'w'</span>,encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> w: </span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():</span><br><span class="line">            <span class="keyword">if</span> re.search(address,line)<span class="keyword">and</span> re.search(name,line):</span><br><span class="line">                eth = re.search(address,line).group()</span><br><span class="line">                username = re.search(name,line).group(<span class="number">1</span>)</span><br><span class="line">                time = re.search(date,line).group()</span><br><span class="line">                w.write(<span class="string">'&#123;&#125;,&#123;&#125;,&#123;&#125;\n'</span>.format(time,username,eth))</span><br><span class="line">print(<span class="string">'The End'</span>)</span><br></pre></td></tr></table></figure><pre><code>The End</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;First-attempt-Telethon-doesn’t-work&quot;&gt;&lt;a href=&quot;#First-attempt-Telethon-doesn’t-work&quot; class=&quot;headerlink&quot; title=&quot;First attempt: Telethon (doesn’t work)&quot;&gt;&lt;/a&gt;First attempt: Telethon (doesn’t work)&lt;/h2&gt;&lt;p&gt;Telegram is a popular messaging application. This library is meant to make it easy for you to write Python programs that can interact with Telegram. &lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#Creating a client&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; telethon &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; TelegramClient&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; socks&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;api_id = &lt;span class=&quot;number&quot;&gt;240869&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;api_hash= &lt;span class=&quot;string&quot;&gt;&#39;2e5e8cb9cda41113da881a986271029d&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;client = TelegramClient(&lt;span class=&quot;string&quot;&gt;&#39;sqlite3&#39;&lt;/span&gt;,api_id,api_hash,proxy=(socks.SOCKS5,&lt;span class=&quot;string&quot;&gt;&#39;localhost&#39;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1080&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;client.connect()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;phone_number = &lt;span class=&quot;string&quot;&gt;&#39;8613480975957&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;client.send_code_request(phone_number)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myself = client.sign_in(phone_number,input(&lt;span class=&quot;string&quot;&gt;&#39;Enter code:&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;Enter code:5603960942
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Spider" scheme="http://yoursite.com/categories/Spider/"/>
    
    
      <category term="Telegram" scheme="http://yoursite.com/tags/Telegram/"/>
    
  </entry>
  
  <entry>
    <title>Iterable and Iterator</title>
    <link href="http://yoursite.com/2018/05/07/Iterable_Iterator/"/>
    <id>http://yoursite.com/2018/05/07/Iterable_Iterator/</id>
    <published>2018-05-06T16:00:00.000Z</published>
    <updated>2018-05-07T08:52:39.662Z</updated>
    
    <content type="html"><![CDATA[<h2 id="迭代工具"><a href="#迭代工具" class="headerlink" title="迭代工具"></a>迭代工具</h2><p>Python中有一类工具叫做迭代工具，他们能从左至右扫描对象。这包括了for循环、列表解析、in成员关系测试以及map内置函数等。</p><a id="more"></a><h2 id="可迭代对象"><a href="#可迭代对象" class="headerlink" title="可迭代对象"></a>可迭代对象</h2><p>可以用在上述迭代工具环境中，通过一次次迭代不断产生结果的对象。</p><p>可迭代对象分为两大类</p><p>1.实际保存的序列，即列表、元组，字符串；</p><p>2.“不一次性产生所有结果列表，而是可以在for循环中按需一次产生一个结果的对象”。</p><p>如：range函数返回值、zip函数返回值、enumerate函数返回值等等，与实际序列相对应，这个叫做按需产生对象的虚拟序列。</p><h2 id="迭代器"><a href="#迭代器" class="headerlink" title="迭代器"></a>迭代器</h2><p>可迭代对象支持内置函数iter，通过对可迭代对象调用iter函数，会返回一个迭代器，而“迭代器”支持内置函数next，通过不断对其调用next方法，会依次前进到序列中的下一个元素并将其返回，最后到达一系列结果的末尾时，会引发StopIteration异常。</p><p>补充说明一点，对迭代器调用iter方法，则会返回迭代器自身。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">L = [<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line">I = iter(L)</span><br><span class="line">print(iter(L))</span><br><span class="line">print(I <span class="keyword">is</span> L)</span><br><span class="line">print(I <span class="keyword">is</span> iter(I))</span><br></pre></td></tr></table></figure><pre><code>&lt;list_iterator object at 0x000001F3CB288EB8&gt;FalseTrue</code></pre><h2 id="迭代过程"><a href="#迭代过程" class="headerlink" title="迭代过程"></a>迭代过程</h2><p>当任何可迭代对象传入到for循环或其他迭代工具中进行遍历时，迭代工具都是先通过iter函数获得与可迭代对象对应的迭代器，然后再对迭代器调用next函数，不断的依次获取元素，并在捕捉到StopIteration异常时确定完成迭代，这就是完整的迭代过程。这也称之为“迭代协议”</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">L = [<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line">I = iter(L)</span><br><span class="line">print(next(I))</span><br><span class="line">print(next(I))</span><br><span class="line">print(next(I))</span><br><span class="line"><span class="comment"># print(next(I)) #报错 StopIteration</span></span><br></pre></td></tr></table></figure><pre><code>234</code></pre><p>与手动迭代的示例过程相对应，下面是用for循环进行自动迭代的过程</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">L = [<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> L:</span><br><span class="line">    print(x)</span><br></pre></td></tr></table></figure><pre><code>234</code></pre><h2 id="文件对象"><a href="#文件对象" class="headerlink" title="文件对象"></a>文件对象</h2><p>open函数返回的已打开的文件对象，也是可以一行一行的读取，直至文件结束，那很显然，他也是可迭代对象。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">f = open(<span class="string">'myfile.txt'</span>)</span><br><span class="line">print(f <span class="keyword">is</span> iter(f))<span class="comment"># 不管f是迭代对象还是迭代器，iter(f) 返回的是迭代器</span></span><br><span class="line">print(next(f)) <span class="comment"># “迭代器”支持内置函数next,说明文件对象是迭代器</span></span><br><span class="line">print(next(f))</span><br><span class="line">print(next(f))</span><br></pre></td></tr></table></figure><pre><code>Truehello text filegoodbyt text filehahahahah</code></pre><p>文件对象既是迭代器，又是可迭代对象。</p><p>reference:</p><p><a href="http://python.jobbole.com/85240/" target="_blank" rel="noopener">http://python.jobbole.com/85240/</a></p><p><a href="http://python.jobbole.com/86258/" target="_blank" rel="noopener">http://python.jobbole.com/86258/</a></p><p><a href="https://zhuanlan.zhihu.com/p/24376869" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/24376869</a></p><p><a href="https://zhuanlan.zhihu.com/p/32508947" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/32508947</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;迭代工具&quot;&gt;&lt;a href=&quot;#迭代工具&quot; class=&quot;headerlink&quot; title=&quot;迭代工具&quot;&gt;&lt;/a&gt;迭代工具&lt;/h2&gt;&lt;p&gt;Python中有一类工具叫做迭代工具，他们能从左至右扫描对象。这包括了for循环、列表解析、in成员关系测试以及map内置函数等。&lt;/p&gt;
    
    </summary>
    
      <category term="Topics" scheme="http://yoursite.com/categories/Topics/"/>
    
    
      <category term="iterable" scheme="http://yoursite.com/tags/iterable/"/>
    
      <category term="iterator" scheme="http://yoursite.com/tags/iterator/"/>
    
  </entry>
  
  <entry>
    <title>How to find common keys in dict</title>
    <link href="http://yoursite.com/2018/05/07/dict_commonkey/"/>
    <id>http://yoursite.com/2018/05/07/dict_commonkey/</id>
    <published>2018-05-06T16:00:00.000Z</published>
    <updated>2018-05-07T08:46:24.697Z</updated>
    
    <content type="html"><![CDATA[<h2 id="字典生产式"><a href="#字典生产式" class="headerlink" title="字典生产式"></a>字典生产式</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint,sample </span><br><span class="line"><span class="comment"># random.sample(sequence, k)，从指定序列中随机获取指定长度的片断。sample函数不会修改原有序列。</span></span><br><span class="line">s1 = &#123;x: randint(<span class="number">3</span>,<span class="number">4</span>) <span class="keyword">for</span> x <span class="keyword">in</span> sample(<span class="string">'abcdef'</span>,randint(<span class="number">4</span>,<span class="number">6</span>))&#125;</span><br><span class="line">s2 = &#123;x: randint(<span class="number">3</span>,<span class="number">4</span>) <span class="keyword">for</span> x <span class="keyword">in</span> sample(<span class="string">'abcdef'</span>,randint(<span class="number">4</span>,<span class="number">6</span>))&#125;</span><br><span class="line">s3 = &#123;x: randint(<span class="number">3</span>,<span class="number">4</span>) <span class="keyword">for</span> x <span class="keyword">in</span> sample(<span class="string">'abcdef'</span>,randint(<span class="number">4</span>,<span class="number">6</span>))&#125;</span><br><span class="line">print(s1)</span><br><span class="line">print(s2)</span><br><span class="line">print(s3)</span><br></pre></td></tr></table></figure><pre><code>{&apos;d&apos;: 4, &apos;a&apos;: 3, &apos;e&apos;: 3, &apos;f&apos;: 4}{&apos;c&apos;: 4, &apos;b&apos;: 3, &apos;e&apos;: 3, &apos;f&apos;: 4}{&apos;e&apos;: 3, &apos;c&apos;: 4, &apos;d&apos;: 3, &apos;a&apos;: 3}</code></pre><a id="more"></a><h2 id="方法一：通过if-找到每个字典的公共键"><a href="#方法一：通过if-找到每个字典的公共键" class="headerlink" title="方法一：通过if 找到每个字典的公共键"></a>方法一：通过if 找到每个字典的公共键</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">common_key = [i <span class="keyword">for</span> i <span class="keyword">in</span> s1 <span class="keyword">if</span> i <span class="keyword">in</span> s2 <span class="keyword">and</span> i <span class="keyword">in</span> s3]</span><br><span class="line">print(common_key)</span><br><span class="line"></span><br><span class="line">key = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s1:</span><br><span class="line">    <span class="keyword">if</span> i <span class="keyword">in</span> s2 <span class="keyword">and</span> i <span class="keyword">in</span> s3:</span><br><span class="line">        key.append(i)</span><br><span class="line">print(key)</span><br></pre></td></tr></table></figure><pre><code>[&apos;e&apos;][&apos;e&apos;]</code></pre><h2 id="方法二：用集合set的数学意义上的交集、并集"><a href="#方法二：用集合set的数学意义上的交集、并集" class="headerlink" title="方法二：用集合set的数学意义上的交集、并集"></a>方法二：用集合set的数学意义上的交集、并集</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#.keys() 返回的是一个set-like 对象，所以set具备的集合计算也可以用</span></span><br><span class="line">common_key = s1.keys()&amp;s2.keys()&amp;s3.keys()</span><br><span class="line">print(common_key)</span><br></pre></td></tr></table></figure><pre><code>{&apos;e&apos;}</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#把多个字典合并到一起</span></span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">This PEP proposes to change the .keys(), .values() and .items() methods of the built-in dict type </span></span><br><span class="line"><span class="string">to return a set-like or unordered container object whose contents are </span></span><br><span class="line"><span class="string">derived from the underlying dictionary rather than a list which is a </span></span><br><span class="line"><span class="string">copy of the keys, etc</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="comment"># 其中.keys().items() 返回的是一个set-like 对象，所以set具备的集合计算也可以用</span></span><br><span class="line">help(dict.keys)</span><br><span class="line">help(dict.values)</span><br><span class="line">help(dict.items)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用 .keys(), .items()方法键，键值对并集，交集，差集</span></span><br><span class="line">print(s1.keys())  <span class="comment">#返回一个字典所有的键</span></span><br><span class="line">print(s1.keys()|s2.keys()|s3.keys()) <span class="comment"># 并集</span></span><br><span class="line">print(s1.keys()&amp;s2.keys()&amp;s3.keys()) <span class="comment"># 交集</span></span><br><span class="line"></span><br><span class="line">print(s1.items()) <span class="comment">#返回一个字典所有的键值对,键值对的交集要求键和值都一样</span></span><br><span class="line">print(s1.items()&amp;s2.items()&amp;s3.items()) <span class="comment">#交集</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 用 class dict(iterable, **kwarg) 创建一个并集字典,会影响相同键不同值的项  </span></span><br><span class="line">union = dict(s1,**s2)  </span><br><span class="line"><span class="keyword">print</span> (union)</span><br></pre></td></tr></table></figure><pre><code>Help on method_descriptor:keys(...)    D.keys() -&gt; a set-like object providing a view on D&apos;s keysHelp on method_descriptor:values(...)    D.values() -&gt; an object providing a view on D&apos;s valuesHelp on method_descriptor:items(...)    D.items() -&gt; a set-like object providing a view on D&apos;s itemsdict_keys([&apos;d&apos;, &apos;a&apos;, &apos;e&apos;, &apos;f&apos;]){&apos;e&apos;, &apos;d&apos;, &apos;a&apos;, &apos;f&apos;, &apos;c&apos;, &apos;b&apos;}{&apos;e&apos;}dict_items([(&apos;d&apos;, 4), (&apos;a&apos;, 3), (&apos;e&apos;, 3), (&apos;f&apos;, 4)]){(&apos;e&apos;, 3)}{&apos;d&apos;: 4, &apos;a&apos;: 3, &apos;e&apos;: 3, &apos;f&apos;: 4, &apos;c&apos;: 4, &apos;b&apos;: 3}</code></pre><h2 id="方法三：适用于多个字典"><a href="#方法三：适用于多个字典" class="headerlink" title="方法三：适用于多个字典"></a>方法三：适用于多个字典</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#第一步用 map 函数返回所有字典所有的键</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">map()函数接收两个参数，一个是函数，一个是Iterable，</span></span><br><span class="line"><span class="string">map将传入的函数依次作用到序列的每个元素，并把结果作为新的Iterator返回。</span></span><br><span class="line"><span class="string">由于结果r是一个Iterator，Iterator是惰性序列，</span></span><br><span class="line"><span class="string">因此通过list()函数让它把整个序列都计算出来并返回一个list。</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line">s = [s1,s2,s3]</span><br><span class="line">r = map(<span class="keyword">lambda</span> x:x.keys(),s)</span><br><span class="line">r1 = map(dict.keys,s)  <span class="comment"># r 和 r1 是同等效果，得出讨论函数与方法的区别,dict.keys是函数  </span></span><br><span class="line">print(list(r1))</span><br><span class="line"><span class="comment"># 用 reduce 函数算出前一项与后一项的交集</span></span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">reduce把一个函数作用在一个序列[x1, x2, x3, ...]上，这个函数必须接收两个参数，</span></span><br><span class="line"><span class="string">reduce把结果继续和序列的下一个元素做累积计算</span></span><br><span class="line"><span class="string">reduce(f, [x1, x2, x3, x4]) = f(f(f(x1, x2), x3), x4)</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line">print(reduce(<span class="keyword">lambda</span> a,b:a&amp;b,r))</span><br><span class="line"><span class="comment"># 前面如果有print把r1这个 Iterator 序列全部打出来，r1里面就是空的，所以这里如果用r1就会报错</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(list(r1)) <span class="comment">#空序列，因为前面print完了</span></span><br><span class="line"></span><br><span class="line">print(reduce(<span class="keyword">lambda</span> a,b:a&amp;b,r1))</span><br></pre></td></tr></table></figure><pre><code>[dict_keys([&apos;d&apos;, &apos;a&apos;, &apos;e&apos;, &apos;f&apos;]), dict_keys([&apos;c&apos;, &apos;b&apos;, &apos;e&apos;, &apos;f&apos;]), dict_keys([&apos;e&apos;, &apos;c&apos;, &apos;d&apos;, &apos;a&apos;])]{&apos;e&apos;}[][]---------------------------------------------------------------------------TypeError                                 Traceback (most recent call last)&lt;ipython-input-73-b7dcf2afc47f&gt; in &lt;module&gt;()     32 print(list(r1)) #空序列，因为前面print完了     33 ---&gt; 34 print(reduce(lambda a,b:a&amp;b,r1))     35      36 TypeError: reduce() of empty sequence with no initial value</code></pre><h2 id="函数与方法的区别"><a href="#函数与方法的区别" class="headerlink" title="函数与方法的区别"></a>函数与方法的区别</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#函数与方法的区别  </span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">在Python中，对这两个东西有明确的规定：</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">函数function —— A series of statements which returns some value to a caller. </span></span><br><span class="line"><span class="string">It can also be passed zero or more arguments which may be used in the execution </span></span><br><span class="line"><span class="string">of the body.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">方法method —— A function which is defined inside a class body. If called as an </span></span><br><span class="line"><span class="string">attribute of an instance of that class, the method will get the instance object as </span></span><br><span class="line"><span class="string">its first argument (which is usually called self).</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">与类和实例无绑定关系的function都属于函数（function）；</span></span><br><span class="line"><span class="string">与类和实例有绑定关系的function都属于方法（method）。</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="comment">#函数与方法 ？？？</span></span><br><span class="line">s1.keys() == dict.keys(s1)</span><br><span class="line"><span class="comment">#(方法)s1.keys() == dict.keys(s1)(函数)？？？'</span></span><br></pre></td></tr></table></figure><pre><code>True</code></pre><h2 id="和-符号"><a href="#和-符号" class="headerlink" title="*和**符号"></a>*和**符号</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">在python中，当*和**符号出现在函数定义的参数中时，表示任意数目参数收集。*arg表示任意多个无名参数，类型为tuple;**kwargs表示关键字参数，为dict，使用时需将*arg放在**kwargs之前，否则会有“SyntaxError: non-keyword arg after keyword arg”的语法错误</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># *允许你传入0个或任意个参数，这些可变参数在函数调用时自动组装为一个tuple。</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(a,*args)</span>:</span></span><br><span class="line">    print(args)</span><br><span class="line"></span><br><span class="line">f(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">b = (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)</span><br><span class="line">c = range(<span class="number">1</span>,<span class="number">6</span>)</span><br><span class="line">print(a)</span><br><span class="line">print(b)</span><br><span class="line">print(c)</span><br><span class="line">print(*a)</span><br><span class="line">print(*b)</span><br><span class="line">print(*c)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calc</span><span class="params">(*numbers)</span>:</span></span><br><span class="line">    sum = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> numbers:</span><br><span class="line">        sum = sum + n * n</span><br><span class="line">    print(sum)</span><br><span class="line"></span><br><span class="line">calc(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># **,关键字参数允许你传入0个或任意个含参数名的参数,这些关键字参数在函数内部自动组装为一个dict。</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">d</span><span class="params">(**kargs)</span>:</span></span><br><span class="line">    print(kargs)</span><br><span class="line">    </span><br><span class="line">d(a=<span class="number">1</span>,b=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#在函数头部能混合一般参数、*参数以及**去实现更加灵活的调用方式。</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">h</span><span class="params">(a,*args,**kargs)</span>:</span></span><br><span class="line">    print(a,args,kargs)</span><br><span class="line"></span><br><span class="line">h(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,x=<span class="number">4</span>,y=<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">person</span><span class="params">(name,age,**kw)</span>:</span></span><br><span class="line">    print(<span class="string">'name:'</span>,name,<span class="string">'age:'</span>,age,<span class="string">'other:'</span>,kw)</span><br><span class="line">    </span><br><span class="line">person(<span class="string">'Adam'</span>, <span class="number">45</span>, gender=<span class="string">'M'</span>, job=<span class="string">'Engineer'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">上面是在函数定义的时候写的*和**形式，那反过来，如果*和**语法出现在函数调用中又会如何呢？他会解包参数的集合。例如，我们在调用函数时能够使用*语法，在这种情况下，它与函数定义的意思相反，他会解包参数的集合，而不是创建参数的集合。</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#通过一个元组给一个函数传递四个参数，并且让python将它们解包成不同的参数。</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(a,b,c,d)</span>:</span></span><br><span class="line">    print(a,b,c,d)</span><br><span class="line"></span><br><span class="line">a = (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line">func(*a)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果已经有一个list或者tuple，在函数调用时，在参数前加*，把list/tuple/range序列中的元素一个一个传到函数里面</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calc</span><span class="params">(*numbers)</span>:</span></span><br><span class="line">    sum = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> numbers:</span><br><span class="line">        sum = sum + n * n</span><br><span class="line">    print(sum)</span><br><span class="line"></span><br><span class="line">num = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line">calc(*num)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#在函数调用时，**会以键/值对的形式解包一个字典，使其成为独立的关键字参数。</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">person</span><span class="params">(name,age,**kw)</span>:</span></span><br><span class="line">    print(<span class="string">'name:'</span>,name,<span class="string">'age:'</span>,age,<span class="string">'other:'</span>,kw)</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="comment">#如果已经有一个dict,在参数前加**，把该dict的所有key-value用转换为关键字参数传进去,</span></span><br><span class="line">extra = &#123;<span class="string">'city'</span>: <span class="string">'Beijing'</span>, <span class="string">'job'</span>: <span class="string">'Engineer'</span>&#125;</span><br><span class="line">person(<span class="string">'Jack'</span>, <span class="number">24</span>, **extra)</span><br></pre></td></tr></table></figure><pre><code>(2, 3, 4)[1, 2, 3, 4, 5](1, 2, 3, 4, 5)range(1, 6)1 2 3 4 51 2 3 4 51 2 3 4 530{&apos;a&apos;: 1, &apos;b&apos;: 2}1 (2, 3) {&apos;x&apos;: 4, &apos;y&apos;: 5}name: Adam age: 45 other: {&apos;gender&apos;: &apos;M&apos;, &apos;job&apos;: &apos;Engineer&apos;}1 2 3 430name: Jack age: 24 other: {&apos;city&apos;: &apos;Beijing&apos;, &apos;job&apos;: &apos;Engineer&apos;}</code></pre><h2 id="创建字典的5种方法"><a href="#创建字典的5种方法" class="headerlink" title="创建字典的5种方法"></a>创建字典的5种方法</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'''在python中，这两个是python中的可变参数，*arg表示任意多个无名参数，类型为tuple;**kwargs表示关键字参数，为dict，使用时需将*arg放在**kwargs之前，否则会有“SyntaxError: non-keyword arg after keyword arg”的语法错误</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="comment">#创建字典的5种方法</span></span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">class dict(**kwarg)</span></span><br><span class="line"><span class="string">class dict(mapping, **kwarg)</span></span><br><span class="line"><span class="string">class dict(iterable, **kwarg)</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#创建一个空字典</span></span><br><span class="line">empty_dict = dict() </span><br><span class="line">print(empty_dict)</span><br><span class="line"></span><br><span class="line"><span class="comment">#用**kwargs可变参数传入关键字创建字典</span></span><br><span class="line">a = dict(one=<span class="number">1</span>,two=<span class="number">2</span>,three=<span class="number">3</span>) </span><br><span class="line">print(a)</span><br><span class="line"></span><br><span class="line"><span class="comment">#传入映射对象</span></span><br><span class="line">b = dict(zip([<span class="string">'one'</span>,<span class="string">'two'</span>,<span class="string">'three'</span>],[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]))</span><br><span class="line">print(list(zip([<span class="string">'one'</span>,<span class="string">'two'</span>,<span class="string">'three'</span>],[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])))</span><br><span class="line">print(b)</span><br><span class="line"></span><br><span class="line"><span class="comment">#传入可迭代对象</span></span><br><span class="line">c = dict([(<span class="string">'one'</span>, <span class="number">1</span>), (<span class="string">'two'</span>, <span class="number">2</span>), (<span class="string">'three'</span>, <span class="number">3</span>)])</span><br><span class="line">print(c)</span><br><span class="line"></span><br><span class="line">c1 = dict([(<span class="string">'one'</span>, <span class="number">1</span>), (<span class="string">'two'</span>, <span class="number">2</span>), (<span class="string">'three'</span>, <span class="number">3</span>),(<span class="string">'three'</span>, <span class="number">4</span>),(<span class="string">'three'</span>, <span class="number">5</span>)])</span><br><span class="line">print(c1)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">可迭代对象中的每一项自身必须是可迭代的，并且每一项只能有两个对象。第一个对象成为新字典的键，第二个对象成为其键对应的值。如果键有重复，其值为最后重复项的值。</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#传入字典创建字典</span></span><br><span class="line">d = dict(&#123;<span class="string">'one'</span>: <span class="number">1</span>, <span class="string">'two'</span>: <span class="number">2</span>, <span class="string">'three'</span>: <span class="number">3</span>&#125;)</span><br><span class="line">print(d)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(a == b == c == d)</span><br></pre></td></tr></table></figure><pre><code>{}{&apos;one&apos;: 1, &apos;two&apos;: 2, &apos;three&apos;: 3}[(&apos;one&apos;, 1), (&apos;two&apos;, 2), (&apos;three&apos;, 3)]{&apos;one&apos;: 1, &apos;two&apos;: 2, &apos;three&apos;: 3}{&apos;one&apos;: 1, &apos;two&apos;: 2, &apos;three&apos;: 3}{&apos;one&apos;: 1, &apos;two&apos;: 2, &apos;three&apos;: 5}{&apos;one&apos;: 1, &apos;two&apos;: 2, &apos;three&apos;: 3}True</code></pre><h2 id="获取字典中值最大的项"><a href="#获取字典中值最大的项" class="headerlink" title="获取字典中值最大的项"></a>获取字典中值最大的项</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#获取字典中值最大的项</span></span><br><span class="line"></span><br><span class="line">a  = &#123;<span class="string">'a'</span>: <span class="number">4</span>, <span class="string">'b'</span>: <span class="number">3</span>, <span class="string">'d'</span>: <span class="number">3</span>, <span class="string">'e'</span>: <span class="number">4</span>, <span class="string">'c'</span>: <span class="number">3</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#max()函数</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">m = max(a.values())</span><br><span class="line">print(m)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用Counter.most_common方法</span></span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line">c = Counter(a)</span><br><span class="line">print(c)</span><br><span class="line">print(c.most_common(<span class="number">1</span>))</span><br></pre></td></tr></table></figure><pre><code>4Counter({&apos;a&apos;: 4, &apos;e&apos;: 4, &apos;b&apos;: 3, &apos;d&apos;: 3, &apos;c&apos;: 3})[(&apos;a&apos;, 4)]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dir(a)</span><br></pre></td></tr></table></figure><pre><code>[&apos;__class__&apos;, &apos;__contains__&apos;, &apos;__delattr__&apos;, &apos;__delitem__&apos;, &apos;__dir__&apos;, &apos;__doc__&apos;, &apos;__eq__&apos;, &apos;__format__&apos;, &apos;__ge__&apos;, &apos;__getattribute__&apos;, &apos;__getitem__&apos;, &apos;__gt__&apos;, &apos;__hash__&apos;, &apos;__init__&apos;, &apos;__init_subclass__&apos;, &apos;__iter__&apos;, &apos;__le__&apos;, &apos;__len__&apos;, &apos;__lt__&apos;, &apos;__ne__&apos;, &apos;__new__&apos;, &apos;__reduce__&apos;, &apos;__reduce_ex__&apos;, &apos;__repr__&apos;, &apos;__setattr__&apos;, &apos;__setitem__&apos;, &apos;__sizeof__&apos;, &apos;__str__&apos;, &apos;__subclasshook__&apos;, &apos;clear&apos;, &apos;copy&apos;, &apos;fromkeys&apos;, &apos;get&apos;, &apos;items&apos;, &apos;keys&apos;, &apos;pop&apos;, &apos;popitem&apos;, &apos;setdefault&apos;, &apos;update&apos;, &apos;values&apos;]</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;字典生产式&quot;&gt;&lt;a href=&quot;#字典生产式&quot; class=&quot;headerlink&quot; title=&quot;字典生产式&quot;&gt;&lt;/a&gt;字典生产式&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; random &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; randint,sample &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# random.sample(sequence, k)，从指定序列中随机获取指定长度的片断。sample函数不会修改原有序列。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s1 = &amp;#123;x: randint(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; sample(&lt;span class=&quot;string&quot;&gt;&#39;abcdef&#39;&lt;/span&gt;,randint(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;))&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s2 = &amp;#123;x: randint(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; sample(&lt;span class=&quot;string&quot;&gt;&#39;abcdef&#39;&lt;/span&gt;,randint(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;))&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s3 = &amp;#123;x: randint(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; sample(&lt;span class=&quot;string&quot;&gt;&#39;abcdef&#39;&lt;/span&gt;,randint(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;))&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(s1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(s2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(s3)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;{&amp;apos;d&amp;apos;: 4, &amp;apos;a&amp;apos;: 3, &amp;apos;e&amp;apos;: 3, &amp;apos;f&amp;apos;: 4}
{&amp;apos;c&amp;apos;: 4, &amp;apos;b&amp;apos;: 3, &amp;apos;e&amp;apos;: 3, &amp;apos;f&amp;apos;: 4}
{&amp;apos;e&amp;apos;: 3, &amp;apos;c&amp;apos;: 4, &amp;apos;d&amp;apos;: 3, &amp;apos;a&amp;apos;: 3}
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Skills" scheme="http://yoursite.com/categories/Skills/"/>
    
    
      <category term="commonkey" scheme="http://yoursite.com/tags/commonkey/"/>
    
  </entry>
  
  <entry>
    <title>How to sort value in dict</title>
    <link href="http://yoursite.com/2018/05/07/sort_value_in_dict/"/>
    <id>http://yoursite.com/2018/05/07/sort_value_in_dict/</id>
    <published>2018-05-06T16:00:00.000Z</published>
    <updated>2018-05-07T08:53:38.423Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line"><span class="comment">#建一个字典</span></span><br><span class="line">data = &#123;x: randint(<span class="number">60</span>,<span class="number">100</span>) <span class="keyword">for</span> x <span class="keyword">in</span> <span class="string">'xyzabc'</span>&#125; <span class="comment">#字典推导式</span></span><br><span class="line">print(data)</span><br><span class="line"><span class="comment">#</span></span><br><span class="line">sorted(data)</span><br></pre></td></tr></table></figure><pre><code>{&apos;x&apos;: 74, &apos;y&apos;: 90, &apos;z&apos;: 64, &apos;a&apos;: 79, &apos;b&apos;: 79, &apos;c&apos;: 99}[&apos;a&apos;, &apos;b&apos;, &apos;c&apos;, &apos;x&apos;, &apos;y&apos;, &apos;z&apos;]</code></pre><a id="more"></a><h2 id="第一种方法-sorted"><a href="#第一种方法-sorted" class="headerlink" title="第一种方法 sorted"></a>第一种方法 sorted</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#第一种方法 sorted</span></span><br><span class="line">v = sorted(data.items(),key = <span class="keyword">lambda</span> x:x[<span class="number">1</span>])</span><br><span class="line">v</span><br></pre></td></tr></table></figure><pre><code>[(&apos;z&apos;, 64), (&apos;x&apos;, 74), (&apos;a&apos;, 79), (&apos;b&apos;, 79), (&apos;y&apos;, 90), (&apos;c&apos;, 99)]</code></pre><h2 id="第二种方法-zip-sorted"><a href="#第二种方法-zip-sorted" class="headerlink" title="第二种方法 zip+sorted"></a>第二种方法 zip+sorted</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#第二种方法 zip+sorted</span></span><br><span class="line"></span><br><span class="line">n = data.keys()</span><br><span class="line">s = data.values()</span><br><span class="line">i = data.items()</span><br></pre></td></tr></table></figure><pre><code>dict_items([(&apos;x&apos;, 74), (&apos;y&apos;, 90), (&apos;z&apos;, 64), (&apos;a&apos;, 79), (&apos;b&apos;, 79), (&apos;c&apos;, 99)])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zip(s,n)</span><br></pre></td></tr></table></figure><pre><code>&lt;zip at 0x10d40bf08&gt;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">l = list(zip(data.values(),data.keys()))</span><br><span class="line">l</span><br></pre></td></tr></table></figure><pre><code>[(74, &apos;x&apos;), (90, &apos;y&apos;), (64, &apos;z&apos;), (79, &apos;a&apos;), (79, &apos;b&apos;), (99, &apos;c&apos;)]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sorted(l)</span><br></pre></td></tr></table></figure><pre><code>[(64, &apos;z&apos;), (74, &apos;x&apos;), (79, &apos;a&apos;), (79, &apos;b&apos;), (90, &apos;y&apos;), (99, &apos;c&apos;)]</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; random &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; randint&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#建一个字典&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;data = &amp;#123;x: randint(&lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;xyzabc&#39;&lt;/span&gt;&amp;#125; &lt;span class=&quot;comment&quot;&gt;#字典推导式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(data)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sorted(data)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;{&amp;apos;x&amp;apos;: 74, &amp;apos;y&amp;apos;: 90, &amp;apos;z&amp;apos;: 64, &amp;apos;a&amp;apos;: 79, &amp;apos;b&amp;apos;: 79, &amp;apos;c&amp;apos;: 99}





[&amp;apos;a&amp;apos;, &amp;apos;b&amp;apos;, &amp;apos;c&amp;apos;, &amp;apos;x&amp;apos;, &amp;apos;y&amp;apos;, &amp;apos;z&amp;apos;]
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Skills" scheme="http://yoursite.com/categories/Skills/"/>
    
    
      <category term="dict" scheme="http://yoursite.com/tags/dict/"/>
    
      <category term="value" scheme="http://yoursite.com/tags/value/"/>
    
  </entry>
  
  <entry>
    <title>What does named tuple do?</title>
    <link href="http://yoursite.com/2018/05/07/named_tuple/"/>
    <id>http://yoursite.com/2018/05/07/named_tuple/</id>
    <published>2018-05-06T16:00:00.000Z</published>
    <updated>2018-05-07T08:52:03.157Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">student=(<span class="string">'Jim'</span>,<span class="string">'16'</span>,<span class="string">'male'</span>,<span class="string">'Jim123@qq.com'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># name</span></span><br><span class="line">print(student[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># age</span></span><br><span class="line">print(student[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># sex</span></span><br><span class="line">print(student[<span class="number">2</span>])</span><br><span class="line">    </span><br><span class="line"><span class="comment">#email</span></span><br><span class="line">print(student[<span class="number">3</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">#用元祖的下标索引来访问元组中的值，0，1，2，3名字没有意义</span></span><br></pre></td></tr></table></figure><pre><code>Jim16maleJim123@qq.com</code></pre><a id="more"></a>   <h2 id="方法一：利用对下标索引赋值，达到有意义"><a href="#方法一：利用对下标索引赋值，达到有意义" class="headerlink" title="方法一：利用对下标索引赋值，达到有意义"></a>方法一：利用对下标索引赋值，达到有意义</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方法一：利用对下标索引赋值，达到有意义</span></span><br><span class="line">NAME,AGE,SEX,EMAIL = range(<span class="number">0</span>,<span class="number">4</span>)</span><br><span class="line"><span class="comment"># name</span></span><br><span class="line">print(student[NAME])</span><br><span class="line"></span><br><span class="line"><span class="comment"># age</span></span><br><span class="line">print(student[AGE])</span><br><span class="line"></span><br><span class="line"><span class="comment"># sex</span></span><br><span class="line">print(student[SEX])</span><br><span class="line">    </span><br><span class="line"><span class="comment">#email</span></span><br><span class="line">print(student[EMAIL])</span><br></pre></td></tr></table></figure><pre><code>Jim16maleJim123@qq.com</code></pre><h2 id="方法二：collections-模块-namedtuple-方法"><a href="#方法二：collections-模块-namedtuple-方法" class="headerlink" title="方法二：collections 模块 namedtuple 方法"></a>方法二：collections 模块 namedtuple 方法</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方法二：collections 模块 namedtuple 方法</span></span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> namedtuple</span><br><span class="line">student = namedtuple(<span class="string">'student'</span>,[<span class="string">'name'</span>,<span class="string">'age'</span>,<span class="string">'sex'</span>,<span class="string">'email'</span>])</span><br><span class="line">s = student(<span class="string">'Jim'</span>,<span class="string">'16'</span>,<span class="string">'male'</span>,<span class="string">'Jim123@qq.com'</span>)</span><br><span class="line">s.name</span><br></pre></td></tr></table></figure><pre><code>&apos;Jim&apos;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s.sex</span><br></pre></td></tr></table></figure><pre><code>&apos;male&apos;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s.age</span><br></pre></td></tr></table></figure><pre><code>&apos;16&apos;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s.email</span><br></pre></td></tr></table></figure><pre><code>&apos;Jim123@qq.com&apos;</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;student=(&lt;span class=&quot;string&quot;&gt;&#39;Jim&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;16&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;male&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;Jim123@qq.com&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# name&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(student[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# age&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(student[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# sex&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(student[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#email&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(student[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#用元祖的下标索引来访问元组中的值，0，1，2，3名字没有意义&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;Jim
16
male
Jim123@qq.com
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Skills" scheme="http://yoursite.com/categories/Skills/"/>
    
    
      <category term="Skills" scheme="http://yoursite.com/tags/Skills/"/>
    
  </entry>
  
  <entry>
    <title>Shallowcopy and Deepcopy</title>
    <link href="http://yoursite.com/2018/04/27/shallowcopy_deepcopy/"/>
    <id>http://yoursite.com/2018/04/27/shallowcopy_deepcopy/</id>
    <published>2018-04-26T16:00:00.000Z</published>
    <updated>2018-05-07T08:48:17.012Z</updated>
    
    <content type="html"><![CDATA[<h2 id="赋值操作认识"><a href="#赋值操作认识" class="headerlink" title="赋值操作认识"></a>赋值操作认识</h2><p>1.赋值是将一个对象的地址赋值给一个变量，让变量指向该地址</p><p>2.修改不可变对象（str、tuple）需要开辟新的空间</p><p>3修改可变对象（list等）不需要开辟新的空间</p><h2 id="浅拷贝（-新瓶装旧酒-）"><a href="#浅拷贝（-新瓶装旧酒-）" class="headerlink" title="浅拷贝（ 新瓶装旧酒 ）"></a>浅拷贝（ 新瓶装旧酒 ）</h2><p>浅拷贝仅仅复制了容器中元素的地址</p><p>浅拷贝是在另一块地址中创建一个新的变量或容器，但是容器内的元素的地址均是源对象的元素的地址的拷贝。也就是说新的容器中指向了旧的元素（ 新瓶装旧酒 ）</p><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="string">'hello'</span>,[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]]</span><br><span class="line">b = a[:] <span class="comment">#浅拷贝</span></span><br><span class="line">print(<span class="string">'源对象a--&#123;&#125;:&#123;&#125;'</span>.format(a,[id(x) <span class="keyword">for</span> x <span class="keyword">in</span> a]))</span><br><span class="line">print(<span class="string">'浅拷贝对象b--&#123;&#125;:&#123;&#125;'</span>.format(b,[id(x) <span class="keyword">for</span> x <span class="keyword">in</span> b]))</span><br><span class="line">print(<span class="string">'修改浅拷贝对象b'</span>)</span><br><span class="line">b[<span class="number">0</span>] = <span class="string">'world'</span></span><br><span class="line">b[<span class="number">1</span>].append(<span class="number">4</span>)</span><br><span class="line">print(<span class="string">'修改后源对象a--&#123;&#125;:&#123;&#125;'</span>.format(a,[id(x) <span class="keyword">for</span> x <span class="keyword">in</span> a]))</span><br><span class="line">print(<span class="string">'修改后浅拷贝对象b--&#123;&#125;:&#123;&#125;'</span>.format(b,[id(x) <span class="keyword">for</span> x <span class="keyword">in</span> b]))</span><br></pre></td></tr></table></figure><pre><code>源对象a--[&apos;hello&apos;, [1, 2, 3]]:[2924681864392, 2924682934600]浅拷贝对象b--[&apos;hello&apos;, [1, 2, 3]]:[2924681864392, 2924682934600]修改浅拷贝对象b修改后源对象a--[&apos;hello&apos;, [1, 2, 3, 4]]:[2924681864392, 2924682934600]修改后浅拷贝对象b--[&apos;world&apos;, [1, 2, 3, 4]]:[2924682621760, 2924682934600]</code></pre><p>改变前后，可变的list地址都是一样的<br>改变前后，不变的str地址有变化</p><h2 id="深拷贝（新瓶装新酒）"><a href="#深拷贝（新瓶装新酒）" class="headerlink" title="深拷贝（新瓶装新酒）"></a>深拷贝（新瓶装新酒）</h2><p>深拷贝，完全拷贝了一个副本，容器内部元素地址都不一样</p><p>深拷贝是在另一块地址中创建一个新的变量或容器，同时容器内的元素的地址也是新开辟的，仅仅是值相同而已，是完全的副本。也就是说（ 新瓶装新酒 ）。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> copy <span class="keyword">import</span> deepcopy</span><br><span class="line">a = [<span class="string">'hello'</span>,[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]]</span><br><span class="line">b = deepcopy(a) <span class="comment">#深拷贝</span></span><br><span class="line">print(<span class="string">'源对象a--&#123;&#125;:&#123;&#125;'</span>.format(a,[id(x) <span class="keyword">for</span> x <span class="keyword">in</span> a]))</span><br><span class="line">print(<span class="string">'浅拷贝对象b--&#123;&#125;:&#123;&#125;'</span>.format(b,[id(x) <span class="keyword">for</span> x <span class="keyword">in</span> b]))</span><br><span class="line">print(<span class="string">'修改深拷贝对象b'</span>)</span><br><span class="line">b[<span class="number">0</span>] = <span class="string">'world'</span></span><br><span class="line">b[<span class="number">1</span>].append(<span class="number">4</span>)</span><br><span class="line">print(<span class="string">'修改后源对象a--&#123;&#125;:&#123;&#125;'</span>.format(a,[id(x) <span class="keyword">for</span> x <span class="keyword">in</span> a]))</span><br><span class="line">print(<span class="string">'修改后浅拷贝对象b--&#123;&#125;:&#123;&#125;'</span>.format(b,[id(x) <span class="keyword">for</span> x <span class="keyword">in</span> b]))</span><br></pre></td></tr></table></figure><pre><code>源对象a--[&apos;hello&apos;, [1, 2, 3]]:[2924681864392, 2924682934088]浅拷贝对象b--[&apos;hello&apos;, [1, 2, 3]]:[2924681864392, 2924681631816]修改深拷贝对象b修改后源对象a--[&apos;hello&apos;, [1, 2, 3]]:[2924681864392, 2924682934088]修改后浅拷贝对象b--[&apos;world&apos;, [1, 2, 3, 4]]:[2924682621200, 2924681631816]</code></pre><p>深拷贝就是将里面引用的对象重新创建了一遍并生成了一个新的一系列引用。</p><p>基本上是这样的，但是对于字符串、数字等不可修改的对象来说，重新创建一份似乎有点浪费内存，反正你到时要修改的时候都是新建对象，刷新引用的。所以还用原来的引用也无所谓，还能达到节省内存的目的。</p><p>所以上面的例子中，深拷贝后的b中第一个元素是字符串，所以还是用了原来的引用</p><p>元素不可变的保持原来的引用</p><p>元素可变的马上创建一个一模一样的</p><p>不可变的元素修改后创建新对象，再刷新引用</p><h2 id="浅拷贝的几种方式"><a href="#浅拷贝的几种方式" class="headerlink" title="浅拷贝的几种方式"></a>浅拷贝的几种方式</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分片表达式能返回一个新的对象拷贝</span></span><br><span class="line"></span><br><span class="line">L = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">C = L[<span class="number">1</span>:<span class="number">3</span>]</span><br><span class="line">C[<span class="number">0</span>] = <span class="number">8</span></span><br><span class="line">print(C)</span><br><span class="line">print(L)</span><br></pre></td></tr></table></figure><pre><code>[8, 3][1, 2, 3, 4, 5]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 字典的copy方法也能够实现字典的完全复制</span></span><br><span class="line"></span><br><span class="line">D = &#123;<span class="string">'a'</span>:<span class="number">1</span>, <span class="string">'b'</span>:<span class="number">2</span>&#125;</span><br><span class="line">B = D.copy()</span><br><span class="line">B[<span class="string">'a'</span>] = <span class="number">888</span></span><br><span class="line">print(B)</span><br><span class="line">print(D)</span><br></pre></td></tr></table></figure><pre><code>{&apos;a&apos;: 888, &apos;b&apos;: 2}{&apos;a&apos;: 1, &apos;b&apos;: 2}</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 内置函数list可以生成拷贝</span></span><br><span class="line"></span><br><span class="line">L = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line">C = list(L)</span><br><span class="line">C[<span class="number">0</span>] = <span class="number">888</span></span><br><span class="line">print(C)</span><br><span class="line">print(L)</span><br></pre></td></tr></table></figure><pre><code>[888, 2, 3, 4][1, 2, 3, 4]</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;赋值操作认识&quot;&gt;&lt;a href=&quot;#赋值操作认识&quot; class=&quot;headerlink&quot; title=&quot;赋值操作认识&quot;&gt;&lt;/a&gt;赋值操作认识&lt;/h2&gt;&lt;p&gt;1.赋值是将一个对象的地址赋值给一个变量，让变量指向该地址&lt;/p&gt;
&lt;p&gt;2.修改不可变对象（str、tuple）需要开辟新的空间&lt;/p&gt;
&lt;p&gt;3修改可变对象（list等）不需要开辟新的空间&lt;/p&gt;
&lt;h2 id=&quot;浅拷贝（-新瓶装旧酒-）&quot;&gt;&lt;a href=&quot;#浅拷贝（-新瓶装旧酒-）&quot; class=&quot;headerlink&quot; title=&quot;浅拷贝（ 新瓶装旧酒 ）&quot;&gt;&lt;/a&gt;浅拷贝（ 新瓶装旧酒 ）&lt;/h2&gt;&lt;p&gt;浅拷贝仅仅复制了容器中元素的地址&lt;/p&gt;
&lt;p&gt;浅拷贝是在另一块地址中创建一个新的变量或容器，但是容器内的元素的地址均是源对象的元素的地址的拷贝。也就是说新的容器中指向了旧的元素（ 新瓶装旧酒 ）&lt;/p&gt;
    
    </summary>
    
      <category term="Topics" scheme="http://yoursite.com/categories/Topics/"/>
    
    
      <category term="shallowcopy" scheme="http://yoursite.com/tags/shallowcopy/"/>
    
      <category term="deepcopy" scheme="http://yoursite.com/tags/deepcopy/"/>
    
  </entry>
  
  <entry>
    <title>Mutable and Immutable</title>
    <link href="http://yoursite.com/2018/04/27/mutable_immutable/"/>
    <id>http://yoursite.com/2018/04/27/mutable_immutable/</id>
    <published>2018-04-26T16:00:00.000Z</published>
    <updated>2018-05-07T08:47:01.100Z</updated>
    
    <content type="html"><![CDATA[<p>immutable指对象一经创建，即不可修改。对象是不是immutable取决于数据类型，比如</p><p>整型（integer）、字符串（string）和元组（tuple）都是immutable，</p><p>而列表（list）、字典（dictionary）、集合（set）都是mutable。</p><h3 id="不可变的元祖-tuple-immutable"><a href="#不可变的元祖-tuple-immutable" class="headerlink" title="不可变的元祖 tuple (immutable)"></a>不可变的元祖 tuple (immutable)</h3><p>tuple和list非常类似，但是tuple一旦初始化就不能修改</p><p>tuple不能变了，它也没有append()，insert()这样的方法。其他获取元素的方法和list是一样的，你可以正常地使用索引，但不能赋值成另外的元素。</p><p>不可变的tuple有什么意义？因为tuple不可变，所以代码更安全。如果可能，能用tuple代替list就尽量用tuple。</p><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">t = (<span class="number">1</span>, <span class="number">2</span>) <span class="comment"># 当你定义一个tuple时，在定义的时候，tuple的元素就必须被确定下来</span></span><br><span class="line">print(t)</span><br><span class="line"></span><br><span class="line">p = ()  <span class="comment"># 定义一个空的tuple</span></span><br><span class="line">print(type(p))</span><br><span class="line"></span><br><span class="line">c = (<span class="number">1</span>) <span class="comment">#  要定义一个只有1个元素的tuple，如果你这么定义</span></span><br><span class="line">print(type(c)) </span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">定义的不是tuple，是1这个数！这是因为括号()既可以表示tuple，又可以表示数学公式中的小括号，</span></span><br><span class="line"><span class="string">这就产生了歧义，因此，Python规定，这种情况下，按小括号进行计算，计算结果自然是1。</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line">a = (<span class="number">1</span>,)  <span class="comment">#所以只有1个元素的tuple定义时必须加一个逗号,，来消除歧义</span></span><br><span class="line">print(type(a))</span><br></pre></td></tr></table></figure><pre><code>(1, 2)&lt;class &apos;tuple&apos;&gt;&lt;class &apos;int&apos;&gt;&lt;class &apos;tuple&apos;&gt;</code></pre><h3 id="一个“可变的”tuple"><a href="#一个“可变的”tuple" class="headerlink" title="一个“可变的”tuple"></a>一个“可变的”tuple</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">t = (<span class="string">'a'</span>, <span class="string">'b'</span>, [<span class="string">'A'</span>, <span class="string">'B'</span>])</span><br><span class="line">print(<span class="string">'before change, this tuple is'</span>.format(t))</span><br><span class="line">t[<span class="number">2</span>][<span class="number">0</span>] = <span class="string">'X'</span></span><br><span class="line">t[<span class="number">2</span>][<span class="number">1</span>] = <span class="string">'Y'</span></span><br><span class="line">print(<span class="string">'after change,this tuple is'</span>.format(t))</span><br></pre></td></tr></table></figure><pre><code>before change, this tuple isafter change,this tuple is</code></pre><p>这个tuple定义的时候有3个元素，分别是’a’，’b’和一个list。不是说tuple一旦定义后就不可变了吗？怎么后来又变了？</p><p>表面上看，tuple的元素确实变了，但其实变的不是tuple的元素，而是list的元素。tuple一开始指向的list并没有改成别的list，所以，tuple所谓的“不变”是说，tuple的每个元素，指向永远不变。即指向’a’，就不能改成指向’b’，指向一个list，就不能改成指向其他对象，但指向的这个list本身是可变的！</p><p>理解了“指向不变”后，要创建一个内容也不变的tuple怎么做？那就必须保证tuple的每一个元素本身也不能变,就是immutable对象。</p><h3 id="可哈希-hashable"><a href="#可哈希-hashable" class="headerlink" title="可哈希 hashable"></a>可哈希 hashable</h3><p>哈希表是在一个关键字和一个较大的数据之间建立映射的表，能使对一个数据序列的访问过程更加迅速有效。用作查询的关键字必须唯一且固定不变，于是只有immutable的对象才可以作为关键字，也叫hashable.<br>如上所述，整型（integer）、字符串（string）和元组（tuple）都可以作为关键字，而list不可以。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">d = &#123;<span class="number">1</span>:<span class="number">2</span>, <span class="string">'Ben'</span>:<span class="number">123</span>, (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>):<span class="number">456</span>&#125;</span><br><span class="line">c = &#123;<span class="number">1</span>:<span class="number">2</span>, <span class="string">'Ben'</span>:<span class="number">123</span>, [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]:<span class="number">456</span>&#125; <span class="comment"># 报错，因为用做字典键的是可变的list</span></span><br></pre></td></tr></table></figure><pre><code>---------------------------------------------------------------------------TypeError                                 Traceback (most recent call last)&lt;ipython-input-9-9b59cc95aefa&gt; in &lt;module&gt;()      1 d = {1:2, &apos;Ben&apos;:123, (1,2,3):456}----&gt; 2 c = {1:2, &apos;Ben&apos;:123, [1,2,3]:456} # 报错，因为用做字典键的是可变的listTypeError: unhashable type: &apos;list&apos;</code></pre><h3 id="可变与不可变的特性"><a href="#可变与不可变的特性" class="headerlink" title="可变与不可变的特性"></a>可变与不可变的特性</h3><p>list列表是可变的，所以它的方法大多是就地修改，像 insert(),append(),extend()，sort(),reverse()然后没有返回，或者说返回值为None. pop()方法，它在末端删除一个元素，并可以将删除的元素作为返回值返回给调用者</p><p>tuple元祖是不可变的，所以它的方法大多无法就地修改，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">L = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">L = L.insert(<span class="number">6</span>,<span class="number">2</span>) </span><br><span class="line">print(L[<span class="number">2</span>])</span><br></pre></td></tr></table></figure><pre><code>---------------------------------------------------------------------------TypeError                                 Traceback (most recent call last)&lt;ipython-input-10-ad4d9f0257b3&gt; in &lt;module&gt;()      1 L = [1,2,3,4,5]      2 L = L.insert(6,2)----&gt; 3 print(L[2])TypeError: &apos;NoneType&apos; object is not subscriptable</code></pre><p>这里犯了一个常见的错误，因为我们说过插入是就地修改，而不是返回修改后的新列表。Insert方法的返回值是None，然后你把None值赋给了L，这样就底失去之前列表的引用。</p><p>给tuple元祖排序</p><p>1.先将其转化为列表，本地排序后再转化回元组：</p><p>list.sort() 列表方法就地修改，无返回值</p><p>2.内置sorted函数：</p><p>sorted(可迭代对象)函数，返回一个已经排好序的list序列</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">T = (<span class="string">'cc'</span>,<span class="string">'bb'</span>,<span class="string">'dd'</span>,<span class="string">'aa'</span>)</span><br><span class="line">tmp = list(T)</span><br><span class="line">tmp.sort()</span><br><span class="line">T = tuple(tmp)</span><br><span class="line">print(T)</span><br><span class="line"></span><br><span class="line">C = (<span class="string">'cc'</span>,<span class="string">'bb'</span>,<span class="string">'dd'</span>,<span class="string">'aa'</span>)</span><br><span class="line">print(sorted(C))</span><br><span class="line"></span><br><span class="line">[<span class="string">'aa'</span>, <span class="string">'bb'</span>, <span class="string">'cc'</span>, <span class="string">'dd'</span>]</span><br></pre></td></tr></table></figure><pre><code>(&apos;aa&apos;, &apos;bb&apos;, &apos;cc&apos;, &apos;dd&apos;)[&apos;aa&apos;, &apos;bb&apos;, &apos;cc&apos;, &apos;dd&apos;][&apos;aa&apos;, &apos;bb&apos;, &apos;cc&apos;, &apos;dd&apos;]</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;immutable指对象一经创建，即不可修改。对象是不是immutable取决于数据类型，比如&lt;/p&gt;
&lt;p&gt;整型（integer）、字符串（string）和元组（tuple）都是immutable，&lt;/p&gt;
&lt;p&gt;而列表（list）、字典（dictionary）、集合（set）都是mutable。&lt;/p&gt;
&lt;h3 id=&quot;不可变的元祖-tuple-immutable&quot;&gt;&lt;a href=&quot;#不可变的元祖-tuple-immutable&quot; class=&quot;headerlink&quot; title=&quot;不可变的元祖 tuple (immutable)&quot;&gt;&lt;/a&gt;不可变的元祖 tuple (immutable)&lt;/h3&gt;&lt;p&gt;tuple和list非常类似，但是tuple一旦初始化就不能修改&lt;/p&gt;
&lt;p&gt;tuple不能变了，它也没有append()，insert()这样的方法。其他获取元素的方法和list是一样的，你可以正常地使用索引，但不能赋值成另外的元素。&lt;/p&gt;
&lt;p&gt;不可变的tuple有什么意义？因为tuple不可变，所以代码更安全。如果可能，能用tuple代替list就尽量用tuple。&lt;/p&gt;
    
    </summary>
    
      <category term="Topics" scheme="http://yoursite.com/categories/Topics/"/>
    
    
      <category term="mutable" scheme="http://yoursite.com/tags/mutable/"/>
    
      <category term="immutable" scheme="http://yoursite.com/tags/immutable/"/>
    
  </entry>
  
  <entry>
    <title>Scope in Python</title>
    <link href="http://yoursite.com/2018/04/26/scope/"/>
    <id>http://yoursite.com/2018/04/26/scope/</id>
    <published>2018-04-25T16:00:00.000Z</published>
    <updated>2018-05-07T08:48:23.268Z</updated>
    
    <content type="html"><![CDATA[<p>Python中有作用域链，变量会由内到外找，先去自己作用域去找，自己没有再去上级去找，直到找不到报错</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">"lzl"</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f1</span><span class="params">()</span>:</span></span><br><span class="line">    name = <span class="string">"Eric"</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">f2</span><span class="params">()</span>:</span></span><br><span class="line">        name = <span class="string">"Snor"</span></span><br><span class="line">        print(name)</span><br><span class="line">    f2()</span><br><span class="line">f1()</span><br></pre></td></tr></table></figure><pre><code>Snor</code></pre><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">"lzl"</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f1</span><span class="params">()</span>:</span></span><br><span class="line">    name = <span class="string">"Eric"</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">f2</span><span class="params">()</span>:</span></span><br><span class="line">        print(name)</span><br><span class="line">    f2()</span><br><span class="line">f1()</span><br></pre></td></tr></table></figure><pre><code>Eric</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在函数未执行之前，作用域已经形成了，作用域链也生成了</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">"lzl"</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f1</span><span class="params">()</span>:</span></span><br><span class="line">    print(name)</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f2</span><span class="params">()</span>:</span></span><br><span class="line">    name = <span class="string">"eric"</span></span><br><span class="line">    f1()</span><br><span class="line"> </span><br><span class="line">f2()</span><br></pre></td></tr></table></figure><pre><code>lzl</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">"lzl"</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f1</span><span class="params">()</span>:</span></span><br><span class="line">    print(name)</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f2</span><span class="params">()</span>:</span></span><br><span class="line">    name = <span class="string">"eric"</span></span><br><span class="line">    <span class="keyword">return</span> f1</span><br><span class="line"> </span><br><span class="line">ret = f2()</span><br><span class="line">ret()</span><br></pre></td></tr></table></figure><pre><code>lzl</code></pre><h2 id="lambda-x-for-x-in-range-10"><a href="#lambda-x-for-x-in-range-10" class="headerlink" title="[lambda :x for x in range(10)]"></a>[lambda :x for x in range(10)]</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">li = [<span class="keyword">lambda</span> :x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>)]</span><br><span class="line">print(li)</span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> li:</span><br><span class="line">    print(f())</span><br></pre></td></tr></table></figure><pre><code>[&lt;function &lt;listcomp&gt;.&lt;lambda&gt; at 0x000001B9CE11F6A8&gt;, &lt;function &lt;listcomp&gt;.&lt;lambda&gt; at 0x000001B9CE11F620&gt;, &lt;function &lt;listcomp&gt;.&lt;lambda&gt; at 0x000001B9CE11F598&gt;, &lt;function &lt;listcomp&gt;.&lt;lambda&gt; at 0x000001B9CE11F2F0&gt;, &lt;function &lt;listcomp&gt;.&lt;lambda&gt; at 0x000001B9CE11F158&gt;, &lt;function &lt;listcomp&gt;.&lt;lambda&gt; at 0x000001B9CE11F268&gt;, &lt;function &lt;listcomp&gt;.&lt;lambda&gt; at 0x000001B9CE11F1E0&gt;, &lt;function &lt;listcomp&gt;.&lt;lambda&gt; at 0x000001B9CE11F488&gt;, &lt;function &lt;listcomp&gt;.&lt;lambda&gt; at 0x000001B9CE11F400&gt;, &lt;function &lt;listcomp&gt;.&lt;lambda&gt; at 0x000001B9CE0742F0&gt;]9999999999</code></pre><p>上面结果所有的都是9，而不是想当然的1-9<br>因为循环10次已经在生产list结束了，所以函数中的x向上找，找到了for循环结束的9<br>然后函数在没有执行前，内部代码不执行<br>上面代码实质如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">li = []</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>):    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">niming</span><span class="params">()</span>:</span> <span class="comment">#无参数的函数</span></span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line">    li.append(niming)</span><br><span class="line">print(li)</span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> li:</span><br><span class="line">    print(f())</span><br></pre></td></tr></table></figure><pre><code>[&lt;function niming at 0x000001B9CE0742F0&gt;, &lt;function niming at 0x000001B9CE074AE8&gt;, &lt;function niming at 0x000001B9CE074048&gt;, &lt;function niming at 0x000001B9CE074730&gt;, &lt;function niming at 0x000001B9CE10DF28&gt;, &lt;function niming at 0x000001B9CE10D730&gt;, &lt;function niming at 0x000001B9CE11F0D0&gt;, &lt;function niming at 0x000001B9CE11F378&gt;, &lt;function niming at 0x000001B9CE11F048&gt;, &lt;function niming at 0x000001B9CE11F9D8&gt;]9999999999</code></pre><h2 id="lambda-x-x-x-for-x-in-range-10"><a href="#lambda-x-x-x-for-x-in-range-10" class="headerlink" title="[lambda x=x:x for x in range(10)]"></a>[lambda x=x:x for x in range(10)]</h2><p>把代码稍微修改一下，观察结果</p><p><a href="https://stackoverflow.com/questions/12332500/x-lambda-x-for-x-in-range3-what-will-x0-return" target="_blank" rel="noopener">https://stackoverflow.com/questions/12332500/x-lambda-x-for-x-in-range3-what-will-x0-return</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">li = [<span class="keyword">lambda</span> x=x:x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>)]</span><br><span class="line"></span><br><span class="line">print(li)</span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> li:</span><br><span class="line">    print(f())</span><br></pre></td></tr></table></figure><pre><code>[&lt;function &lt;listcomp&gt;.&lt;lambda&gt; at 0x000001B9CE0748C8&gt;, &lt;function &lt;listcomp&gt;.&lt;lambda&gt; at 0x000001B9CE074510&gt;, &lt;function &lt;listcomp&gt;.&lt;lambda&gt; at 0x000001B9CE0741E0&gt;, &lt;function &lt;listcomp&gt;.&lt;lambda&gt; at 0x000001B9CE074AE8&gt;, &lt;function &lt;listcomp&gt;.&lt;lambda&gt; at 0x000001B9CE074A60&gt;, &lt;function &lt;listcomp&gt;.&lt;lambda&gt; at 0x000001B9CE11FE18&gt;, &lt;function &lt;listcomp&gt;.&lt;lambda&gt; at 0x000001B9CE11FEA0&gt;, &lt;function &lt;listcomp&gt;.&lt;lambda&gt; at 0x000001B9CE11FAE8&gt;, &lt;function &lt;listcomp&gt;.&lt;lambda&gt; at 0x000001B9CE11FB70&gt;, &lt;function &lt;listcomp&gt;.&lt;lambda&gt; at 0x000001B9CE11FBF8&gt;]0123456789</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">li = []</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>):    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">niming</span><span class="params">(x=x)</span>:</span> <span class="comment">#有参数，且是默认参数，所以下面f()不放参数也可以运行 为参数提供默认值，调用函数时可传可不传该默认参数的值</span></span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line">    li.append(niming)</span><br><span class="line">print(li)</span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> li:</span><br><span class="line">    print(f())</span><br></pre></td></tr></table></figure><pre><code>[&lt;function niming at 0x000001B9CE074AE8&gt;, &lt;function niming at 0x000001B9CE074048&gt;, &lt;function niming at 0x000001B9CE074730&gt;, &lt;function niming at 0x000001B9CE11F0D0&gt;, &lt;function niming at 0x000001B9CE11F378&gt;, &lt;function niming at 0x000001B9CE11F048&gt;, &lt;function niming at 0x000001B9CE10D6A8&gt;, &lt;function niming at 0x000001B9CE10DF28&gt;, &lt;function niming at 0x000001B9CE10D730&gt;, &lt;function niming at 0x000001B9CE128C80&gt;]0123456789</code></pre><h2 id="初探函数作用域"><a href="#初探函数作用域" class="headerlink" title="初探函数作用域"></a>初探函数作用域</h2><p>四个作用域：LEGB，即L本地作用域，E内嵌作用域，G全局作用域和B内置作用域。</p><p>在一个函数中定义的是本地作用域，而模块（也就是一个xxx.py文件）中定义的是全局作用域。而内置作用域，我们使用时是直接使用变量名而不需要导入任何模块，比如一些内置的函数名：print等等</p><p>全局作用域的作用范围仅限于单个文件，别被全局二字所迷惑，这里的全局指的是一个文件的顶层的变量名仅对于这个文件内部的代码而言是全局的，在python中听到全局，你就应该想到模块二字。</p><p>再说说本地作用域：每次对函数的调用都创建一个新的本地作用域，赋值的变量名除非声明为全局变量或非本地变量，否则均为本地变量。在默认的情况下，所有函数定义的内部变量名都位于本地作用域（与函数调用相关的）内。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">88</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></span><br><span class="line">    x = <span class="number">99</span></span><br><span class="line">    print(x)</span><br><span class="line"></span><br><span class="line">func()</span><br><span class="line">print(x)</span><br></pre></td></tr></table></figure><pre><code>9988</code></pre><p>在这一段程序中，本地变量名x覆盖了全局变量名x，此时本地和全局的两个变量虽然都叫x，但他们是完全不同的变量。</p><h2 id="L-E-G-B-变量索引机制"><a href="#L-E-G-B-变量索引机制" class="headerlink" title="L-E-G-B 变量索引机制"></a>L-E-G-B 变量索引机制</h2><p>当在python中使用某个变量名时，python按照L-E-G-B的顺序依次搜索四个作用域，L本地作用域，E即上一层def或者lambda的本地作用域，之后是全局作用域G，最后是内置作用域B，并且在第一处能找到作用名的地方停下来，如果变量名在这一次搜索中没有找到，python会报错。</p><p>变量的LEGB索引机制：对一个变量，首先在本地（函数内）查找；之后查找嵌套函数的本地作用域，然后再是查找当前的全局作用域，最后是内置作用域。</p><p>因此按照LEGB法则中规定的变量搜索顺序，在本地作用域中的变量名是会在本地作用域中覆盖在全局作用域和内置作用域中有相同变量名的变量，全局变量名会覆盖内置的同名变量名。</p><p>这里我们提到的只是在本地作用域去引用或者覆盖全局变量和内置变量。</p><p>但是，请注意！如果试图去修改，即在函数内部试图改变函数外部声明的值，那就得用global和nonlocal关键字了。</p><h3 id="global关键字"><a href="#global关键字" class="headerlink" title="global关键字"></a>global关键字</h3><p>之前我们说过python中的变量不用声明，直接赋值使用，但是这个global关键字看上去就像一个声明，但是他不是一个类型的声明，而是一个变量命名空间的声明，它告诉python函数打算生成一个或多个全局变量。应用他，就可以在函数内部对全局变量进行引用和修改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">88</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> x</span><br><span class="line">    x = <span class="number">99</span></span><br><span class="line"></span><br><span class="line">func()</span><br><span class="line">print(x)</span><br></pre></td></tr></table></figure><pre><code>99</code></pre><p>在这个例子中，我们对X加了一个global声明，以便在def之内引用并修改位于全局的变量x，而不是产生一个新的本地变量x并将其覆盖</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">x,y,z = <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">all_global</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> x</span><br><span class="line">    x = y + z</span><br><span class="line"></span><br><span class="line">all_global()</span><br><span class="line">print(x)</span><br></pre></td></tr></table></figure><pre><code>5</code></pre><p>这个例子中，x，y，z都是全局变量，y和z只是引用值，而对于x，我们想改变他的值，因此用了global进行引用声明。</p><h3 id="嵌套函数的本地作用域-E"><a href="#嵌套函数的本地作用域-E" class="headerlink" title="嵌套函数的本地作用域 E"></a>嵌套函数的本地作用域 E</h3><p>python有一个很有意思的地方，就是def函数可以嵌套在另一个def函数之中。调用外层函数时，运行到的内层def语句仅仅是完成对内层函数的定义，而不会去调用内层函数，除非在嵌套函数之后又显式的对其进行调用。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">99</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f1</span><span class="params">()</span>:</span></span><br><span class="line">    x = <span class="number">88</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">f2</span><span class="params">()</span>:</span></span><br><span class="line">        print(x)</span><br><span class="line">    f2()</span><br><span class="line"></span><br><span class="line">f1()</span><br></pre></td></tr></table></figure><pre><code>88</code></pre><h3 id="嵌套作用域的一个特殊之处"><a href="#嵌套作用域的一个特殊之处" class="headerlink" title="嵌套作用域的一个特殊之处"></a>嵌套作用域的一个特殊之处</h3><p>本地作用域在函数结束后就立即失效，而嵌套作用域在嵌套的函数返回后却仍然有效。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f1</span><span class="params">()</span>:</span></span><br><span class="line">    x = <span class="number">88</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">f2</span><span class="params">()</span>:</span></span><br><span class="line">        print(x)</span><br><span class="line">    <span class="keyword">return</span> f2</span><br><span class="line"></span><br><span class="line">action = f1()</span><br><span class="line">action()</span><br></pre></td></tr></table></figure><pre><code>88</code></pre><p>这个例子非常重要，也很有意思，函数f1中定义了函数f2，f2引用了f1嵌套作用域内的变量x，并且f1将函数f2作为返回对象进行返回。最值得注意的是我们通过变量action获取了返回的f2，虽然此时f1函数已经退出结束了，但是f2仍然记住了f1嵌套作用域内的变量名x。</p><p>上面这种语言现象称之为闭包：一个能记住嵌套作用域变量值的函数，尽管作用域已经不存在。</p><h2 id="工厂函数"><a href="#工厂函数" class="headerlink" title="工厂函数"></a>工厂函数</h2><p>这里有一个应用就是工厂函数，工厂函数定义了一个外部的函数，这个函数简单的生成并返回一个内嵌的函数，仅仅是返回却不调用，因此通过调用这个工厂函数，可以得到内嵌函数的一个引用，内嵌函数就是通过调用工厂函数时，运行内部的def语句而创建的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">maker</span><span class="params">(n)</span>:</span></span><br><span class="line">    k = <span class="number">8</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">action</span><span class="params">(x)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> x ** n + k</span><br><span class="line">    <span class="keyword">return</span> action</span><br><span class="line"></span><br><span class="line">f = maker(<span class="number">2</span>)</span><br><span class="line">print(f)</span><br></pre></td></tr></table></figure><pre><code>&lt;function maker.&lt;locals&gt;.action at 0x000001B9CE10DF28&gt;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">maker</span><span class="params">(n)</span>:</span></span><br><span class="line">    k = <span class="number">8</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">action</span><span class="params">(x)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> x ** n + k</span><br><span class="line">    <span class="keyword">return</span> action</span><br><span class="line"></span><br><span class="line">f = maker(<span class="number">2</span>)</span><br><span class="line">print(f(<span class="number">4</span>))</span><br></pre></td></tr></table></figure><pre><code>24</code></pre><p>这里我们可以看出，内嵌的函数action记住了嵌套作用域内得两个嵌套变量，一个是变量k，一个是参数n，即使后面maker返回并退出。我们通过调用外部的函数maker，得到内嵌的函数action的引用。这种函数嵌套的方法在后面要介绍的装饰器中会经常用到。这种嵌套作用域引用，就是python的函数能够保留状态信息的主要方法了。</p><h2 id="关键字nonlocal"><a href="#关键字nonlocal" class="headerlink" title="关键字nonlocal"></a>关键字nonlocal</h2><p>本地函数通过global声明对全局变量进行引用修改，那么对应的，内嵌函数内部想对嵌套作用域中的变量进行修改，就要使用nonlocal进行声明。</p><p>不是一个类型的声明，而是一个变量命名空间的声明</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">88</span> <span class="comment">#全局变量</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> x  <span class="comment"># 本地函数对全局变量修改，要用 global 声明 </span></span><br><span class="line">    x = <span class="number">99</span></span><br><span class="line"></span><br><span class="line">func()</span><br><span class="line">print(x)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">(num)</span>:</span></span><br><span class="line">    in_num = num <span class="comment"># 嵌套作用域中的变量 </span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">nested</span><span class="params">(label)</span>:</span></span><br><span class="line">        <span class="keyword">nonlocal</span> in_num <span class="comment">#内嵌函数对嵌套作用域中的变量修改</span></span><br><span class="line">        in_num += <span class="number">1</span></span><br><span class="line">        print(label, in_num)</span><br><span class="line">    <span class="keyword">return</span> nested</span><br><span class="line"></span><br><span class="line">F = test(<span class="number">0</span>)<span class="comment"># test函数已经退出调用，但F仍然记着变量in_num </span></span><br><span class="line">print(F)</span><br><span class="line">F(<span class="string">'a'</span>) <span class="comment">#由于我们使用了nonlocal，就可以在nested函数内修改它</span></span><br><span class="line">F(<span class="string">'a'</span>) <span class="comment">#前面 in_num 已经修改成 1</span></span><br><span class="line">F(<span class="string">'a'</span>) <span class="comment">#前面 in_num 已经修改成 2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">G = test(<span class="number">100</span>) </span><br><span class="line">G(<span class="string">'mm'</span>)</span><br><span class="line"><span class="comment"># 多次调用工厂函数返回的不同内嵌函数副本F和G，彼此间的内嵌变量in_num是彼此独立隔离的。</span></span><br></pre></td></tr></table></figure><pre><code>&lt;function test.&lt;locals&gt;.nested at 0x0000026EBB2B4BF8&gt;a 1a 2a 3mm 101</code></pre><p>我们在nested函数中通过nonlocal关键字引用了内嵌作用域中的变量in_num，那么我们就可以在nested函数中修改他，即使test函数已经退出调用，这个“记忆”依然有效。</p><p>对比下面的例子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">(num)</span>:</span></span><br><span class="line">    in_num = num <span class="comment"># 嵌套作用域中的变量</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">nested</span><span class="params">(label)</span>:</span></span><br><span class="line">        print(label, in_num) <span class="comment">#本地（函数内）作用域</span></span><br><span class="line">    <span class="keyword">return</span> nested</span><br><span class="line"></span><br><span class="line">F = test(<span class="number">0</span>)<span class="comment"># test函数已经退出调用，但F仍然记着变量in_num </span></span><br><span class="line">print(F)</span><br><span class="line">F(<span class="string">'a'</span>) <span class="comment">#本地作用域中的 in_num 引用了嵌套作用域中的变量 in_num</span></span><br><span class="line">F(<span class="string">'a'</span>) <span class="comment">#in_mun 只是引用，不能修改，所以一直都是0</span></span><br><span class="line">F(<span class="string">'a'</span>) <span class="comment">#in_mun 只是引用，不能修改，所以一直都是0</span></span><br></pre></td></tr></table></figure><pre><code>&lt;function test.&lt;locals&gt;.nested at 0x0000026EBB2B4A60&gt;a 0a 0a 0</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Python中有作用域链，变量会由内到外找，先去自己作用域去找，自己没有再去上级去找，直到找不到报错&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;name = &lt;span class=&quot;string&quot;&gt;&quot;lzl&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f1&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name = &lt;span class=&quot;string&quot;&gt;&quot;Eric&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f2&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        name = &lt;span class=&quot;string&quot;&gt;&quot;Snor&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    f2()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f1()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;Snor
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Topics" scheme="http://yoursite.com/categories/Topics/"/>
    
    
      <category term="scope" scheme="http://yoursite.com/tags/scope/"/>
    
  </entry>
  
</feed>
